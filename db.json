{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/umami-view.js","path":"js/umami-view.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1746604086716},{"_id":"source/about/index.md","hash":"78408dbde4cae61725f324bc052cc91e269d92cb","modified":1746604418176},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1746604135279},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1746604135205},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"ff9b0e1fb9dba665af2f1e4a577f8cb9e840464b","modified":1746604135252},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"e62d2e25cae57e8469e3f48c9d17be1fd284a969","modified":1746604135281},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"7746460fc2eba7439b494c46aa9b5ded81370819","modified":1746604135252},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"58dccef1d98b472dc4e6f4693c2297b0c9c5afba","modified":1746604135281},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"9c580471257f5a32bee701a059a45ea96755dcdc","modified":1746604135282},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"7c1a0c9f6186b6643b19d3980f055329bdb4efa4","modified":1746604135282},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"026ddf1a49bf8ddfef6ed86ab4d6af143c1dd95f","modified":1746604135283},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"550b95d3614a64592f02666938d235e9f11e449e","modified":1746604135290},{"_id":"node_modules/hexo-theme-fluid/languages/ru.yml","hash":"93818f8bf07195fb1ebffbb5210e531b0e3a6ec4","modified":1746604135298},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"a60847136709bb95586a98d9d67b50390a8d2c96","modified":1746604135305},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"51c2b4d64c6992a39bfd2586a1bdf5fbbbdf0175","modified":1746604135307},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"e1043de394f6dcf5c0647adcfdefe60637f78426","modified":1746604135308},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1746604135208},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"052e9fc19c753f53fdc083c7fb098e3668880140","modified":1746604135209},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1746604135211},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1746604135213},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1746604135215},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"33c3317cdcee062789de2336dd8d0cc7f86d3650","modified":1746604135222},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1746604135222},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1746604135222},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1746604135225},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"9bf0d357a607a282f3b9cb04525a4df0cc2a8b76","modified":1746604135226},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1746604135228},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1746604135229},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1746604135211},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1746604135214},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1746604135215},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1746604135216},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"1dadb118d580280524ed0a5f69bd34d234a92276","modified":1746604135217},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"40c8b0852873032e7aaef3f68e8ea08706cdef13","modified":1746604135219},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"67be642f99482c07904474f410cfbc2f99003288","modified":1746604135220},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1746604135221},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1746604135223},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1746604135226},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1746604135227},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1746604135227},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1746604135242},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1746604135237},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1746604135246},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"82bb06686158ebe160a631c79f156cd4fde35656","modified":1746604135248},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/index-generator.js","hash":"9159fc22fa84a7b605dd15fe4104f01fe9c71147","modified":1746604135242},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"9ac5ddad06e9b0e6015ce531430018182a4bc0fa","modified":1746604135245},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d3e75f53c59674d171309e50702954671f31f1a4","modified":1746604135248},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1746604135236},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1746604135237},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"8e67b522c47aa250860e3fe2c733f1f958a506c0","modified":1746604135238},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1746604135241},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1746604135243},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1746604135247},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1746604135249},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1746604135250},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"966689d7c5e4320008285395fbaa2751f6209be5","modified":1746604135251},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"4d48c424e47ff9a17a563167ea5f480890267adf","modified":1746604135251},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1746604135233},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"6eaf53cf4bfc756a65bda18184cf8998a12c861d","modified":1746604135233},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/fold.js","hash":"73e4fd12ce3e47981479391ed354b7d9d3279f70","modified":1746604135239},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1746604135239},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1746604135244},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1746604135246},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"e3b456a079e5dc0032473b516c865b20f83d2c26","modified":1746604135247},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1746604135234},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/crypto.js","hash":"ae4ad8a188ef5b3fa6818b01629fc962b3de8551","modified":1746604135235},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1746604135247},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1746604135249},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1746604135250},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1746604135206},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1746604135269},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1746604135270},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1746604135273},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1746604135252},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1746604135255},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1746604135231},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1746604135257},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1746604135232},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"1ef88c881b9f942deadde3d890387b94c617342a","modified":1746604135233},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"6869811f67e4c3de3edfa4b08464bb242b97a402","modified":1746604135237},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1746604135241},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1746604135245},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1746604135245},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1746604135248},{"_id":"node_modules/hexo-theme-fluid/source/js/umami-view.js","hash":"33c4b3883fa747604074ad3921606eeeaeb50716","modified":1746604135249},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1746604135251},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1746604135280},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1746604135215},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1746604135218},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/discuss.ejs","hash":"98d065b58ce06b7d18bff3c974e96fa0f34ae03a","modified":1746604135218},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1746604135218},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1746604135219},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1746604135220},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1746604135223},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1746604135226},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"d84bcb5ccd78470a60c067fc914ac0ac67ac8777","modified":1746604135229},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1746604135230},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1746604135230},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"3d08c73b77e412d2f06a24d9344565fc7dbc76f8","modified":1746604135231},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1746604135213},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"954a29b58d72647d20450da270b5d8fb2e0824f5","modified":1746604135228},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1746604135212},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"37d750428772d7c71ba36ce0c2540780d90fadea","modified":1746604135225},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"e6dcbf1c2f56314d56bb46b50aca86ff68cacebd","modified":1746604135210},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1746604135210},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1746604135216},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"0fff24cf5bf99fbe5c56c292e2eac4a89bf29db4","modified":1746604135219},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1746604135219},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1746604135221},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1746604135223},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"03ac02762f801970d1c4e73d6ec8d4c503780e50","modified":1746604135224},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/moment.ejs","hash":"4ff3fb1b60ccc95a0af3bbdbd0757fedefc088b5","modified":1746604135225},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1746604135225},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"f345374885cd6a334f09a11f59c443b5d577c06c","modified":1746604135230},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1746604135214},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"cbfa32c5f5973133afd043853b24f8200455cb2d","modified":1746604135217},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"375974ec017696e294dc12469fb0ae257800dc2d","modified":1746604135224},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"54dd479dbb440126e4ddd9d902229db5afaaae98","modified":1746604135224},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1746604135227},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1746604135228},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1746604135229},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1746604135235},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"c19ac8050b82c3676b0332a56099ccfcc36d9d52","modified":1746604135239},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"bd8376e1cf7892dc2daa58f2f443574be559fdbf","modified":1746604135240},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"a5fe1deccb73b5f578797dbb11038efc15f63ce8","modified":1746604135240},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1746604135243},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1746604135244},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1746604135246},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1746604135262},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1746604135263},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1746604135276},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1746604135264},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1746604135261},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1746604135263},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"85492ef64d7e5f70f0f7e46d570bbc911e686d7e","modified":1746604135267},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1746604135271},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1746604135271},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/print.styl","hash":"166afbc596ea4b552bad7290ec372d25ec34db7b","modified":1746604135277},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1746604135265},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1746604135266},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1746604135266},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1746604135258},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"25fb6fa4c783b847c632584c49a7e1593cdb2f5d","modified":1746604135271},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1746604135273},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1746604135267},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1746604135269},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1746604135274},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"7eee3f78296a3c81849a5415d1d43dcc6e03e6aa","modified":1746604135276},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"c96d36aa8fe20f0c3c1a29ee2473cd8064b10f73","modified":1746604135277},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1746604135279},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1746604135260},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1746604135261},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1746604135264},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1746604135266},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1746604135268},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1746604135268},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1746604135274},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"d42b748f2f49ef32aafb1a21d75991d2459da927","modified":1746604135269},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1746604135268},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1746604135275},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1746604135275},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1746604135276},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1746604135277},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1746604135278},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1746604135278},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1746604135280},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1746604135254},{"_id":"public/local-search.xml","hash":"ff7d046a8e2d6d4fe2b0c2917e82ef971f7c66aa","modified":1746604512963},{"_id":"public/about/index.html","hash":"4376d273591bfaf3eab6d00ebdfc0e43ac0ecd4c","modified":1746604512963},{"_id":"public/2025/05/07/hello-world/index.html","hash":"c2ab0c3437723e2c80180776c001be117414d838","modified":1746604512963},{"_id":"public/archives/index.html","hash":"021780a9c825203ddc9b30e4f9949ece9dfb86cd","modified":1746604512963},{"_id":"public/archives/2025/index.html","hash":"7693bb89ae2b35050080909da694bec4e7cd73bd","modified":1746604512963},{"_id":"public/archives/2025/05/index.html","hash":"615875949fbcadcada635a8979ac92aa5d6573ef","modified":1746604512963},{"_id":"public/index.html","hash":"cd88028e35781ba09b42724fae46583b0e281b2d","modified":1746604512963},{"_id":"public/404.html","hash":"7c78c52282d3ccce0c339dcfbe2dbc78aff91016","modified":1746604512963},{"_id":"public/tags/index.html","hash":"a6f7fab63331189a834fe73b6c4d9279a4e1efea","modified":1746604512963},{"_id":"public/categories/index.html","hash":"21ca562485e551b74816ff634defa10d7a62c002","modified":1746604512963},{"_id":"public/links/index.html","hash":"b795664104ba5abe740c78e784d96a41425a8579","modified":1746604512963},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1746604512963},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1746604512963},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1746604512963},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1746604512963},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1746604512963},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1746604512963},{"_id":"public/css/highlight-dark.css","hash":"902294bada4323c0f51502d67cba8c3a0298952f","modified":1746604512963},{"_id":"public/css/highlight.css","hash":"04d4ddbb5e1d1007447c2fe293ee05aae9b9563e","modified":1746604512963},{"_id":"public/css/main.css","hash":"14ebd9b515085666cee29bbcbe362ad3604ab62a","modified":1746604512963},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1746604512963},{"_id":"public/js/color-schema.js","hash":"1ef88c881b9f942deadde3d890387b94c617342a","modified":1746604512963},{"_id":"public/js/events.js","hash":"6869811f67e4c3de3edfa4b08464bb242b97a402","modified":1746604512963},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1746604512963},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1746604512963},{"_id":"public/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1746604512963},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1746604512963},{"_id":"public/js/umami-view.js","hash":"33c4b3883fa747604074ad3921606eeeaeb50716","modified":1746604512963},{"_id":"public/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1746604512963},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1746604512963},{"_id":"source/_posts/Qdrant详解.md","hash":"1e2bf893b1cfc8eb0b4551d4c8234bc3d9909513","modified":1746667187674},{"_id":"source/_posts/图片/Doris架构.png","hash":"fc7eba6b83fb40a600ebbbbf9fd6522b18e087fb","modified":1746605020216},{"_id":"source/_posts/图片/dm-show.png","hash":"35f51a89668d0506d41fb9952ff3816d4e750994","modified":1746605015654},{"_id":"source/_posts/图片/dm-tip.png","hash":"526dc69914ff6136e21edea4a2cdc72b109b9b2d","modified":1746605015852},{"_id":"source/_posts/图片/dm-主节点的数据库.png","hash":"f4625fa450f6b3a7fa5ab31d56127b2155bb8599","modified":1746605016257},{"_id":"source/_posts/图片/dm-主从切换.png","hash":"1c6c257fd3d08eeb9d1b2fa7a7fa15f7b358ea22","modified":1746605016082},{"_id":"source/_posts/图片/dm-非确认监视器.png","hash":"c90e04d51e6cd4ebc76b59d2a9c9ef34275392ce","modified":1746605016448},{"_id":"source/_posts/图片/doris-Unique.png","hash":"b5f8105975ff94a98631d42a9e6c06b0f6160879","modified":1746605018866},{"_id":"source/_posts/图片/doris-be故障-1.webp","hash":"d1e7337e1c6a9870eb564d571704d8f84b69b584","modified":1746605017009},{"_id":"source/_posts/图片/doris-be故障-2.webp","hash":"034b275c951b0d4e046306115a1f4d2ca556cd3a","modified":1746605017230},{"_id":"source/_posts/图片/doris-be故障-3.webp","hash":"259017cf483d85abc64e3aaa169f1d88917a88fa","modified":1746605017369},{"_id":"source/_posts/图片/doris-be故障.webp","hash":"dc74bd9e5417217ac5e20d03ea64a85c632990a6","modified":1746605017530},{"_id":"source/_posts/图片/mongo-_id键的组成.png","hash":"9cffd8d9593fb52d129ad801b630ddaa6470924f","modified":1746605020520},{"_id":"source/_posts/图片/mongo-一分片一区间.png","hash":"8df7b1381557bb9bc170d8ab3ecf987fc26ee685","modified":1746605020597},{"_id":"source/_posts/图片/mongo-一分片多区间.png","hash":"a0a9aec144b1a6b39f805afa7117d818737606ee","modified":1746605020791},{"_id":"source/_posts/图片/mongodb-成员角色.png","hash":"96891ec17a4dc8cfbc455d9ad602b3df1e3bffe6","modified":1746605021708},{"_id":"source/_posts/图片/mongodb文档.png","hash":"0821104e9705b05cdfaa958c259f4dd6b585f246","modified":1746605021812},{"_id":"source/_posts/图片/两地三中心主-备部署.png","hash":"13c08e9468a7738ddc1fd5067b5002d85f328e25","modified":1746605024336},{"_id":"source/_posts/图片/三地五中心五副本部署.png","hash":"cb568f06e46cb0cd814038449c5073e71c0e5dbd","modified":1746605022917},{"_id":"source/_posts/图片/同城三机房三副本部署.png","hash":"29bdef2cd70216f78cc5f86cd1929b06776c6dad","modified":1746605024549},{"_id":"source/_posts/图片/同城两机房主-备部署.png","hash":"30fa573c94c6668c07b7ee374283a392e86cf12d","modified":1746605024564},{"_id":"source/_posts/图片/达梦-集群信息.png","hash":"8330cc4afc8350d79dd2d376464e2f398438ac6e","modified":1746605025132},{"_id":"source/_posts/图片/OceanBase基础概念.png","hash":"71a1bcbae80ff82d9e0647999431f4de03637448","modified":1746605021941},{"_id":"source/_posts/图片/doris-Aggregate.png","hash":"0429c92a9f515adefc5ae6b5159874454caefcd8","modified":1746605016888},{"_id":"source/_posts/图片/doris-下载.png","hash":"69de8f610abc4f05b83d85aacb78ad9e0b68ee23","modified":1746605020045},{"_id":"source/_posts/图片/mongo-分片.png","hash":"aea1de1d70725eda94d78aa2f64dac62f132b4d5","modified":1746605020981},{"_id":"source/_posts/图片/mongo-分片集群架构.png","hash":"acb1a3728276d0649c8245f12cd6b3cce33e797d","modified":1746605021119},{"_id":"source/_posts/图片/mongo-副本集分片集群架构.png","hash":"65f435fb335d4a6ef0d5c87338f24c520acd2bd0","modified":1746605021376},{"_id":"source/_posts/图片/cassandra-cqlsh.png","hash":"96ff5c08259441ba4011ff71d0973f03e3912197","modified":1746605015434},{"_id":"source/_posts/图片/doris-fe故障.png","hash":"9c25fff1f7f9078f7ddea3201e2f9d2dd5accab9","modified":1746605017885},{"_id":"source/_posts/图片/mongo-查数.png","hash":"e2c423ffe782fb65ab48e5fe0639f2cfe9cf8519","modified":1746605021542},{"_id":"source/_posts/图片/doris-web.png","hash":"d85ed933d3244da0fb114805d5eef709ed889f0e","modified":1746605019849},{"_id":"source/_posts/图片/达梦架构图.png","hash":"607a5f7e135f2be5c0ef3eec7a8e662c6b34bf47","modified":1746605027309},{"_id":"source/_posts/图片/矢量数据库.png","hash":"7a8e19f7abd654c2ac421142375f84b991a84ca8","modified":1746605025924},{"_id":"source/_posts/图片/qdrant架构.png","hash":"9d60c03d69d509e54fd76e2bed45005c48daf1ce","modified":1746605024335},{"_id":"source/_posts/Doris详解.md","hash":"38e38c70e8b40543ce9d9a7440b42d86c1bff5e0","modified":1746609395415},{"_id":"source/_posts/images/Doris架构.png","hash":"fc7eba6b83fb40a600ebbbbf9fd6522b18e087fb","modified":1746605020216},{"_id":"source/_posts/images/dm-show.png","hash":"35f51a89668d0506d41fb9952ff3816d4e750994","modified":1746605015654},{"_id":"source/_posts/images/dm-tip.png","hash":"526dc69914ff6136e21edea4a2cdc72b109b9b2d","modified":1746605015852},{"_id":"source/_posts/images/dm-主从切换.png","hash":"1c6c257fd3d08eeb9d1b2fa7a7fa15f7b358ea22","modified":1746605016082},{"_id":"source/_posts/images/dm-主节点的数据库.png","hash":"f4625fa450f6b3a7fa5ab31d56127b2155bb8599","modified":1746605016257},{"_id":"source/_posts/images/dm-非确认监视器.png","hash":"c90e04d51e6cd4ebc76b59d2a9c9ef34275392ce","modified":1746605016448},{"_id":"source/_posts/images/doris-Unique.png","hash":"b5f8105975ff94a98631d42a9e6c06b0f6160879","modified":1746605018866},{"_id":"source/_posts/images/doris-be故障-1.webp","hash":"d1e7337e1c6a9870eb564d571704d8f84b69b584","modified":1746605017009},{"_id":"source/_posts/images/doris-be故障-2.webp","hash":"034b275c951b0d4e046306115a1f4d2ca556cd3a","modified":1746605017230},{"_id":"source/_posts/images/doris-be故障-3.webp","hash":"259017cf483d85abc64e3aaa169f1d88917a88fa","modified":1746605017369},{"_id":"source/_posts/images/doris-be故障.webp","hash":"dc74bd9e5417217ac5e20d03ea64a85c632990a6","modified":1746605017530},{"_id":"source/_posts/images/mongo-_id键的组成.png","hash":"9cffd8d9593fb52d129ad801b630ddaa6470924f","modified":1746605020520},{"_id":"source/_posts/images/mongo-一分片一区间.png","hash":"8df7b1381557bb9bc170d8ab3ecf987fc26ee685","modified":1746605020597},{"_id":"source/_posts/images/mongo-一分片多区间.png","hash":"a0a9aec144b1a6b39f805afa7117d818737606ee","modified":1746605020791},{"_id":"source/_posts/images/mongodb-成员角色.png","hash":"96891ec17a4dc8cfbc455d9ad602b3df1e3bffe6","modified":1746605021708},{"_id":"source/_posts/images/mongodb文档.png","hash":"0821104e9705b05cdfaa958c259f4dd6b585f246","modified":1746605021812},{"_id":"source/_posts/images/三地五中心五副本部署.png","hash":"cb568f06e46cb0cd814038449c5073e71c0e5dbd","modified":1746605022917},{"_id":"source/_posts/images/两地三中心主-备部署.png","hash":"13c08e9468a7738ddc1fd5067b5002d85f328e25","modified":1746605024336},{"_id":"source/_posts/images/同城三机房三副本部署.png","hash":"29bdef2cd70216f78cc5f86cd1929b06776c6dad","modified":1746605024549},{"_id":"source/_posts/images/同城两机房主-备部署.png","hash":"30fa573c94c6668c07b7ee374283a392e86cf12d","modified":1746605024564},{"_id":"source/_posts/images/达梦-集群信息.png","hash":"8330cc4afc8350d79dd2d376464e2f398438ac6e","modified":1746605025132},{"_id":"source/_posts/images/OceanBase基础概念.png","hash":"71a1bcbae80ff82d9e0647999431f4de03637448","modified":1746605021941},{"_id":"source/_posts/images/doris-Aggregate.png","hash":"0429c92a9f515adefc5ae6b5159874454caefcd8","modified":1746605016888},{"_id":"source/_posts/images/doris-下载.png","hash":"69de8f610abc4f05b83d85aacb78ad9e0b68ee23","modified":1746605020045},{"_id":"source/_posts/images/mongo-分片.png","hash":"aea1de1d70725eda94d78aa2f64dac62f132b4d5","modified":1746605020981},{"_id":"source/_posts/images/mongo-分片集群架构.png","hash":"acb1a3728276d0649c8245f12cd6b3cce33e797d","modified":1746605021119},{"_id":"source/_posts/images/mongo-副本集分片集群架构.png","hash":"65f435fb335d4a6ef0d5c87338f24c520acd2bd0","modified":1746605021376},{"_id":"source/_posts/images/cassandra-cqlsh.png","hash":"96ff5c08259441ba4011ff71d0973f03e3912197","modified":1746605015434},{"_id":"source/_posts/images/doris-fe故障.png","hash":"9c25fff1f7f9078f7ddea3201e2f9d2dd5accab9","modified":1746605017885},{"_id":"source/_posts/images/mongo-查数.png","hash":"e2c423ffe782fb65ab48e5fe0639f2cfe9cf8519","modified":1746605021542},{"_id":"source/_posts/images/doris-web.png","hash":"d85ed933d3244da0fb114805d5eef709ed889f0e","modified":1746605019849},{"_id":"source/_posts/images/达梦架构图.png","hash":"607a5f7e135f2be5c0ef3eec7a8e662c6b34bf47","modified":1746605027309},{"_id":"source/_posts/images/矢量数据库.png","hash":"7a8e19f7abd654c2ac421142375f84b991a84ca8","modified":1746605025924},{"_id":"source/_posts/images/qdrant架构.png","hash":"9d60c03d69d509e54fd76e2bed45005c48daf1ce","modified":1746605024335},{"_id":"source/_posts/images/Doris.png","hash":"fc7eba6b83fb40a600ebbbbf9fd6522b18e087fb","modified":1746605020216}],"Category":[{"name":"数据库","_id":"cmadq4ywa00003fb8fawj0gz9"}],"Data":[],"Page":[{"title":"about","layout":"about","date":"2025-05-07T07:51:34.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\nlayout: about\ndate: 2025-05-07 15:51:34\n---\n","updated":"2025-05-07T07:53:38.176Z","path":"about/index.html","comments":1,"_id":"cmadn8bpf0000d5b8cx1wdwzz","content":"","excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2025-05-07T07:48:06.716Z","updated":"2025-05-07T07:48:06.716Z","comments":1,"layout":"post","photos":[],"_id":"cmadn8bpk0001d5b8czg1e0w8","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"Doris详解","_content":"### 一、 Doris简介\n\n```\nDoris 中文官方文档：https://doris.apache.org/zh-CN/docs/dev/summary/basic-summary\n```\n\n#### 1.1 Doris概述\n\n```\n Apache Doris 是一个基于 MPP 架构的高性能、实时的分析型数据库，以极速易用的特点被人们所熟知，仅需亚秒级响应时间即可返回海量数据下的查询结果，不仅可以支持高并发的点查询场景，也能支持高吞吐的复杂分析场景。基于此，Apache Doris 能够较好的满足报表分析、即席查询、统一数仓构建、数据湖联邦查询加速等使用场景，用户可以在此之上构建用户行为分析、AB 实验平台、日志检索分析、用户画像分析、订单分析等应用\n\n​ Apache Doris 最早是诞生于百度广告报表业务的 Palo 项目，2017 年正式对外开源，2018 年 7 月由百度捐赠给 Apache 基金会进行孵化，之后在 Apache 导师的指导下由孵化器项目管理委员会成员进行孵化和运营。目前 Apache Doris 社区已经聚集了来自不同行业数百家企业的 400 余位贡献者，并且每月活跃贡献者人数也超过 100 位。 2022 年 6 月，Apache Doris 成功从 Apache 孵化器毕业，正式成为 Apache 顶级项目（Top-Level Project，TLP）\n\n​ Apache Doris 如今在中国乃至全球范围内都拥有着广泛的用户群体，截止目前， Apache Doris 已经在全球超过 2000 家企业的生产环境中得到应用，在中国市值或估值排行前 50 的互联网公司中，有超过 80% 长期使用 Apache Doris，包括百度、美团、小米、京东、字节跳动、腾讯、网易、快手、微博、贝壳等。同时在一些传统行业如金融、能源、制造、电信等领域也有着丰富的应用\n```\n\n#### 1.2 Doris使用场景\n\nDoris数据库是一个分布式列式存储和查询系统，主要用于实时分析和查询海量数据。它适用于以下场景：\n\n```\n1.实时分析：Doris数据库可以快速查询和分析海量数据，支持实时查询和聚合操作，可以帮助企业快速做出决策并调整业务策略。\n\n2.大数据仓库：Doris数据库可以作为企业的数据仓库，存储大规模的数据，并提供高效的查询和分析能力，帮助企业更好地理解和利用数据。\n\n3.日志存储和分析：Doris数据库可以快速存储和分析实时生成的日志数据，支持实时查询和聚合操作，帮助企业及时发现和解决问题。\n\n4.金融数据分析：Doris数据库可以存储和分析金融相关的大规模数据，如证券交易数据、客户信息等，帮助金融机构更好地理解市场趋势、客户需求等信息\n\nDoris数据库适用于需要处理海量数据、需要实时查询和分析数据的场景。\n```\n\n#### 1.3 Doris架构\n\nDoris整体架构如下图所示，Doris 架构非常简单，只有两类进程\n\n![](/images/Doris.png)\n\n**Frontend（FE）**\n\n```\n主要负责用户请求的接入、查询解析规划、元数据的管理、节点管理相关工作，并将请求转发给对应的Backend进行处理。Frontend还负责了Doris集群的负载均衡和故障转移等功能\n\n主要有三个角色：\n（1）Leader 和Follower：主要是用来达到元数据的高可用，保证单节点宕机的情况下，元数据能够实时地在线恢复，而不影响整个服务。\n（2）Observer：用来扩展查询节点，同时起到元数据备份的作用。如果在发现集群压力非常大的情况下，需要去扩展整个查询的能力，那么可以加 observer 的节点。observer 不参与任何的写入，只参与读取。\n\n用于fe非master节点同步元数据。doris只有master节点才能写fe元数据，其他fe节点写元数据的操作都会转发到master节点。在master完成元数据写入操作后，非master节点replay元数据会有短暂的延迟，可以使用该语句同步元数据\n```\n\n**Backend（BE）**\n\n```\n主要负责数据存储、查询计划的执行\n\n数据的可靠性由 BE 保证，BE 会对整个数据存储多副本或者是三副本。副本数可根据需求动态调整\n```\n\n Frontend（FE）和 Backend（BE）这两类进程都是可以横向扩展的，单集群可以支持到数百台机器，数十 PB 的存储容量。并且这两类进程通过一致性协议来保证服务的高可用和数据的高可靠。这种高度集成的架构设计极大的降低了一款分布式系统的运维成本\n\n**MySQL Client**\n\n```\nDoris借助MySQL协议，用户使用任意MySQL的ODBC/JDBC以及MySQL的客户端，都可以直接访问Doris\n```\n\n**broker**\n\n```\nBroker 是 Doris 集群中一种可选进程，主要用于支持 Doris 读写远端存储上的文件和目录，如 HDFS、BOS 和 AFS 等\n```\n\n### 二、Doris安装和部署\n\n#### 2.1 Doris安装环境要求\n\n##### 2.1.1 Linux 操作系统版本需求\n\n| Linux 系统 |    版本    |\n| :--------: | :--------: |\n|   CentOS   | 7.1 及以上 |\n\n##### 2.1.2 软件需求\n\n| 软件 |     版本     |\n| :--: | :----------: |\n| Java |  1.8 及以上  |\n| GCC  | 4.8.2 及以上 |\n\n##### 2.1.3 Linux文件系统\n\next4和xfs文件系统均支持\n\n##### 2.1.4 机器配置( 生产环境 )\n\n|   模块   |  CPU  | 内存  |           磁盘           |   网络   | 实例数量（最低要求） |\n| :------: | :---: | :---: | :----------------------: | :------: | :------------------: |\n| Frontend | 16核+ | 64GB+ | SSD 或 RAID 卡，100GB+ * | 万兆网卡 |        1-3 *         |\n| Backend  | 16核+ | 64GB+ |   SSD 或 SATA，100G+ *   | 万兆网卡 |         3 *          |\n\n##### 2.1.5 端口预留\n\n| 实例名称 |        端口名称        | 默认端口 |       通讯方向       |                     说明                     |\n| :------: | :--------------------: | :------: | :------------------: | :------------------------------------------: |\n|    BE    |        be_prot         |   9060   |        FE–>BE        | BE上thrift server的端口用于接收来自FE 的请求 |\n|    BE    |     webserver_port     |   8040   |       BE<–>FE        |            BE上的http server端口             |\n|    BE    | heartbeat_service_port |   9050   |        FE–>BE        |     BE上心跳服务端口用于接收来自FE的心跳     |\n|    BE    |       brpc_prot*       |   8060   |    FE<–>BEBE<–>BE    |         BE上的brpc端口用于BE之间通信         |\n|    FE    |       http_port        |   8030   |  FE<–>FE用户<–> FE   |            FE上的http_server端口             |\n|    FE    |        rpc_port        |   9020   |    BE–>FEFE<–>FE     |            FE上thirt server端口号            |\n|    FE    |       query_port       |   9030   |      用户<–> FE      |            FE上的mysql server端口            |\n|    FE    |     edit_log_port      |   9010   |       FE<–>FE        |          FE上bdbje之间通信用的端口           |\n|  Broker  |    broker_ipc_port     |   8000   | FE–>BROKERBE–>BROKER |     Broker上的thrift server用于接收请求      |\n\n```\n端口部署可以更改，表中为官方版本各组件的默认端口\n```\n\n##### 2.1.6 部署常见的注意事项\n\n```\n（1）FE的磁盘空间主要用于存储元数据，包括日志和image。通常从几百MB到几个GB不等。\n\n（2）BE的磁盘空间主要用于存放用户数据，总磁盘空间按用户总数据量* 3（3副本）计算，然后再预留额外40%的空间用作后台compaction以及一些中间数据的存放。\n\n（3）一台机器上可以部署多个BE实例，但是只能部署一个 FE。如果需要 3 副本数据，那么至少需要 3 台机器各部署一个BE实例（而不是1台机器部署3个BE实例）。多个FE所在服务器的时钟必须保持一致（允许最多5秒的时钟偏差）\n\n（4）测试环境也可以仅适用一个BE进行测试。实际生产环境，BE实例数量直接决定了整体查询延迟。\n\n（5）所有部署节点关闭Swap。\n\n（6）FE节点数据至少为1（1个Follower）。当部署1个Follower和1个Observer时，可以实现读高可用。当部署3个Follower时，可以实现读写高可用（HA）。\n\n（7）Follower的数量必须为奇数，Observer 数量随意。\n\n（8）根据以往经验，当集群可用性要求很高时（比如提供在线业务），可以部署3个 Follower和1-3个Observer。如果是离线业务，建议部署1个Follower和1-3个Observer。\n\n（9）Broker是用于访问外部数据源（如HDFS）的进程。通常，在每台机器上部署一个 broker实例即可。\n```\n\n#### 2.2 Doris集群部署\n\n##### 2.2.1 机器规划\n\n| 实例名称   | 服务IP        | 机器资源  | 部署路径 |\n| ---------- | ------------- | --------- | -------- |\n| FE(LEADER) | 172.16.20.239 | 8c8g50g   | /data    |\n| BE         | 172.16.20.105 | 8c16g100g | /data    |\n| BE         | 172.16.20.73  | 8c16g100g | /data    |\n| BE         | 172.16.20.144 | 8c16g100g | /data    |\n\n```\n生产环境建议 FE 和 BE 分开\n```\n\n##### 2.2.2 安装包准备\n\n```\n官方下载地址：https://doris.apache.org/download\n\n注意：查看服务器是否支持 CPU Model ：avx2\ncat /proc/cpuinfo | grep avx2\n```\n\n![](图片\\doris-下载.png)\n\n```\n 如果CPU不支持avx2指令集，请选择无avx2版本。您可以通过cat /proc/cpuinfo检查是否支持。avx2指令将提高诸如布隆过滤器之类的数据结构的计算效率\n​ 支持avx2 可以下载X86( avx2 ) , 不支持avx2 可以下载X86( no avx2 )\n```\n\n##### 2.2.3 下载安装包\n\n```\n#部署安装2.1.4版本\nwget https://apache-doris-releases.oss-accelerate.aliyuncs.com/apache-doris-2.1.4-bin-x64.tar.gz\n```\n\n##### 2.2.4 安装Java和gcc环境\n\n因java和gcc都为常用环境，如没有需自行安装\n\n```\n# java版本信息查看\n[wangting@hdt-dmcp-ops01 ~]$ java -version\njava version \"1.8.0_212\"\nJava(TM) SE Runtime Environment (build 1.8.0_212-b10)\nJava HotSpot(TM) 64-Bit Server VM (build 25.212-b10, mixed mode)\n# gcc版本信息查看\n[wangting@hdt-dmcp-ops01 ~]$ gcc --version\ngcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)\nCopyright (C) 2015 Free Software Foundation, Inc.\n```\n\n##### 2.2.5 设置系统文件句柄数\n\n系统文件句柄\n\n```\n[wangting@hdt-dmcp-ops01 doris]$ sudo vim /etc/security/limits.conf\n# End of file\n\n* soft nofile 65536\n* hard nofile 131072\n* soft nproc 2048\n* hard nproc 65536\n```\n\n```\n在操作系统中，每个进程都有一个打开文件句柄的限制，它限制了进程能够同时打开的文件数。这个限制对于一些需要同时处理大量文件的应用程序来说可能会成为瓶颈。因此，可以通过修改系统最大打开文件句柄数来提高应用程序的性能。\n\n具体来说，增加最大打开文件句柄数可以：\n\n  提高服务器的并发性能：如果你的服务器需要同时处理大量的网络连接和文件 I/O 操作，那么增加最大打开文件句柄数可以提高服务器的并发性能，从而降低响应时间和延迟。\n  提高数据库性能：一些数据库软件如 MySQL，需要在处理大量的数据时打开大量的文件句柄，增加最大打开文件句柄数可以提高数据库的性能。\n  解决程序打开文件失败的问题：如果你的程序在运行时出现 “too many open files” 的错误，那么增加最大打开文件句柄数可以解决这个问题。\n```\n\n##### 2.2.6 关闭 swap 分区\n\n在部署 Doris 时，建议关闭 swap 分区。swap 分区是内核发现内存紧张时，会按照自己的策略将部分内存数据移动到配置的 swap 分区，由于内核策略不能充分了解应用的行为，会对数据库性能造成较大影响。所以建议关闭。\n\n通过以下命令可以临时或者永久关闭。\n\n**临时关闭**，下次机器启动时，swap 还会被打开。\n\n```\nswapoff -a \n```\n\n**永久关闭**，使用 Linux root 账户，注释掉 /etc/fstab 中的 swap 分区，然后重启即可彻底关闭 swap 分区。\n\n```\n# /etc/fstab\n# <file system>        <dir>         <type>    <options>             <dump> <pass>\ntmpfs                  /tmp          tmpfs     nodev,nosuid          0      0\n/dev/sda1              /             ext4      defaults,noatime      0      1\n# /dev/sda2              none          swap      defaults              0      0\n/dev/sda3              /home         ext4      defaults,noatime      0      2\n```\n\n##### 2.2.7 检测和关闭系统防火墙\n\n如果发现端口不同，可以试着关闭防火墙，确认是否是本机防火墙造成。如果是防火墙造成，可以根据配置的 Doris 各组件端口打开相应的端口通信。\n\n```sql\nsudo systemctl stop firewalld.service\nsudo systemctl disable firewalld.service\n```\n\n##### 2.2.8 配置 NTP 服务\n\nDoris 的元数据要求时间精度要小于 5000ms，所以所有集群所有机器要进行时钟同步，避免因为时钟问题引发的元数据不一致导致服务出现异常。\n\n通常情况下，可以通过配置 NTP 服务保证各节点时钟同步。\n\n```\nsudo systemctl start ntpd.service\nsudo systemctl enable ntpd.service\n```\n\n##### 2.2.9 修改虚拟内存区域数量\n\n修改虚拟内存区域至少 2000000\n\n```\nsysctl -w vm.max_map_count=2000000\n```\n\n永久修改\n\n```\nvim /etc/sysctl.conf\nvm.max_map_count=2000000\n```\n\n##### 2.2.10关闭透明大页\n\n在部署 Doris 时，建议关闭透明大页。\n\n```\necho never > /sys/kernel/mm/transparent_hugepage/enabled\necho never > /sys/kernel/mm/transparent_hugepage/defrag\n\n#永久关闭\nvim /etc/rc.local\necho never > /sys/kernel/mm/transparent_hugepage/enabled\necho never > /sys/kernel/mm/transparent_hugepage/defrag\n```\n\n##### 2.2.11 解压安装\n\n```\nmkdir -p /data\ntar -xf apache-doris-2.1.4-bin-x64.tar.gz -C /data\n```\n\n##### 2.2.12 配置FE\n\n```\ncd /data/apache-doris-2.1.4-bin-x64/fe\n\nln -s /data/apache-doris-2.1.4-bin-x64/fe/doris-meta /data/doris-fe-meta\n\nvim conf/fe.conf\n#修改 FE 元数据目录\nmeta_dir = ${DORIS_HOME}/doris-meta\n\n#绑定集群 IP\npriority_networks = 172.16.20.0/24\n\n#调整 FE 内存\nJAVA_OPTS=\"-Xmx16384m -XX:+UseMembar -XX:SurvivorRatio=8 -XX:MaxTenuringThreshold=7 -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSClassUnloadingEnabled -XX:-CMSParallelRemarkEnabled -XX:CMSInitiatingOccupancyFraction=80 -XX:SoftRefLRUPolicyMSPerMB=0 -Xloggc:$DORIS_HOME/log/fe.gc.log.$DATE\"\n\n#修改 Doris 大小写敏感参数 lower_case_table_names(可选)\n在 Doris 中默认表名大小写敏感。如果有对大小写不敏感的需求，需要在集群初始化时进行设置。表名大小写敏感在集群初始化完成后就无法再进行修改\nhttps://doris.apache.org/zh-CN/docs/query/query-variables/variables\n```\n\n##### 2.2.13 启动 FE 进程\n\n```\ncd /data/apache-doris-2.1.4-bin-x64/fe\n\nbin/start_fe.sh --daemon\n```\n\nFE 进程启动进入后台执行。日志默认存放在 `log/` 目录下。如启动失败，可以通过查看 `log/fe.log` 或者 log/fe.out 查看错误信息\n\n##### 2.2.14 检查 FE 启动状态\n\n#检查是否启动成功\n\n```\ncurl http://127.0.0.1:8030/api/bootstrap\n\n{\"msg\":\"success\",\"code\":0,\"data\":{\"replayedJournalId\":0,\"queryPort\":0,\"rpcPort\":0,eng\"version\":\"\"},\"count\":0}\n```\n\n通过 MySQL Client 可以链接 Doris 集群。初始化用户为 `root`，密码为空。\n\n```\nmysql -uroot -P<fe_query_port> -h<fe_ip_address>\n\nshow frontends \n\nAlive 为 true 表示节点存活\nJoin 为 true 表示节点加入到集群中，但不代表当前还在集群内（可能已失联）\nIsMaster 为 true 表示当前节点为 Master 节点\n```\n\n##### 2.2.15 FE Web 登录页面\n\n```\n访问地址: http://172.16.20.239:8030/login\n初始用户: root\n密码:无\n```\n\n![](图片\\doris-web.png)\n\n##### 2.2.16 配置 BE\n\n```\n#BE三节点都配置\n# 创建BE数据存放目录\nmkdir -p /data/doris-storage1\n mkdir -p /data/doris-storage2.SSD\n\n# 修改BE配置文件\n## 在 storage_root_path 中使用 medium 指定磁盘类型\n## /home/disk1/doris,medium:HDD： 表示该目录存储冷数据;\n## /home/disk2/doris,medium:SSD： 表示该目录存储热数据;\nvim /data/apache-doris-2.1.4-bin-x64/be/conf/be.conf\nstorage_root_path = /data/doris-storage1;/data/doris-storage2.SSD,10\npriority_networks = 172.16.20.0/24\n```\n\n```\nDoris 支持冷热数据分级存储，将冷数据存储在 HDD 或对象存储中，热数据存储在 SSD 中。\n\n可以通过路径区别节点内的冷热数据存储目录，HDD（冷数据目录）或 SSD（热数据目录）。如果不需要 BE 节点内的冷热机制，那么只需要配置路径即可，无需指定 medium 类型；也不需要修改 FE 的默认存储介质配置。\n\n在使用冷热数据分离功能时，需要在 storage_root_path 中使用 medium 选项。\n```\n\n##### 2.2.17 添加 BE\n\nBE节点需要先在FE中添加，才可加入集群。可以使用mysql-client连接到FE\n\n```\n注意：\n\n这里需要有MySQL客户端连接MySQL的client，安装忽略，yum安装mysqld或者mariadb均可\n```\n\n- 使用 Mysql 客户端连接到 FE\n\n```\nFE 默认没有密码\n```\n\n```\n[wangting@hdt-dmcp-ops01 ~]$ mysql -h hdt-dmcp-ops01 -uroot -P 9030\n# 设置密码\nMySQL [(none)]> SET PASSWORD FOR 'root' = PASSWORD('Doris@123');\nQuery OK, 0 rows affected (0.00 sec)\nMySQL [(none)]> exit;\nBye\n```\n\n```\n注意：\n这里密码改过以后，那FE的前端访问页面的ROOT密码，就是改后的，注意下次登录时需要输入对应的新密码\n```\n\n- 添加BE\n\n```\n## 链接任一存活的 FE 节点\nmysql -uroot -P<fe_query_port> -h<fe_ip_address>\n\n## 注册 BE 节点\n## be_heartbeat_service_port 可以从 be.conf 中查看，默认为 9050\n## 在 MySQL Client 中执行 ALTER SYSTEM 语句\nALTER SYSTEM ADD BACKEND \"<be_ip_address>:<be_heartbeat_service_port>\"\n```\n\n##### 2.2.18 **启动 BE 进程**\n\n通过以下命令可以启动 BE 进程\n\n```\nbin/start_be.sh --daemon\n```\n\nBE 进程启动进入后台执行。日志默认存放在 `log/` 目录下。如启动失败，可以通过查看 `log/be.log` 或者 `log/be.out` 查看错误信息\n\n##### 2.2.19 **查看 BE 启动状态**\n\n在链接到 Doris 集群后，通过 show backends 命令查看 BE 的状态。\n\n```\n## 链接 Doris 集群\nmysql -uroot -P<fe_query_port> -h<fe_ip_address>\n\n## 查看 BE 状态，在 MySQL Client 中执行 show 命令\nshow backends;\n```\n\n通常情况下需要注意以下几项状态：\n\n- Alive 为 true 表示节点存活\n- TabletNum 表示该节点上的分片数量，新加入的节点会进行数据均衡，TabletNum 逐渐趋于平均\n\n##### 2.2.20 验证集群正确性\n\n**登录数据库**\n\n通过 MySQL Client 登录 Doris 集群。\n\n```\n## 链接 Doris 集群\nmysql -uroot -P<fe_query_port> -h<fe_ip_address>\n```\n\n**检查 Doris 安装版本**\n\n通过 show frontends 与 show backends 命令可以查看数据库版本情况。\n\n```\n## 查看 FE 各实例的版本，在 MySQL Client 中执行 show 命令\nshow frontends \\G\n\n## 查看 BE 各实例的版本，在 MySQL Client 中执行 show 命令\nshow backends \\G\n```\n\n**修改 Doris 集群密码**\n\n在创建 Doris 集群后，系统会自动创建 `root` 用户，并默认密码为空。建议在创建集群后为 `root` 用户重置一个新密码。\n\n```\n## 确认当前用户为 root，在 MySQL Client 中查看当前用户\nselect user();\n+------------------------+\n| user()                 |\n+------------------------+\n| 'root'@'192.168.88.30' |\n+------------------------+\n\n## 修改 root 用户密码，在 MySQL Client 中执行 set password 命令\nSET PASSWORD = PASSWORD('doris_new_passwd');\n```\n\n**创建测试表并插入数据**\n\n在新创建的集群中，可以创建表并插入数据以验证集群正确性。\n\n```\n## 创建测试数据库，在 MySQL Client 中执行 create database 语句\ncreate database testdb;\n\n## 创建测试表，在 MySQL Client 中执行 create table 语句\nCREATE TABLE testdb.table_hash\n(\n    k1 TINYINT,\n    k2 DECIMAL(10, 2) DEFAULT \"10.5\",\n    k3 VARCHAR(10) COMMENT \"string column\",\n    k4 INT NOT NULL DEFAULT \"1\" COMMENT \"int column\"\n)\nCOMMENT \"my first table\"\nDISTRIBUTED BY HASH(k1) BUCKETS 32;\n```\n\nDoris 兼容 MySQL 协议，可以使用 insert 语句插入数据。\n\n```\n## 插入部分测试数据，在 MySQL Client 中执行 insert into 语句\nINSERT INTO testdb.table_hash VALUES\n(1, 10.1, 'AAA', 10),\n(2, 10.2, 'BBB', 20),\n(3, 10.3, 'CCC', 30),\n(4, 10.4, 'DDD', 40),\n(5, 10.5, 'EEE', 50);\n\n## 验证插入数据正确性，在 MySQL Client 中执行 select 语句\nSELECT * from testdb.table_hash;\n+------+-------+------+------+\n| k1   | k2    | k3   | k4   |\n+------+-------+------+------+\n|    3 | 10.30 | CCC  |   30 |\n|    4 | 10.40 | DDD  |   40 |\n|    5 | 10.50 | EEE  |   50 |\n|    1 | 10.10 | AAA  |   10 |\n|    2 | 10.20 | BBB  |   20 |\n+------+-------+------+------+\n```\n\n### 三、Doris扩容和缩容\n\n#### 3.1 FE 扩容和缩容\n\n可以通过将FE扩容至3个以上节点(必须是奇数)来实现FE的高可用\n\n##### 3.1.1 FE扩容\n\n- 查看 FE 状态\n\n```\nMySQL [(none)]> show proc '/frontends'\\G;\n*************************** 1. row ***************************\n             Name: 172.20.8.117_9010_1683623765731\n               IP: 172.20.8.117\n         HostName: hdt-dmcp-ops01\n      EditLogPort: 9010\n         HttpPort: 8130\n        QueryPort: 9030\n          RpcPort: 9020\n             Role: FOLLOWER\n         IsMaster: true\n        ClusterId: 2040453956\n             Join: true\n            Alive: true\nReplayedJournalId: 18054\n    LastHeartbeat: 2023-05-10 09:59:13\n         IsHelper: true\n           ErrMsg: \n          Version: 1.1.5-rc02-ef0635dae7\n CurrentConnected: Yes\n1 row in set (0.01 sec)\n```\n\n从查询结果看，目前只有一个 FE，Role 为 FOLLOWER\n\n- 增加FE节点\n\n FE分为Leader，Follower和Observer三种角色。 默认一个集群只能有一个Leader，可以有多个Follower和Observer。其中Leader和Follower组成一个Paxos选择组，如果 Leader宕机，则剩下的Follower 会自动选出新的Leader，保证写入高可用。Observer 同步 Leader的数据，但是不参加选举。\n 如果只部署一个FE，则FE 默认就是Leader。在此基础上，可以添加若干Follower和 Observer。\n\n    # 增加FOLLOWER\n    ALTER SYSTEM ADD FOLLOWER \"follower_host:edit_log_port\";\n    # 增加OBSERVER\n    ALTER SYSTEM ADD OBSERVER \"observer_host:edit_log_port\";\n\n```\n此时只是加入角色，各 FE 节点服务还未部署\n```\n\n- 配置Follower和Observer\n\n```\n参考2.2.12\n```\n\n启动新的 FE 节点\n\n```\n注意：\n扩容的节点第一次启动时，启动命令需要添加参 --helper leader的IP:port，第一次需要成功启动加入到集群后，后续就不需要helper参数了\n```\n\n```\n./bin/start_fe.sh --helper leader_fe_host:edit_log_port --daemon\n```\n\n查看 FE 状态\n\n```\nshow proc '/frontends'\\G;\n```\n\n##### 3.1.2 FE缩容\n\n删除只需执行如下命令即可：\n\n```\nALTER SYSTEM DROP FOLLOWER[OBSERVER] \"fe_host:edit_log_port\";\n```\n\n```\n注意：\n删除 Follower FE 时，确保最终剩余的 Follower（包括 Leader）节点为奇数的合理状态\n```\n\n#### 3.2 BE扩容和缩容\n\n##### 3.2.1 BE扩容\n\nBE扩容和第一次部署添加 BE 方式一样\n\n```\n在MySQL命令行，通过 ALTER SYSTEM ADD BACKEND 命令增加BE节点\n\nALTER SYSTEM ADD BACKEND \"hdt-dmcp-ops04:9050\";\n```\n\n##### 3.2.2 BE缩容\n\n使用 `DECOMMISSION` 方式删除BE节点\n\n```\n语法：ALTER SYSTEM DECOMMISSION BACKEND \"be_host:be_heartbeat_service_port\";\n\n示例：ALTER SYSTEM DECOMMISSION BACKEND \"hdt-dmcp-ops05:9050\";\n```\n\n```\n注意：\n\n该命令用于安全删除BE节点。命令下发后，Doris 会尝试将该BE上的数据向其他BE节点迁移，当所有数据都迁移完成后，Doris会自动删除该节点。\n\n该命令是一个异步操作。执行后，可以通过 SHOW PROC ‘/backends’; 看到该 BE 节点的isDecommission状态为true。表示该节点正在进行下线。\n\n该命令不一定执行成功。比如剩余BE存储空间不足以容纳下线BE上的数据，或者剩余机器数量不满足最小副本数时，该命令都无法完成，并且BE会一直处于 isDecommission为true的状态。\n\nDECOMMISSION的进度，可以通过SHOW PROC ‘/backends’; 中的TabletNum查看，如果正在进行，TabletNum将不断减少。\n\n该操作可以通过如下命令取消：\n\nCANCEL DECOMMISSION BACKEND \"be_host:be_heartbeat_service_port\";\n\n如执行取消命令后，该BE上的数据将维持当前剩余的数据量。后续Doris重新进行负载均衡\n除了使用DECOMMISSION方式，还可以直接使用 DROP 方式删除 BE 节点，但生产环境不建议使用\n\n示例：ALTER SYSTEM DROP BACKEND \"be_host:be_heartbeat_service_port\";\n\nDROP BACKEND 会直接删除该BE，并且其上的数据将不能再恢复。方式比较暴力，所以不推荐使用 DROP BACKEND 这种方式删除BE节点。当执行这个语句时，也会有对应的防误操作提示信息\n```\n\n### 四、Doris 基本概念与介绍\n\n#### 4.1 Doris基本概念\n\n##### 4.1.1 Row & Column\n\n 一张表包括行（Row）和列（Column）：\n\n```\nRow , 即用户的一行数据;\n\nColumn , 用于描述一行数据中不同的字段。\n```\n\nColumn 可以分为两大类：Key 和 Value。从业务角度看，Key 和 Value 可以分别对应维度列和指标列\n\n```\nDoris数据库是一个分布式的列式存储引擎，它的数据模型是基于列式存储的。在Doris数据库中，一个Row就是一个数据行，它由多个Column组成。每个Column则代表这个数据行中的一个属性或者字段。因此，我们也可以将一个Row看做是一个数据表中的一行数据，而Column则对应数据表中的列。\n\n在Doris数据库中，由于数据是以列式存储的，因此在查询时可以只读取需要的Column数据，而不用读取整个Row数据，这就大大提高了查询性能。同时，Doris还支持Column的压缩和编码，可以进一步减小存储空间，提高数据的存储和查询效率。\n\n总之，在Doris数据库中，Row和Column是基本的数据结构，Row代表一个数据行，Column代表一个属性或字段，这种设计使得Doris能够高效地存储和查询海量数据。\n```\n\n##### 4.1.2 Tablet & Partition\n\n```\n在Doris的存储引擎中，用户数据首先被划分成若干个分区（Partition），划分的规则通常是按照用户指定的分区列进行范围划分，比如按时间划分。而在每个分区内，数据被进一步的按照Hash的方式分桶，分桶的规则是要找用户指定的分桶列的值进行Hash后分桶。每个分桶就是一个数据分片（Tablet），也是数据划分的最小逻辑单元。\n\nTablet之间的数据是没有交集的，独立存储的。Tablet也是数据移动、复制等操作的最小物理存储单元。\n\nPartition可以视为是逻辑上最小的管理单元。数据的导入与删除，都可以或仅能针对一个 Partition 进行,例如，可以按照数据的时间戳、地理位置、业务类型等进行分区，以保证数据的高效存储和查询。每个Partition都包含一定数量的数据块（Data Block），一个数据块包含一段连续的数据和对应的元数据信息，用于支持查询和数据的压缩存储等功能。\n\n总之，Doris的Tablet和Partition是实现高性能、高可用的分布式存储和计算的关键组件，通过合理的划分和分配，可以充分利用计算和存储资源，提高数据的利用率和系统的性能\n```\n\n#### 4.2 Doris字段类型\n\n| TINYINT                     | 1字节         | 范围：-2^7 + 1 ~ 2^7 - 1                                     |\n| --------------------------- | ------------- | ------------------------------------------------------------ |\n| SMALLINT                    | 2字节         | 范围：-2^15 + 1 ~ 2^15 - 1                                   |\n| INT                         | 4字节         | 范围：-2^31 + 1 ~ 2^31 - 1                                   |\n| BIGINT                      | 8字节         | 范围：-2^63 + 1 ~ 2^63 - 1                                   |\n| LARGEINT                    | 16字节        | 范围：-2^127 + 1 ~ 2^127 - 1                                 |\n| FLOAT                       | 4字节         | 支持科学计数法                                               |\n| DOUBLE                      | 12字节        | 支持科学计数法                                               |\n| DECIMAL[(precision, scale)] | 16字节        | 保证精度的小数类型。默认是 DECIMAL(10, 0)precision: 1 ~ 27scale: 0 ~ 9其中整数部分为 1 ~ 18不支持科学计数法 |\n| DATE                        | 3字节         | 范围：0000-01-01 ~ 9999-12-31                                |\n| DATETIME                    | 8字节         | 范围：0000-01-01 00:00:00 ~ 9999-12-31 23:59:59              |\n| CHAR[(length)]              |               | 定长字符串。长度范围：1 ~ 255。默认为1                       |\n| VARCHAR[(length)]           |               | 变长字符串。长度范围：1 ~ 65533                              |\n| BOOLEAN                     |               | 与TINYINT一样，0代表false，1代表true                         |\n| HLL                         | 1~16385个字节 | hll列类型，不需要指定长度和默认值、长度根据数据的聚合程度系统内控制，并且HLL列只能通过配套的hll_union_agg、Hll_cardinality、hll_hash进行查询或使用 |\n| BITMAP                      |               | bitmap列类型，不需要指定长度和默认值。表示整型的集合，元素最大支持到2^64 - 1 |\n| STRING                      |               | 变长字符串，0.15版本支持，最大支持2147483643 字节（2GB-4），长度还受be 配置`string_type_soft_limit`, 实际能存储的最大长度取两者最小值。只能用在value 列，不能用在 key 列和分区、分桶列 |\n\n#### 4.3 Doris数据模型\n\nDoris 的数据模型主要分为3类\n\nAggregate - 实现聚合查询\n\n```\nDoris的Aggregate模型是Doris中的一种数据模型，用于支持快速的聚合查询。该模型将数据按照一定的规则进行分组，并对每个分组内的数据进行聚合计算，得到一个汇总的结果。在Doris中，Aggregate模型是通过一个存储在内存中的数据结构进行计算的，这个数据结构被称为“HyperLogLog”（简称HLL）。HLL可以快速地统计一个数据集的基数（不同元素的个数），并且可以进行基于聚合的计算，例如计算不同的元素的个数、求和、平均值等。在Doris中，用户可以通过定义聚合键、聚合函数等参数来创建Aggregate模型，从而支持更高效的查询操作。\n```\n\nUnique - 实现唯一性约束\n\n```\nDoris数据库的Unique模型是指在Doris中使用了一种特殊的索引结构，称为Unique索引，来实现唯一性约束。这种索引结构允许在表的某个列上创建唯一性约束，保证该列的值在表中是唯一的，并且可以快速地检查重复值。\n\n在Doris中，Unique索引使用B+树数据结构来实现，通过将唯一性列的值作为索引的键值，将其它列的值作为索引的数据值，来构建索引。当插入或更新数据时，Doris会自动检查唯一性列的值是否已经存在，如果不存在则插入数据，否则更新数据。这样就可以避免重复数据的插入，保证数据的唯一性。\n\nUnique模型主要用于实现单列唯一性约束，如果需要实现多列唯一性约束，则需要使用Doris的联合索引。\n```\n\nDuplicate - 实现自动检测和删除重复数据\n\n```\nDoris数据库的Duplicate模型是用于处理数据冗余问题的模型，它可以自动检测和删除重复数据。在Doris数据库中，数据是以分布式表的形式存储的，分布式表由多个分片组成，每个分片都有自己的数据副本。当用户执行插入操作时，Duplicate模型会首先检测分片中是否已经存在相同的数据，如果存在，则会自动删除重复数据，从而保证数据的唯一性。Duplicate模型还支持对唯一性约束进行自定义设置，用户可以根据自己的业务需求来定义唯一性约束。\n```\n\n建测试库\n\n```\nMySQL [(none)]> create database test_db;\nQuery OK, 0 rows affected (0.02 sec)\n\nMySQL [(none)]> use test_db;\nDatabase changed\nMySQL [test_db]> \n```\n\n##### 4.3.1 Aggregate使用示例\n\n- 建表\n\n```\nCREATE TABLE IF NOT EXISTS test_db.example_site_visit\n(\n    `user_id` LARGEINT NOT NULL COMMENT \"用户id\",\n    `date` DATE NOT NULL COMMENT \"数据灌入日期时间\",\n    `city` VARCHAR(20) COMMENT \"用户所在城市\",\n    `age` SMALLINT COMMENT \"用户年龄\",\n    `sex` TINYINT COMMENT \"用户性别\",\n`last_visit_date` DATETIME REPLACE DEFAULT \"1970-01-01 00:00:00\" COMMENT \"用户最后一次访问时间\",\n    `cost` BIGINT SUM DEFAULT \"0\" COMMENT \"用户总消费\",\n    `max_dwell_time` INT MAX DEFAULT \"0\" COMMENT \"用户最大停留时间\",\n    `min_dwell_time` INT MIN DEFAULT \"99999\" COMMENT \"用户最小停留时间\"\n)\nAGGREGATE KEY(`user_id`, `date`, `city`, `age`, `sex`)\nDISTRIBUTED BY HASH(`user_id`) BUCKETS 10;\n```\n\n- 插入样例数据\n\n```\ninsert into test_db.example_site_visit values\\\n(10000,'2017-10-01','北京',20,0,'2017-10-01 06:00:00' ,20,10,10),\\\n(10000,'2017-10-01','北京',20,0,'2017-10-01 07:00:00',15,2,2),\\\n(10001,'2017-10-01','北京',30,1,'2017-10-01 17:05:45',2,22,22),\\\n(10002,'2017-10-02','上海',20,1,'2017-10-02 12:59:12' ,200,5,5),\\\n(10003,'2017-10-02','广州',32,0,'2017-10-02 11:20:00',30,11,11),\\\n(10004,'2017-10-01','深圳',35,0,'2017-10-01 10:00:15',100,3,3),\\\n(10004,'2017-10-03','深圳',35,0,'2017-10-03 10:20:22',11,6,6);\n```\n\n- 查看数据验证\n\n```\n可以观察结果针对同一个user_id进行的聚合结果\n\n根据建表语句中AGGREGATE KEY(user_id, date, city, age, sex),涉及的字段信息都相同进行聚合，如有不同不触发聚合\n\n10000信息相同进行聚合，而10004灌入日期时间就已经不同，不进行聚合\n```\n\n![](图片\\doris-Aggregate.png)\n\n##### 4.3.2 Unique 使用示例\n\n- 建表\n\n```\nCREATE TABLE IF NOT EXISTS test_db.user\n(\n    `user_id` LARGEINT NOT NULL COMMENT \"用户id\",\n    `username` VARCHAR(50) NOT NULL COMMENT \"用户昵称\",\n    `city` VARCHAR(20) COMMENT \"用户所在城市\",\n    `age` SMALLINT COMMENT \"用户年龄\",\n    `sex` TINYINT COMMENT \"用户性别\",\n    `phone` LARGEINT COMMENT \"用户电话\",\n    `address` VARCHAR(500) COMMENT \"用户地址\",\n    `register_time` DATETIME COMMENT \"用户注册时间\"\n)\nUNIQUE KEY(`user_id`, `username`)\nDISTRIBUTED BY HASH(`user_id`) BUCKETS 10;\n```\n\n- 插入样例数据\n\n```\ninsert into test_db.user values\\\n(10000,'wuyanzu','北京',18,0,12345678910,'北京朝阳区','2017-10-01 07:00:00'),\\\n(10000,'wuyanzu','北京',19,0,12345678910,'北京朝阳区','2017-10-01 07:00:00'),\\\n(10000,'zhangsan','北京',20,0,12345678910,'北京海淀区','2017-11-15 06:10:20');\n```\n\n- 查看数据验证\n\n可以观察结果针对同一个`user_id`进行的聚合结果\n\n根据建表语句中`UNIQUE KEY(user_id, username)`,涉及的字段信息都相同进行去重，如有不同不触发去重\n\n![](图片\\doris-Unique.png)\n\n```\n注意：\n\nUnique 模型完全可以用聚合模型中的 REPLACE 方式替代。其内部的实现方式和数据存储方式也完全一样\n\n简单的理解就是 Unique 能实现的功能都可以用 Aggregate 实现\n```\n\n补充示例：\n\n```\n# 建表\nCREATE TABLE IF NOT EXISTS test_db.user_2 \n(\n    `user_id` LARGEINT NOT NULL COMMENT \"用户id\",\n    `username` VARCHAR(50) NOT NULL COMMENT \"用户昵称\",\n    `city` VARCHAR(20) REPLACE COMMENT \"用户所在城市\",\n    `age` SMALLINT REPLACE COMMENT \"用户年龄\",\n    `sex` TINYINT REPLACE COMMENT \"用户性别\",\n    `phone` LARGEINT REPLACE COMMENT \"用户电话\",\n    `address` VARCHAR(500) REPLACE COMMENT \"用户地址\",\n    `register_time` DATETIME REPLACE COMMENT \"用户注册时间\"\n)\nAGGREGATE KEY(`user_id`, `username`)\nDISTRIBUTED BY HASH(`user_id`) BUCKETS 10;\n\n# 插入样例数据\ninsert into test_db.user_2 values\\\n(10000,'wuyanzu','北京',18,0,12345678910,'北京朝阳区','2017-10-01 07:00:00'),\\\n(10000,'wuyanzu','北京',19,0,12345678910,'北京朝阳区','2017-10-01 07:00:00'),\\\n(10000,'zhangsan','北京',20,0,12345678910,'北京海淀区','2017-11-15 06:10:20');\n\n# 查询验证 发现也是只有2条，成功去重\nMySQL [test_db]> select user_id,username,city,age from user_2;\n+---------+----------+--------+------+\n| user_id | username | city   | age  |\n+---------+----------+--------+------+\n| 10000   | wuyanzu  | 北京   |   19 |\n| 10000   | zhangsan | 北京   |   20 |\n+---------+----------+--------+------+\n```\n\n##### 4.3.3 Duplicate 使用示例\n\n- 建表\n\n```\nCREATE TABLE IF NOT EXISTS test_db.example_log\n(\n    `timestamp` DATETIME NOT NULL COMMENT \"日志时间\",\n    `type` INT NOT NULL COMMENT \"日志类型\",\n    `error_code` INT COMMENT \"错误码\",\n    `error_msg` VARCHAR(1024) COMMENT \"错误详细信息\",\n    `op_id` BIGINT COMMENT \"负责人id\",\n    `op_time` DATETIME COMMENT \"处理时间\"\n)\nDUPLICATE KEY(`timestamp`, `type`)\nDISTRIBUTED BY HASH(`timestamp`) BUCKETS 10;\n```\n\n- 插入样例数据\n\n```\ninsert into test_db.example_log values\\\n('2017-10-01 08:00:05',1,404,'not found page', 101, '2017-10-01 08:00:05'),\\\n('2017-10-01 08:00:05',1,404,'not found page', 101, '2017-10-01 08:00:05'),\\\n('2017-10-01 08:00:05',2,404,'not found page', 101, '2017-10-01 08:00:06'),\\\n('2017-10-01 08:00:06',2,404,'not found page', 101, '2017-10-01 08:00:07');\n```\n\n- 查看数据验证\n\n```\nMySQL [test_db]> select * from example_log;\n+---------------------+------+------------+----------------+-------+---------------------+\n| timestamp           | type | error_code | error_msg      | op_id | op_time             |\n+---------------------+------+------------+----------------+-------+---------------------+\n| 2017-10-01 08:00:05 |    1 |        404 | not found page |   101 | 2017-10-01 08:00:05 |\n| 2017-10-01 08:00:05 |    1 |        404 | not found page |   101 | 2017-10-01 08:00:05 |\n| 2017-10-01 08:00:05 |    2 |        404 | not found page |   101 | 2017-10-01 08:00:06 |\n| 2017-10-01 08:00:06 |    2 |        404 | not found page |   101 | 2017-10-01 08:00:07 |\n+---------------------+------+------------+----------------+-------+---------------------+\n```\n\nDuplicate 这种数据模型区别于 Aggregate 和 Unique 模型。数据完全按照导入文件中的数据进行存储，不会有任何聚合。即使两行数据完全相同，也都会保留。 而在建表语句中指定的 DUPLICATE KEY，只是用来指明底层数据按照那些列进行排序。\n\n```\n在 DUPLICATE KEY 的选择上，建议适当的选择前 2-4 列就可以，这种数据模型适用于既没有聚合需求，又没有主键唯一性约束的原始数据的存储。\n```\n\n#### 4.4 Doris web-ui使用\n\n```\n首页可以查看Doris应用部署的版本信息`Version`和对应服务器的硬件信息`Hardware Info`\n\n页面`Playground`可以进行SQL查询\n\n页面System可以查看集群的基本信息，例如用户、节点、状态等等情况\n\n页面Log可以直接查看部署应用的log日志，十分便捷\n\n页面Session Info可以实时监控当前Doris数据库实时会话信息，例如使用命令行连接数据库，再使用Navicat工具连一个会话，则可以在页面看到当前2个连接session信息\n```\n\n#### 4.5 Doris丰富的建表示例\n\n查看建表帮助\n\n```\nHELP CREATE TABLE;\n```\n\n可以查看建表的各类示例\n\n```\nDescription:\n\n该语句用于创建 table。\n语法：\n​```\n    CREATE [EXTERNAL] TABLE [IF NOT EXISTS] [database.]table_name\n    (column_definition1[, column_definition2, ...]\n    [, index_definition1[, index_definition2, ...]])\n    [ENGINE = [olap|mysql|broker|hive|iceberg]]\n    [key_desc]\n    [COMMENT \"table comment\"];\n    [partition_desc]\n    [distribution_desc]\n    [rollup_index]\n    [PROPERTIES (\"key\"=\"value\", ...)]\n    [BROKER PROPERTIES (\"key\"=\"value\", ...)]\n​```\n```\n\n例如帮助中有非常丰富的不同场景的建表示例( 都可以通过`HELP CREATE TABLE;`直接查看获取 )：\n\n```\n创建一个 olap 表，使用 HASH 分桶，使用列存，相同key的记录进行聚合\n创建一个 olap 表，使用 Hash 分桶，使用列存，相同key的记录进行覆盖，\n创建一个 olap 表，使用 Range 分区，使用Hash分桶，默认使用列存，\n创建一个 olap 表，使用 List 分区，使用Hash分桶，默认使用列存，\n创建一个 mysql 表\n创建一个数据文件存储在HDFS上的 broker 外部表, 数据使用 “|” 分割，“\\n” 换行\n创建一张含有HLL列的表\n创建一张含有BITMAP_UNION聚合类型的表（v1和v2列的原始数据类型必须是TINYINT,SMALLINT,INT）\n创建两张支持Colocate Join的表t1 和t2\n创建一个数据文件存储在BOS上的 broker 外部表\n创建一个带有bitmap 索引的表\n创建一个动态分区表(需要在FE配置中开启动态分区功能)，该表每天提前创建3天的分区，并删除3天前的分区。例如今天为2020-01-08，则会创建分区名为p20200108, p20200109,\n创建一个带有rollup索引的表\n创建一个内存表\n创建一个hive外部表\n通过 replication_allocation 指定表的副本分布\n创建一个 Iceberg 外表\n```\n\n### 五、Doris集群管理\n\n#### 5.1 配置管理\n\n##### 5.1.1 FE配置项\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/config/fe-config\n```\n\n##### 5.1.2 BE配置项\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/config/be-config\n```\n\n#### 5.2 运维监控\n\n**监控指标**\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/maint-monitor/monitor-metrics/metrics\n```\n\n**磁盘空间管理**\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/maint-monitor/disk-capacity\n```\n\n**数据副本管理**\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/maint-monitor/tablet-repair-and-balance\n```\n\n**元数据运维**\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/maint-monitor/tablet-repair-and-balance\n\nhttps://doris.apache.org/zh-CN/community/design/metadata-design\n```\n\n#### 5.3 工作负载分析\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/resource-admin/workload-analysis\n```\n\n#### 5.4 SQL拦截\n\nsql查询数据超过一定大小拦截，或直接拦截对应sql语句\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/query-admin/sql-interception\n```\n\n#### 5.5 服务自动拉起\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/maint-monitor/automatic-service-start\n```\n\n#### 5.6 OPEN API使用\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/open-api/overview\n```\n\n#### 5.7 安全管理\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/auth/authentication-and-authorization\n```\n\n```\n#示例\nSHOW ALL GRANTS;\nSHOW GRANTS FOR 'admin'@'%';\nselect * from mysql.user;\n\n#创建数据库\ncreate DATABASE vota;\n#创建角色\nshow roles;\nCREATE ROLE vota_rd COMMENT \"vota Read\";\nCREATE ROLE vota_rw COMMENT \"vota Read and Write Role\";\n#授予角色权限\nGRANT Select_priv,Load_priv on vota.* to Role 'vota_rd';\nGRANT Select_priv,Load_priv,Alter_priv,Create_priv,Drop_priv on vota.* to Role 'vota_rw';\n#创建用户\ndrop user vota;\nCREATE USER 'vota'@'%' IDENTIFIED BY 'Vota@126' DEFAULT ROLE 'vota_rd';\nCREATE USER 'vota_admin'@'%' IDENTIFIED BY 'Vota_admin@126' DEFAULT ROLE 'vota_rw';\n#密码修改\nSET PASSWORD FOR 'jack'@'192.%' = PASSWORD('123456')\n#授予用户角色\nGRANT 'vota_rd' TO 'vota'@'%';\nGRANT 'vota_rw' TO 'vota_admin'@'%';\n#登录验证\n```\n\n#### 5.8 数据备份恢复\n\n表级备份恢复，恢复时需手动创建database，仅支持S3和HDFS备份\n\n```\n数据备份：https://doris.apache.org/zh-CN/docs/admin-manual/data-admin/backup-restore/backup\n数据恢复：https://doris.apache.org/zh-CN/docs/admin-manual/data-admin/backup-restore/restore\n回收站恢复：https://doris.apache.org/zh-CN/docs/admin-manual/data-admin/recyclebin\n```\n\n```\n#查看当前仓库\nSHOW REPOSITORIES;\n#查看仓库创建语句\nSHOW CREATE REPOSITORY for <repo_name>;\n\n#创建备份仓库\nCREATE REPOSITORY `minio_repo`\nWITH S3\nON LOCATION \"s3://doris-backup-bucket/bak\"\nPROPERTIES\n(\n    \"AWS_ENDPOINT\" = \"http://172.16.20.233:9001\",\n    \"AWS_ACCESS_KEY\" = \"admin\",\n    \"AWS_SECRET_KEY\"=\"jzzx123456\",\n    \"AWS_REGION\" = \"REGION\",\n\t\"use_path_style\" = \"true\"\n); \n\n\n#database全量备份\nBACKUP SNAPSHOT destdb.`destdb_20241225`\nTO example_repo;\n\n#表级恢复\nRESTORE SNAPSHOT testdb.`snapshot_testdb_20250506`\nFROM `minio_repo`\nON\n(\n    `institutional_person_info` AS `institutional_person_info_bak`\n)\nPROPERTIES\n(\n    \"backup_timestamp\"=\"2025-05-06-17-12-40\"\n);\n\n\n#库级恢复\nRESTORE SNAPSHOT destdb.`restore_label1`\nFROM `example_repo`\nPROPERTIES\n(\n    \"backup_timestamp\"=\"2022-04-08-15-52-29\"\n);\n\n\n#单表全量备份\nBACKUP SNAPSHOT testdb.snapshot_sa_code\nTO minio_repo\nON (sa_code)\nPROPERTIES (\"type\" = \"full\");\n\n#已存在备份\nSHOW SNAPSHOT ON minio_repo WHERE SNAPSHOT = \"snapshot_sa_code\";\n\n#单表恢复\nRESTORE SNAPSHOT test.snapshot_test\nFROM `minio_repo`\nPROPERTIES\n(\n    \"backup_timestamp\"=\"2024-11-14-09-59-33\" \n);\n\n#查看备份状态\nshow BACKUP\\G;\n\n#取消备份\nCANCEL BACKUP FROM db_name;\n```\n\n#### 5.9 集群升级\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/cluster-management/upgrade\n```\n\n### 六、Doris断电异常问题处理\n\n```\ndoris fe和be节点因物理机断电，异常关闭，无法正常启动。fe节点元数据文件损坏，be节点tablet副本数据损坏且表数据为单副本。\n```\n\n#### 6.1 Doris fe修复\n\nfe节点启动报错，fe meta数据损坏，错误如下图：\n\n![](图片\\doris-fe故障.png)\n\n##### 6.1.1 检查fe集群状态\n\n确认fe 集群节点正常，确认master节点正常及损坏节点状态\n\n```\nshow proc '/frontends'\\G;\n```\n\n##### 6.1.2 fe损坏节点元数据同步\n\n```\n# 停止 FE\nsh bin/stop_fe.sh\n\n# 备份 meta 元数据\ncp -r doris-meta doris-meta.bak.$(date +%F)\n\n# 删除 BDB 持久化目录\nrm -rf doris-meta\n\n# 重启 FE，节点会重新与 leader 元数据同步\n./bin/start_fe.sh --helper leader_fe_host:edit_log_port --daemon\n\n#查看当前FE状态\nshow proc '/frontends'\\G;\n```\n\n##### 6.1.3 FE 正常恢复启动\n\n```\n./bin/start_fe.sh --daemon\n```\n\n#### 6.2 Doris be修复\n\n```\n数据副本管理：https://doris.apache.org/zh-CN/docs/admin-manual/maint-monitor/tablet-repair-and-balance\n参考文档：\nhttps://mp.weixin.qq.com/s/bslbn51o4oltV2ATnuABPA\nhttps://doris-forum.org.cn/questions/D1Pw1/zui-jia-shi-jian-shu-ju-fu-ben-wen-ti-pai-cha-zhi-nan\nhttps://blog.csdn.net/S1124654/article/details/133943714\n```\n\n##### 6.2.1 问题现象\n\n**问题日志**\n\n```\nExecution failed: Error Failed to execute sql: java.sql.SQLException: (conn=440550) errCode = 2, detailMessage = Failed to get scan range, no queryable replica found in tablet: 89273. Reason: Visible Replicas:Visible version: 2, Replicas: [replicaId=89274, backendId=10452, backendAlive=true, version=3, lastFailedVersion=4, lastSuccessVersion=3, lastFailedTimestamp=1723617079544, state=NORMAL].\n\n\nfailed to make snapshot|tablet_id=20176804|schema_hash=1673275255|error=[INTERNAL_ERROR]fail to find path in version_graph. spec_version: 0-81741\n```\n\n**问题说明**\n\n```\n查询时，FE让BE返回spec_version范围的数据，但是BE缺部分version了，就会报这个错误；\n```\n\n**问题原因**\n\n```\n迁移副本过程可能丢version，在2.0.3修复了，或者在数据导入过程中be宕机。 \n```\n\n**注意:** 如果版本是2.0.1及以前，且它的所有副本last failed version > 0，通常需要重新建表进行导数。\n\n##### **6.2.2 问题定位**\n\n![](图片\\doris-be故障.webp)\n\n如上图所示，查询报错的 tablet_id 是 606202， BE ip是 10.xxx， BE 需要包含version 区间 [0 - 35]。 \n\n当确定异常tablet_id时，参考如下步骤先进行问题信息收集：\n\n![](图片\\doris-be故障-1.webp)\n\n**1. 获取异常tablet的详细信息**\n\n```\n-- 这里是606202，拿到detail cmd\nshow tablet {tablet_id} \n```\n\n**2. 执行DetailCmd**\n\n```\nSHOW PROC ' /dbs/10113/591325/partitions/606195/591326/606202\";\n```\n\n找出该BE所在的副本（CompactionStatus url中包含有该BE的ip），如果BackendId等字段显示为-1，说明该tabelt可能已经自动修复或迁移了。\n\n**3. 执行curl<步骤2的CompactionStatus url>(或在浏览器打开该url)**\n\n```\ncurl  http://10.xxx:8040/api/compaction/show?tablet_id=606202\n```\n\n![](图片\\doris-be故障-2.webp)\n\n查看该副本的rowset 和 missing_rowset，重点看rowset 的最大版本（这里是34）和 missing_rowsets。从上图可以看出该副本的rowset 为 0 ~ 34， 且中间不缺version(missing_rowsets为空)。而查询语句中是 special  version 是 [0, 35]， 但该BE不含version 35。所以需要给该BE补上version 35。 \n\n**注意**：这里的special version实际就是partition的visible version。它也可以通过如下指令查看。\n\n```\nshow partitions from <table-name xxx> where PartitionName = '<partition name xxx>' \n```\n\n##### 6.2.3 问题处理\n\n**临时规避方案**\n\n执行下面命令可恢复查询，如果需要全局设置，可以加上 **global** 关键字\n\n```\nshow variables like '%skip%';\nset skip_missing_version=true;\nset skip_bad_tablet=true;\n```\n\n**1. 确认是否自动修复**\n\n由于doris内部会自动做数据均衡和修复，所以当出现数据副本异常时，先确认异常数据副本能否自动修复：\n\n![](图片\\doris-be故障-3.webp)\n\n如果是多副本，查看是否存在健康副本。健康副本是指副本version >= special version && last failed version = -1 && isBad = false， 且curl 它的 CompactionStatus， missing rowsets 为空。 \n\n如果存在这样的副本，把查询报错的副本set bad，如上图所示BackendId为10003上版本远落后于其他两个副本的version，可以通过设置为bad来自动修复。\n\n```\nADMIN SET REPLICA STATUS PROPERTIES(\"tablet_id\" = \"7552021\", \"backend_id\" = \"10003\", \"status\" = \"bad\");\n```\n\n等待一会（可能需要一两分钟），再执行步骤2中的DetailCmd，如果副本都健康了：\n\n```\nversion >= special version && last failed version = -1 && isBad = false\n```\n\n且curl它的CompactionStatus,  missing rowsets为空，说明修补OK了。且执行select count (*) from table_xx 是否OK。 \n\n如果没问题，就自动修复完成了，不用往下看。如果还是有问题，接着往下看。\n\n**2. 重新导数手动修复**\n\n```\n如果是多个副本都损坏，并且是分区表的情况下，可以删除这个分区，然后手动重建这个分区，重新导入数据即可。\n\n如果是多个副本都损坏，并且是非分区表的情况下，只能删除这个表重新导入数据。\n```\n\n**3. 填充空副本进行修复**\n\n**注意**：以上两个方法可以恢复丢失的数据，而填充空副本方法，是插入若干个空rowset，它能恢复读写。但如果丢失的rowset是包含数据的，这种方法实质是丢数据的。单副本修复方法\n\n空副本修复方式如下：\n\n1️⃣ **自动修复**\n\n可以先通过 `SHOW FRONTEND CONFIG;` 命令查看当前版本是否支持该参数。\n\n```\nADMIN SET FRONTEND CONFIG (\"recover_with_empty_tablet\" = \"true\");\n```\n\n2️⃣ **手动修复**\n\n```\ncurl  http://10.xxx:8040/api/compaction/show?tablet_id=606202\ncurl -X POST \"http://10.xxx:8040/api/pad_rowset?tablet_id=606202&start_version=35&end_version=35\"\n```\n\n- 异常tablet_id\n- start_version 起始版本\n- end_version 终止版本\n\n该功能用于使用一个空的 rowset 填充损坏的副本。这个例子中修补的url中 start_version = 35,  end_version = 35。 \n\n这个例子只是缺一个rowset， 实际中可能缺多个（missing rowset，最大version + 1 ~ special version），例如查询中的max_version是9527，但是步骤3查询中数据的最后一行rowsets是[45-9520] 1 DATA ...，需要修补的就是9521～9527。 \n\n```\ncurl -X POST \"http://10.151.2.29:8040/api/pad_rowset?tablet_id=606202&start_version=9521&end_version=9527\"\n```\n\n修补完之后，再执行下show tablet xxx，该副本last fail version 是否等于 -1，如果它的version都补上了，但是last fail version = version + 1， 还需要手工执行把last fail version 改成 -1：\n\n```\nADMIN SET REPLICA VERSION PROPERTIES(\"tablet_id\" = \"10003\", \"backend_id\" = \"10001\", \"last_failed_version\" = \"-1\"); \n```\n\n低版本的doris可能不含这个SQL， 如果不支持这个SQL且是单副本的，通常需要重新建表进行导数。 \n\n如果没问题，使用：\n\n```\nselect count(*) from {table};\nselect * from {table};\n```\n\n查看是否可读，可读则说明数据副本问题已处理。\n\n**FAQ**\n\n如果有用户不小心把end_version调大了一轮，spec_version比max_version小，查询可能会出现如下报错\n\n```\n[CANCELLED]missed versions is empty, spec_version 307566, max_version 307567 tablet id 11423\n```\n\n可以通过指定副本为bad，或者往这个分区导入数据，如果还不行的话可以使用ADMIN-SET-PARTITION-VERSION来指定version。先通过下面这个命令来查看对应分区的**PartitionId**和**VisibleVersion**版本是多少\n\n```\nshow partitions from <table-name xxx> \n```\n\n然后使用**ADMIN-SET-PARTITION-VERSION**来指定version为当前的**max_version**。\n\n```\nADMIN SET TABLE tbl1 PARTITION VERSION PROPERTIES(\"partition_id\" = \"1769152\", \"visible_version\" = \"307567\"); \n```\n\n##### 6.2.4 数据验证\n\n查看副本健康\n\n```\nSHOW PROC '/cluster_health/tablet_health';\n```\n\n若数据可以查询，但依旧存在坏副本，可以备份数据，重新进行表数据初始化\n\n```\ncreate table test_bak as select * from test;\ndrop table test;\nalter table test_bak rename test;\n```\n\n验证副本健康\n\n```\nSHOW PROC '/cluster_health/tablet_health';\n```\n\n### 七、常见问题\n\n#### 7.1 什么是 priority_networks?\n\nDoris 进程监听 IP 的 CIDR 格式表示的网段。如果部署的机器只有一个网段，可以不用配置。如果有两个或多个网段，务必做配置。\n\n```\n这个参数主要用于帮助系统选择正确的网卡 IP 作为自己的监听 IP。比如需要监听的 IP 为 192.168.0.1，则可以设置 priority_networks=192.168.0.0/24，系统会自动扫描机器上的所有 IP，只有匹配上 192.168.0.0/24 这个网段的才会去作为服务监听地址。这个参数也可以配置多个 CIDR 网段，比如 priority_networks = 10.10.0.0/16; 192.168.0.0/24。\n```\n\n#### 7.2 通过 Web UI 无法修改 root 密码\n\n```\n当前内置的 Web 控制台，还不能执行 SET 类型的 SQL 语句，所以，在 Web 控制台，当前还不能通过执行 SET PASSWORD FOR 'root' = PASSWORD('your_password') `类似语句来修改 root 的密码，可以通过 MySQL Client 来修改 root 账户的密码。\n```\n\n","source":"_posts/Doris详解.md","raw":"---\ntitle: Doris详解\ntags: [Doris]\ncategories: [数据库]\n---\n### 一、 Doris简介\n\n```\nDoris 中文官方文档：https://doris.apache.org/zh-CN/docs/dev/summary/basic-summary\n```\n\n#### 1.1 Doris概述\n\n```\n Apache Doris 是一个基于 MPP 架构的高性能、实时的分析型数据库，以极速易用的特点被人们所熟知，仅需亚秒级响应时间即可返回海量数据下的查询结果，不仅可以支持高并发的点查询场景，也能支持高吞吐的复杂分析场景。基于此，Apache Doris 能够较好的满足报表分析、即席查询、统一数仓构建、数据湖联邦查询加速等使用场景，用户可以在此之上构建用户行为分析、AB 实验平台、日志检索分析、用户画像分析、订单分析等应用\n\n​ Apache Doris 最早是诞生于百度广告报表业务的 Palo 项目，2017 年正式对外开源，2018 年 7 月由百度捐赠给 Apache 基金会进行孵化，之后在 Apache 导师的指导下由孵化器项目管理委员会成员进行孵化和运营。目前 Apache Doris 社区已经聚集了来自不同行业数百家企业的 400 余位贡献者，并且每月活跃贡献者人数也超过 100 位。 2022 年 6 月，Apache Doris 成功从 Apache 孵化器毕业，正式成为 Apache 顶级项目（Top-Level Project，TLP）\n\n​ Apache Doris 如今在中国乃至全球范围内都拥有着广泛的用户群体，截止目前， Apache Doris 已经在全球超过 2000 家企业的生产环境中得到应用，在中国市值或估值排行前 50 的互联网公司中，有超过 80% 长期使用 Apache Doris，包括百度、美团、小米、京东、字节跳动、腾讯、网易、快手、微博、贝壳等。同时在一些传统行业如金融、能源、制造、电信等领域也有着丰富的应用\n```\n\n#### 1.2 Doris使用场景\n\nDoris数据库是一个分布式列式存储和查询系统，主要用于实时分析和查询海量数据。它适用于以下场景：\n\n```\n1.实时分析：Doris数据库可以快速查询和分析海量数据，支持实时查询和聚合操作，可以帮助企业快速做出决策并调整业务策略。\n\n2.大数据仓库：Doris数据库可以作为企业的数据仓库，存储大规模的数据，并提供高效的查询和分析能力，帮助企业更好地理解和利用数据。\n\n3.日志存储和分析：Doris数据库可以快速存储和分析实时生成的日志数据，支持实时查询和聚合操作，帮助企业及时发现和解决问题。\n\n4.金融数据分析：Doris数据库可以存储和分析金融相关的大规模数据，如证券交易数据、客户信息等，帮助金融机构更好地理解市场趋势、客户需求等信息\n\nDoris数据库适用于需要处理海量数据、需要实时查询和分析数据的场景。\n```\n\n#### 1.3 Doris架构\n\nDoris整体架构如下图所示，Doris 架构非常简单，只有两类进程\n\n![](/images/Doris.png)\n\n**Frontend（FE）**\n\n```\n主要负责用户请求的接入、查询解析规划、元数据的管理、节点管理相关工作，并将请求转发给对应的Backend进行处理。Frontend还负责了Doris集群的负载均衡和故障转移等功能\n\n主要有三个角色：\n（1）Leader 和Follower：主要是用来达到元数据的高可用，保证单节点宕机的情况下，元数据能够实时地在线恢复，而不影响整个服务。\n（2）Observer：用来扩展查询节点，同时起到元数据备份的作用。如果在发现集群压力非常大的情况下，需要去扩展整个查询的能力，那么可以加 observer 的节点。observer 不参与任何的写入，只参与读取。\n\n用于fe非master节点同步元数据。doris只有master节点才能写fe元数据，其他fe节点写元数据的操作都会转发到master节点。在master完成元数据写入操作后，非master节点replay元数据会有短暂的延迟，可以使用该语句同步元数据\n```\n\n**Backend（BE）**\n\n```\n主要负责数据存储、查询计划的执行\n\n数据的可靠性由 BE 保证，BE 会对整个数据存储多副本或者是三副本。副本数可根据需求动态调整\n```\n\n Frontend（FE）和 Backend（BE）这两类进程都是可以横向扩展的，单集群可以支持到数百台机器，数十 PB 的存储容量。并且这两类进程通过一致性协议来保证服务的高可用和数据的高可靠。这种高度集成的架构设计极大的降低了一款分布式系统的运维成本\n\n**MySQL Client**\n\n```\nDoris借助MySQL协议，用户使用任意MySQL的ODBC/JDBC以及MySQL的客户端，都可以直接访问Doris\n```\n\n**broker**\n\n```\nBroker 是 Doris 集群中一种可选进程，主要用于支持 Doris 读写远端存储上的文件和目录，如 HDFS、BOS 和 AFS 等\n```\n\n### 二、Doris安装和部署\n\n#### 2.1 Doris安装环境要求\n\n##### 2.1.1 Linux 操作系统版本需求\n\n| Linux 系统 |    版本    |\n| :--------: | :--------: |\n|   CentOS   | 7.1 及以上 |\n\n##### 2.1.2 软件需求\n\n| 软件 |     版本     |\n| :--: | :----------: |\n| Java |  1.8 及以上  |\n| GCC  | 4.8.2 及以上 |\n\n##### 2.1.3 Linux文件系统\n\next4和xfs文件系统均支持\n\n##### 2.1.4 机器配置( 生产环境 )\n\n|   模块   |  CPU  | 内存  |           磁盘           |   网络   | 实例数量（最低要求） |\n| :------: | :---: | :---: | :----------------------: | :------: | :------------------: |\n| Frontend | 16核+ | 64GB+ | SSD 或 RAID 卡，100GB+ * | 万兆网卡 |        1-3 *         |\n| Backend  | 16核+ | 64GB+ |   SSD 或 SATA，100G+ *   | 万兆网卡 |         3 *          |\n\n##### 2.1.5 端口预留\n\n| 实例名称 |        端口名称        | 默认端口 |       通讯方向       |                     说明                     |\n| :------: | :--------------------: | :------: | :------------------: | :------------------------------------------: |\n|    BE    |        be_prot         |   9060   |        FE–>BE        | BE上thrift server的端口用于接收来自FE 的请求 |\n|    BE    |     webserver_port     |   8040   |       BE<–>FE        |            BE上的http server端口             |\n|    BE    | heartbeat_service_port |   9050   |        FE–>BE        |     BE上心跳服务端口用于接收来自FE的心跳     |\n|    BE    |       brpc_prot*       |   8060   |    FE<–>BEBE<–>BE    |         BE上的brpc端口用于BE之间通信         |\n|    FE    |       http_port        |   8030   |  FE<–>FE用户<–> FE   |            FE上的http_server端口             |\n|    FE    |        rpc_port        |   9020   |    BE–>FEFE<–>FE     |            FE上thirt server端口号            |\n|    FE    |       query_port       |   9030   |      用户<–> FE      |            FE上的mysql server端口            |\n|    FE    |     edit_log_port      |   9010   |       FE<–>FE        |          FE上bdbje之间通信用的端口           |\n|  Broker  |    broker_ipc_port     |   8000   | FE–>BROKERBE–>BROKER |     Broker上的thrift server用于接收请求      |\n\n```\n端口部署可以更改，表中为官方版本各组件的默认端口\n```\n\n##### 2.1.6 部署常见的注意事项\n\n```\n（1）FE的磁盘空间主要用于存储元数据，包括日志和image。通常从几百MB到几个GB不等。\n\n（2）BE的磁盘空间主要用于存放用户数据，总磁盘空间按用户总数据量* 3（3副本）计算，然后再预留额外40%的空间用作后台compaction以及一些中间数据的存放。\n\n（3）一台机器上可以部署多个BE实例，但是只能部署一个 FE。如果需要 3 副本数据，那么至少需要 3 台机器各部署一个BE实例（而不是1台机器部署3个BE实例）。多个FE所在服务器的时钟必须保持一致（允许最多5秒的时钟偏差）\n\n（4）测试环境也可以仅适用一个BE进行测试。实际生产环境，BE实例数量直接决定了整体查询延迟。\n\n（5）所有部署节点关闭Swap。\n\n（6）FE节点数据至少为1（1个Follower）。当部署1个Follower和1个Observer时，可以实现读高可用。当部署3个Follower时，可以实现读写高可用（HA）。\n\n（7）Follower的数量必须为奇数，Observer 数量随意。\n\n（8）根据以往经验，当集群可用性要求很高时（比如提供在线业务），可以部署3个 Follower和1-3个Observer。如果是离线业务，建议部署1个Follower和1-3个Observer。\n\n（9）Broker是用于访问外部数据源（如HDFS）的进程。通常，在每台机器上部署一个 broker实例即可。\n```\n\n#### 2.2 Doris集群部署\n\n##### 2.2.1 机器规划\n\n| 实例名称   | 服务IP        | 机器资源  | 部署路径 |\n| ---------- | ------------- | --------- | -------- |\n| FE(LEADER) | 172.16.20.239 | 8c8g50g   | /data    |\n| BE         | 172.16.20.105 | 8c16g100g | /data    |\n| BE         | 172.16.20.73  | 8c16g100g | /data    |\n| BE         | 172.16.20.144 | 8c16g100g | /data    |\n\n```\n生产环境建议 FE 和 BE 分开\n```\n\n##### 2.2.2 安装包准备\n\n```\n官方下载地址：https://doris.apache.org/download\n\n注意：查看服务器是否支持 CPU Model ：avx2\ncat /proc/cpuinfo | grep avx2\n```\n\n![](图片\\doris-下载.png)\n\n```\n 如果CPU不支持avx2指令集，请选择无avx2版本。您可以通过cat /proc/cpuinfo检查是否支持。avx2指令将提高诸如布隆过滤器之类的数据结构的计算效率\n​ 支持avx2 可以下载X86( avx2 ) , 不支持avx2 可以下载X86( no avx2 )\n```\n\n##### 2.2.3 下载安装包\n\n```\n#部署安装2.1.4版本\nwget https://apache-doris-releases.oss-accelerate.aliyuncs.com/apache-doris-2.1.4-bin-x64.tar.gz\n```\n\n##### 2.2.4 安装Java和gcc环境\n\n因java和gcc都为常用环境，如没有需自行安装\n\n```\n# java版本信息查看\n[wangting@hdt-dmcp-ops01 ~]$ java -version\njava version \"1.8.0_212\"\nJava(TM) SE Runtime Environment (build 1.8.0_212-b10)\nJava HotSpot(TM) 64-Bit Server VM (build 25.212-b10, mixed mode)\n# gcc版本信息查看\n[wangting@hdt-dmcp-ops01 ~]$ gcc --version\ngcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)\nCopyright (C) 2015 Free Software Foundation, Inc.\n```\n\n##### 2.2.5 设置系统文件句柄数\n\n系统文件句柄\n\n```\n[wangting@hdt-dmcp-ops01 doris]$ sudo vim /etc/security/limits.conf\n# End of file\n\n* soft nofile 65536\n* hard nofile 131072\n* soft nproc 2048\n* hard nproc 65536\n```\n\n```\n在操作系统中，每个进程都有一个打开文件句柄的限制，它限制了进程能够同时打开的文件数。这个限制对于一些需要同时处理大量文件的应用程序来说可能会成为瓶颈。因此，可以通过修改系统最大打开文件句柄数来提高应用程序的性能。\n\n具体来说，增加最大打开文件句柄数可以：\n\n  提高服务器的并发性能：如果你的服务器需要同时处理大量的网络连接和文件 I/O 操作，那么增加最大打开文件句柄数可以提高服务器的并发性能，从而降低响应时间和延迟。\n  提高数据库性能：一些数据库软件如 MySQL，需要在处理大量的数据时打开大量的文件句柄，增加最大打开文件句柄数可以提高数据库的性能。\n  解决程序打开文件失败的问题：如果你的程序在运行时出现 “too many open files” 的错误，那么增加最大打开文件句柄数可以解决这个问题。\n```\n\n##### 2.2.6 关闭 swap 分区\n\n在部署 Doris 时，建议关闭 swap 分区。swap 分区是内核发现内存紧张时，会按照自己的策略将部分内存数据移动到配置的 swap 分区，由于内核策略不能充分了解应用的行为，会对数据库性能造成较大影响。所以建议关闭。\n\n通过以下命令可以临时或者永久关闭。\n\n**临时关闭**，下次机器启动时，swap 还会被打开。\n\n```\nswapoff -a \n```\n\n**永久关闭**，使用 Linux root 账户，注释掉 /etc/fstab 中的 swap 分区，然后重启即可彻底关闭 swap 分区。\n\n```\n# /etc/fstab\n# <file system>        <dir>         <type>    <options>             <dump> <pass>\ntmpfs                  /tmp          tmpfs     nodev,nosuid          0      0\n/dev/sda1              /             ext4      defaults,noatime      0      1\n# /dev/sda2              none          swap      defaults              0      0\n/dev/sda3              /home         ext4      defaults,noatime      0      2\n```\n\n##### 2.2.7 检测和关闭系统防火墙\n\n如果发现端口不同，可以试着关闭防火墙，确认是否是本机防火墙造成。如果是防火墙造成，可以根据配置的 Doris 各组件端口打开相应的端口通信。\n\n```sql\nsudo systemctl stop firewalld.service\nsudo systemctl disable firewalld.service\n```\n\n##### 2.2.8 配置 NTP 服务\n\nDoris 的元数据要求时间精度要小于 5000ms，所以所有集群所有机器要进行时钟同步，避免因为时钟问题引发的元数据不一致导致服务出现异常。\n\n通常情况下，可以通过配置 NTP 服务保证各节点时钟同步。\n\n```\nsudo systemctl start ntpd.service\nsudo systemctl enable ntpd.service\n```\n\n##### 2.2.9 修改虚拟内存区域数量\n\n修改虚拟内存区域至少 2000000\n\n```\nsysctl -w vm.max_map_count=2000000\n```\n\n永久修改\n\n```\nvim /etc/sysctl.conf\nvm.max_map_count=2000000\n```\n\n##### 2.2.10关闭透明大页\n\n在部署 Doris 时，建议关闭透明大页。\n\n```\necho never > /sys/kernel/mm/transparent_hugepage/enabled\necho never > /sys/kernel/mm/transparent_hugepage/defrag\n\n#永久关闭\nvim /etc/rc.local\necho never > /sys/kernel/mm/transparent_hugepage/enabled\necho never > /sys/kernel/mm/transparent_hugepage/defrag\n```\n\n##### 2.2.11 解压安装\n\n```\nmkdir -p /data\ntar -xf apache-doris-2.1.4-bin-x64.tar.gz -C /data\n```\n\n##### 2.2.12 配置FE\n\n```\ncd /data/apache-doris-2.1.4-bin-x64/fe\n\nln -s /data/apache-doris-2.1.4-bin-x64/fe/doris-meta /data/doris-fe-meta\n\nvim conf/fe.conf\n#修改 FE 元数据目录\nmeta_dir = ${DORIS_HOME}/doris-meta\n\n#绑定集群 IP\npriority_networks = 172.16.20.0/24\n\n#调整 FE 内存\nJAVA_OPTS=\"-Xmx16384m -XX:+UseMembar -XX:SurvivorRatio=8 -XX:MaxTenuringThreshold=7 -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSClassUnloadingEnabled -XX:-CMSParallelRemarkEnabled -XX:CMSInitiatingOccupancyFraction=80 -XX:SoftRefLRUPolicyMSPerMB=0 -Xloggc:$DORIS_HOME/log/fe.gc.log.$DATE\"\n\n#修改 Doris 大小写敏感参数 lower_case_table_names(可选)\n在 Doris 中默认表名大小写敏感。如果有对大小写不敏感的需求，需要在集群初始化时进行设置。表名大小写敏感在集群初始化完成后就无法再进行修改\nhttps://doris.apache.org/zh-CN/docs/query/query-variables/variables\n```\n\n##### 2.2.13 启动 FE 进程\n\n```\ncd /data/apache-doris-2.1.4-bin-x64/fe\n\nbin/start_fe.sh --daemon\n```\n\nFE 进程启动进入后台执行。日志默认存放在 `log/` 目录下。如启动失败，可以通过查看 `log/fe.log` 或者 log/fe.out 查看错误信息\n\n##### 2.2.14 检查 FE 启动状态\n\n#检查是否启动成功\n\n```\ncurl http://127.0.0.1:8030/api/bootstrap\n\n{\"msg\":\"success\",\"code\":0,\"data\":{\"replayedJournalId\":0,\"queryPort\":0,\"rpcPort\":0,eng\"version\":\"\"},\"count\":0}\n```\n\n通过 MySQL Client 可以链接 Doris 集群。初始化用户为 `root`，密码为空。\n\n```\nmysql -uroot -P<fe_query_port> -h<fe_ip_address>\n\nshow frontends \n\nAlive 为 true 表示节点存活\nJoin 为 true 表示节点加入到集群中，但不代表当前还在集群内（可能已失联）\nIsMaster 为 true 表示当前节点为 Master 节点\n```\n\n##### 2.2.15 FE Web 登录页面\n\n```\n访问地址: http://172.16.20.239:8030/login\n初始用户: root\n密码:无\n```\n\n![](图片\\doris-web.png)\n\n##### 2.2.16 配置 BE\n\n```\n#BE三节点都配置\n# 创建BE数据存放目录\nmkdir -p /data/doris-storage1\n mkdir -p /data/doris-storage2.SSD\n\n# 修改BE配置文件\n## 在 storage_root_path 中使用 medium 指定磁盘类型\n## /home/disk1/doris,medium:HDD： 表示该目录存储冷数据;\n## /home/disk2/doris,medium:SSD： 表示该目录存储热数据;\nvim /data/apache-doris-2.1.4-bin-x64/be/conf/be.conf\nstorage_root_path = /data/doris-storage1;/data/doris-storage2.SSD,10\npriority_networks = 172.16.20.0/24\n```\n\n```\nDoris 支持冷热数据分级存储，将冷数据存储在 HDD 或对象存储中，热数据存储在 SSD 中。\n\n可以通过路径区别节点内的冷热数据存储目录，HDD（冷数据目录）或 SSD（热数据目录）。如果不需要 BE 节点内的冷热机制，那么只需要配置路径即可，无需指定 medium 类型；也不需要修改 FE 的默认存储介质配置。\n\n在使用冷热数据分离功能时，需要在 storage_root_path 中使用 medium 选项。\n```\n\n##### 2.2.17 添加 BE\n\nBE节点需要先在FE中添加，才可加入集群。可以使用mysql-client连接到FE\n\n```\n注意：\n\n这里需要有MySQL客户端连接MySQL的client，安装忽略，yum安装mysqld或者mariadb均可\n```\n\n- 使用 Mysql 客户端连接到 FE\n\n```\nFE 默认没有密码\n```\n\n```\n[wangting@hdt-dmcp-ops01 ~]$ mysql -h hdt-dmcp-ops01 -uroot -P 9030\n# 设置密码\nMySQL [(none)]> SET PASSWORD FOR 'root' = PASSWORD('Doris@123');\nQuery OK, 0 rows affected (0.00 sec)\nMySQL [(none)]> exit;\nBye\n```\n\n```\n注意：\n这里密码改过以后，那FE的前端访问页面的ROOT密码，就是改后的，注意下次登录时需要输入对应的新密码\n```\n\n- 添加BE\n\n```\n## 链接任一存活的 FE 节点\nmysql -uroot -P<fe_query_port> -h<fe_ip_address>\n\n## 注册 BE 节点\n## be_heartbeat_service_port 可以从 be.conf 中查看，默认为 9050\n## 在 MySQL Client 中执行 ALTER SYSTEM 语句\nALTER SYSTEM ADD BACKEND \"<be_ip_address>:<be_heartbeat_service_port>\"\n```\n\n##### 2.2.18 **启动 BE 进程**\n\n通过以下命令可以启动 BE 进程\n\n```\nbin/start_be.sh --daemon\n```\n\nBE 进程启动进入后台执行。日志默认存放在 `log/` 目录下。如启动失败，可以通过查看 `log/be.log` 或者 `log/be.out` 查看错误信息\n\n##### 2.2.19 **查看 BE 启动状态**\n\n在链接到 Doris 集群后，通过 show backends 命令查看 BE 的状态。\n\n```\n## 链接 Doris 集群\nmysql -uroot -P<fe_query_port> -h<fe_ip_address>\n\n## 查看 BE 状态，在 MySQL Client 中执行 show 命令\nshow backends;\n```\n\n通常情况下需要注意以下几项状态：\n\n- Alive 为 true 表示节点存活\n- TabletNum 表示该节点上的分片数量，新加入的节点会进行数据均衡，TabletNum 逐渐趋于平均\n\n##### 2.2.20 验证集群正确性\n\n**登录数据库**\n\n通过 MySQL Client 登录 Doris 集群。\n\n```\n## 链接 Doris 集群\nmysql -uroot -P<fe_query_port> -h<fe_ip_address>\n```\n\n**检查 Doris 安装版本**\n\n通过 show frontends 与 show backends 命令可以查看数据库版本情况。\n\n```\n## 查看 FE 各实例的版本，在 MySQL Client 中执行 show 命令\nshow frontends \\G\n\n## 查看 BE 各实例的版本，在 MySQL Client 中执行 show 命令\nshow backends \\G\n```\n\n**修改 Doris 集群密码**\n\n在创建 Doris 集群后，系统会自动创建 `root` 用户，并默认密码为空。建议在创建集群后为 `root` 用户重置一个新密码。\n\n```\n## 确认当前用户为 root，在 MySQL Client 中查看当前用户\nselect user();\n+------------------------+\n| user()                 |\n+------------------------+\n| 'root'@'192.168.88.30' |\n+------------------------+\n\n## 修改 root 用户密码，在 MySQL Client 中执行 set password 命令\nSET PASSWORD = PASSWORD('doris_new_passwd');\n```\n\n**创建测试表并插入数据**\n\n在新创建的集群中，可以创建表并插入数据以验证集群正确性。\n\n```\n## 创建测试数据库，在 MySQL Client 中执行 create database 语句\ncreate database testdb;\n\n## 创建测试表，在 MySQL Client 中执行 create table 语句\nCREATE TABLE testdb.table_hash\n(\n    k1 TINYINT,\n    k2 DECIMAL(10, 2) DEFAULT \"10.5\",\n    k3 VARCHAR(10) COMMENT \"string column\",\n    k4 INT NOT NULL DEFAULT \"1\" COMMENT \"int column\"\n)\nCOMMENT \"my first table\"\nDISTRIBUTED BY HASH(k1) BUCKETS 32;\n```\n\nDoris 兼容 MySQL 协议，可以使用 insert 语句插入数据。\n\n```\n## 插入部分测试数据，在 MySQL Client 中执行 insert into 语句\nINSERT INTO testdb.table_hash VALUES\n(1, 10.1, 'AAA', 10),\n(2, 10.2, 'BBB', 20),\n(3, 10.3, 'CCC', 30),\n(4, 10.4, 'DDD', 40),\n(5, 10.5, 'EEE', 50);\n\n## 验证插入数据正确性，在 MySQL Client 中执行 select 语句\nSELECT * from testdb.table_hash;\n+------+-------+------+------+\n| k1   | k2    | k3   | k4   |\n+------+-------+------+------+\n|    3 | 10.30 | CCC  |   30 |\n|    4 | 10.40 | DDD  |   40 |\n|    5 | 10.50 | EEE  |   50 |\n|    1 | 10.10 | AAA  |   10 |\n|    2 | 10.20 | BBB  |   20 |\n+------+-------+------+------+\n```\n\n### 三、Doris扩容和缩容\n\n#### 3.1 FE 扩容和缩容\n\n可以通过将FE扩容至3个以上节点(必须是奇数)来实现FE的高可用\n\n##### 3.1.1 FE扩容\n\n- 查看 FE 状态\n\n```\nMySQL [(none)]> show proc '/frontends'\\G;\n*************************** 1. row ***************************\n             Name: 172.20.8.117_9010_1683623765731\n               IP: 172.20.8.117\n         HostName: hdt-dmcp-ops01\n      EditLogPort: 9010\n         HttpPort: 8130\n        QueryPort: 9030\n          RpcPort: 9020\n             Role: FOLLOWER\n         IsMaster: true\n        ClusterId: 2040453956\n             Join: true\n            Alive: true\nReplayedJournalId: 18054\n    LastHeartbeat: 2023-05-10 09:59:13\n         IsHelper: true\n           ErrMsg: \n          Version: 1.1.5-rc02-ef0635dae7\n CurrentConnected: Yes\n1 row in set (0.01 sec)\n```\n\n从查询结果看，目前只有一个 FE，Role 为 FOLLOWER\n\n- 增加FE节点\n\n FE分为Leader，Follower和Observer三种角色。 默认一个集群只能有一个Leader，可以有多个Follower和Observer。其中Leader和Follower组成一个Paxos选择组，如果 Leader宕机，则剩下的Follower 会自动选出新的Leader，保证写入高可用。Observer 同步 Leader的数据，但是不参加选举。\n 如果只部署一个FE，则FE 默认就是Leader。在此基础上，可以添加若干Follower和 Observer。\n\n    # 增加FOLLOWER\n    ALTER SYSTEM ADD FOLLOWER \"follower_host:edit_log_port\";\n    # 增加OBSERVER\n    ALTER SYSTEM ADD OBSERVER \"observer_host:edit_log_port\";\n\n```\n此时只是加入角色，各 FE 节点服务还未部署\n```\n\n- 配置Follower和Observer\n\n```\n参考2.2.12\n```\n\n启动新的 FE 节点\n\n```\n注意：\n扩容的节点第一次启动时，启动命令需要添加参 --helper leader的IP:port，第一次需要成功启动加入到集群后，后续就不需要helper参数了\n```\n\n```\n./bin/start_fe.sh --helper leader_fe_host:edit_log_port --daemon\n```\n\n查看 FE 状态\n\n```\nshow proc '/frontends'\\G;\n```\n\n##### 3.1.2 FE缩容\n\n删除只需执行如下命令即可：\n\n```\nALTER SYSTEM DROP FOLLOWER[OBSERVER] \"fe_host:edit_log_port\";\n```\n\n```\n注意：\n删除 Follower FE 时，确保最终剩余的 Follower（包括 Leader）节点为奇数的合理状态\n```\n\n#### 3.2 BE扩容和缩容\n\n##### 3.2.1 BE扩容\n\nBE扩容和第一次部署添加 BE 方式一样\n\n```\n在MySQL命令行，通过 ALTER SYSTEM ADD BACKEND 命令增加BE节点\n\nALTER SYSTEM ADD BACKEND \"hdt-dmcp-ops04:9050\";\n```\n\n##### 3.2.2 BE缩容\n\n使用 `DECOMMISSION` 方式删除BE节点\n\n```\n语法：ALTER SYSTEM DECOMMISSION BACKEND \"be_host:be_heartbeat_service_port\";\n\n示例：ALTER SYSTEM DECOMMISSION BACKEND \"hdt-dmcp-ops05:9050\";\n```\n\n```\n注意：\n\n该命令用于安全删除BE节点。命令下发后，Doris 会尝试将该BE上的数据向其他BE节点迁移，当所有数据都迁移完成后，Doris会自动删除该节点。\n\n该命令是一个异步操作。执行后，可以通过 SHOW PROC ‘/backends’; 看到该 BE 节点的isDecommission状态为true。表示该节点正在进行下线。\n\n该命令不一定执行成功。比如剩余BE存储空间不足以容纳下线BE上的数据，或者剩余机器数量不满足最小副本数时，该命令都无法完成，并且BE会一直处于 isDecommission为true的状态。\n\nDECOMMISSION的进度，可以通过SHOW PROC ‘/backends’; 中的TabletNum查看，如果正在进行，TabletNum将不断减少。\n\n该操作可以通过如下命令取消：\n\nCANCEL DECOMMISSION BACKEND \"be_host:be_heartbeat_service_port\";\n\n如执行取消命令后，该BE上的数据将维持当前剩余的数据量。后续Doris重新进行负载均衡\n除了使用DECOMMISSION方式，还可以直接使用 DROP 方式删除 BE 节点，但生产环境不建议使用\n\n示例：ALTER SYSTEM DROP BACKEND \"be_host:be_heartbeat_service_port\";\n\nDROP BACKEND 会直接删除该BE，并且其上的数据将不能再恢复。方式比较暴力，所以不推荐使用 DROP BACKEND 这种方式删除BE节点。当执行这个语句时，也会有对应的防误操作提示信息\n```\n\n### 四、Doris 基本概念与介绍\n\n#### 4.1 Doris基本概念\n\n##### 4.1.1 Row & Column\n\n 一张表包括行（Row）和列（Column）：\n\n```\nRow , 即用户的一行数据;\n\nColumn , 用于描述一行数据中不同的字段。\n```\n\nColumn 可以分为两大类：Key 和 Value。从业务角度看，Key 和 Value 可以分别对应维度列和指标列\n\n```\nDoris数据库是一个分布式的列式存储引擎，它的数据模型是基于列式存储的。在Doris数据库中，一个Row就是一个数据行，它由多个Column组成。每个Column则代表这个数据行中的一个属性或者字段。因此，我们也可以将一个Row看做是一个数据表中的一行数据，而Column则对应数据表中的列。\n\n在Doris数据库中，由于数据是以列式存储的，因此在查询时可以只读取需要的Column数据，而不用读取整个Row数据，这就大大提高了查询性能。同时，Doris还支持Column的压缩和编码，可以进一步减小存储空间，提高数据的存储和查询效率。\n\n总之，在Doris数据库中，Row和Column是基本的数据结构，Row代表一个数据行，Column代表一个属性或字段，这种设计使得Doris能够高效地存储和查询海量数据。\n```\n\n##### 4.1.2 Tablet & Partition\n\n```\n在Doris的存储引擎中，用户数据首先被划分成若干个分区（Partition），划分的规则通常是按照用户指定的分区列进行范围划分，比如按时间划分。而在每个分区内，数据被进一步的按照Hash的方式分桶，分桶的规则是要找用户指定的分桶列的值进行Hash后分桶。每个分桶就是一个数据分片（Tablet），也是数据划分的最小逻辑单元。\n\nTablet之间的数据是没有交集的，独立存储的。Tablet也是数据移动、复制等操作的最小物理存储单元。\n\nPartition可以视为是逻辑上最小的管理单元。数据的导入与删除，都可以或仅能针对一个 Partition 进行,例如，可以按照数据的时间戳、地理位置、业务类型等进行分区，以保证数据的高效存储和查询。每个Partition都包含一定数量的数据块（Data Block），一个数据块包含一段连续的数据和对应的元数据信息，用于支持查询和数据的压缩存储等功能。\n\n总之，Doris的Tablet和Partition是实现高性能、高可用的分布式存储和计算的关键组件，通过合理的划分和分配，可以充分利用计算和存储资源，提高数据的利用率和系统的性能\n```\n\n#### 4.2 Doris字段类型\n\n| TINYINT                     | 1字节         | 范围：-2^7 + 1 ~ 2^7 - 1                                     |\n| --------------------------- | ------------- | ------------------------------------------------------------ |\n| SMALLINT                    | 2字节         | 范围：-2^15 + 1 ~ 2^15 - 1                                   |\n| INT                         | 4字节         | 范围：-2^31 + 1 ~ 2^31 - 1                                   |\n| BIGINT                      | 8字节         | 范围：-2^63 + 1 ~ 2^63 - 1                                   |\n| LARGEINT                    | 16字节        | 范围：-2^127 + 1 ~ 2^127 - 1                                 |\n| FLOAT                       | 4字节         | 支持科学计数法                                               |\n| DOUBLE                      | 12字节        | 支持科学计数法                                               |\n| DECIMAL[(precision, scale)] | 16字节        | 保证精度的小数类型。默认是 DECIMAL(10, 0)precision: 1 ~ 27scale: 0 ~ 9其中整数部分为 1 ~ 18不支持科学计数法 |\n| DATE                        | 3字节         | 范围：0000-01-01 ~ 9999-12-31                                |\n| DATETIME                    | 8字节         | 范围：0000-01-01 00:00:00 ~ 9999-12-31 23:59:59              |\n| CHAR[(length)]              |               | 定长字符串。长度范围：1 ~ 255。默认为1                       |\n| VARCHAR[(length)]           |               | 变长字符串。长度范围：1 ~ 65533                              |\n| BOOLEAN                     |               | 与TINYINT一样，0代表false，1代表true                         |\n| HLL                         | 1~16385个字节 | hll列类型，不需要指定长度和默认值、长度根据数据的聚合程度系统内控制，并且HLL列只能通过配套的hll_union_agg、Hll_cardinality、hll_hash进行查询或使用 |\n| BITMAP                      |               | bitmap列类型，不需要指定长度和默认值。表示整型的集合，元素最大支持到2^64 - 1 |\n| STRING                      |               | 变长字符串，0.15版本支持，最大支持2147483643 字节（2GB-4），长度还受be 配置`string_type_soft_limit`, 实际能存储的最大长度取两者最小值。只能用在value 列，不能用在 key 列和分区、分桶列 |\n\n#### 4.3 Doris数据模型\n\nDoris 的数据模型主要分为3类\n\nAggregate - 实现聚合查询\n\n```\nDoris的Aggregate模型是Doris中的一种数据模型，用于支持快速的聚合查询。该模型将数据按照一定的规则进行分组，并对每个分组内的数据进行聚合计算，得到一个汇总的结果。在Doris中，Aggregate模型是通过一个存储在内存中的数据结构进行计算的，这个数据结构被称为“HyperLogLog”（简称HLL）。HLL可以快速地统计一个数据集的基数（不同元素的个数），并且可以进行基于聚合的计算，例如计算不同的元素的个数、求和、平均值等。在Doris中，用户可以通过定义聚合键、聚合函数等参数来创建Aggregate模型，从而支持更高效的查询操作。\n```\n\nUnique - 实现唯一性约束\n\n```\nDoris数据库的Unique模型是指在Doris中使用了一种特殊的索引结构，称为Unique索引，来实现唯一性约束。这种索引结构允许在表的某个列上创建唯一性约束，保证该列的值在表中是唯一的，并且可以快速地检查重复值。\n\n在Doris中，Unique索引使用B+树数据结构来实现，通过将唯一性列的值作为索引的键值，将其它列的值作为索引的数据值，来构建索引。当插入或更新数据时，Doris会自动检查唯一性列的值是否已经存在，如果不存在则插入数据，否则更新数据。这样就可以避免重复数据的插入，保证数据的唯一性。\n\nUnique模型主要用于实现单列唯一性约束，如果需要实现多列唯一性约束，则需要使用Doris的联合索引。\n```\n\nDuplicate - 实现自动检测和删除重复数据\n\n```\nDoris数据库的Duplicate模型是用于处理数据冗余问题的模型，它可以自动检测和删除重复数据。在Doris数据库中，数据是以分布式表的形式存储的，分布式表由多个分片组成，每个分片都有自己的数据副本。当用户执行插入操作时，Duplicate模型会首先检测分片中是否已经存在相同的数据，如果存在，则会自动删除重复数据，从而保证数据的唯一性。Duplicate模型还支持对唯一性约束进行自定义设置，用户可以根据自己的业务需求来定义唯一性约束。\n```\n\n建测试库\n\n```\nMySQL [(none)]> create database test_db;\nQuery OK, 0 rows affected (0.02 sec)\n\nMySQL [(none)]> use test_db;\nDatabase changed\nMySQL [test_db]> \n```\n\n##### 4.3.1 Aggregate使用示例\n\n- 建表\n\n```\nCREATE TABLE IF NOT EXISTS test_db.example_site_visit\n(\n    `user_id` LARGEINT NOT NULL COMMENT \"用户id\",\n    `date` DATE NOT NULL COMMENT \"数据灌入日期时间\",\n    `city` VARCHAR(20) COMMENT \"用户所在城市\",\n    `age` SMALLINT COMMENT \"用户年龄\",\n    `sex` TINYINT COMMENT \"用户性别\",\n`last_visit_date` DATETIME REPLACE DEFAULT \"1970-01-01 00:00:00\" COMMENT \"用户最后一次访问时间\",\n    `cost` BIGINT SUM DEFAULT \"0\" COMMENT \"用户总消费\",\n    `max_dwell_time` INT MAX DEFAULT \"0\" COMMENT \"用户最大停留时间\",\n    `min_dwell_time` INT MIN DEFAULT \"99999\" COMMENT \"用户最小停留时间\"\n)\nAGGREGATE KEY(`user_id`, `date`, `city`, `age`, `sex`)\nDISTRIBUTED BY HASH(`user_id`) BUCKETS 10;\n```\n\n- 插入样例数据\n\n```\ninsert into test_db.example_site_visit values\\\n(10000,'2017-10-01','北京',20,0,'2017-10-01 06:00:00' ,20,10,10),\\\n(10000,'2017-10-01','北京',20,0,'2017-10-01 07:00:00',15,2,2),\\\n(10001,'2017-10-01','北京',30,1,'2017-10-01 17:05:45',2,22,22),\\\n(10002,'2017-10-02','上海',20,1,'2017-10-02 12:59:12' ,200,5,5),\\\n(10003,'2017-10-02','广州',32,0,'2017-10-02 11:20:00',30,11,11),\\\n(10004,'2017-10-01','深圳',35,0,'2017-10-01 10:00:15',100,3,3),\\\n(10004,'2017-10-03','深圳',35,0,'2017-10-03 10:20:22',11,6,6);\n```\n\n- 查看数据验证\n\n```\n可以观察结果针对同一个user_id进行的聚合结果\n\n根据建表语句中AGGREGATE KEY(user_id, date, city, age, sex),涉及的字段信息都相同进行聚合，如有不同不触发聚合\n\n10000信息相同进行聚合，而10004灌入日期时间就已经不同，不进行聚合\n```\n\n![](图片\\doris-Aggregate.png)\n\n##### 4.3.2 Unique 使用示例\n\n- 建表\n\n```\nCREATE TABLE IF NOT EXISTS test_db.user\n(\n    `user_id` LARGEINT NOT NULL COMMENT \"用户id\",\n    `username` VARCHAR(50) NOT NULL COMMENT \"用户昵称\",\n    `city` VARCHAR(20) COMMENT \"用户所在城市\",\n    `age` SMALLINT COMMENT \"用户年龄\",\n    `sex` TINYINT COMMENT \"用户性别\",\n    `phone` LARGEINT COMMENT \"用户电话\",\n    `address` VARCHAR(500) COMMENT \"用户地址\",\n    `register_time` DATETIME COMMENT \"用户注册时间\"\n)\nUNIQUE KEY(`user_id`, `username`)\nDISTRIBUTED BY HASH(`user_id`) BUCKETS 10;\n```\n\n- 插入样例数据\n\n```\ninsert into test_db.user values\\\n(10000,'wuyanzu','北京',18,0,12345678910,'北京朝阳区','2017-10-01 07:00:00'),\\\n(10000,'wuyanzu','北京',19,0,12345678910,'北京朝阳区','2017-10-01 07:00:00'),\\\n(10000,'zhangsan','北京',20,0,12345678910,'北京海淀区','2017-11-15 06:10:20');\n```\n\n- 查看数据验证\n\n可以观察结果针对同一个`user_id`进行的聚合结果\n\n根据建表语句中`UNIQUE KEY(user_id, username)`,涉及的字段信息都相同进行去重，如有不同不触发去重\n\n![](图片\\doris-Unique.png)\n\n```\n注意：\n\nUnique 模型完全可以用聚合模型中的 REPLACE 方式替代。其内部的实现方式和数据存储方式也完全一样\n\n简单的理解就是 Unique 能实现的功能都可以用 Aggregate 实现\n```\n\n补充示例：\n\n```\n# 建表\nCREATE TABLE IF NOT EXISTS test_db.user_2 \n(\n    `user_id` LARGEINT NOT NULL COMMENT \"用户id\",\n    `username` VARCHAR(50) NOT NULL COMMENT \"用户昵称\",\n    `city` VARCHAR(20) REPLACE COMMENT \"用户所在城市\",\n    `age` SMALLINT REPLACE COMMENT \"用户年龄\",\n    `sex` TINYINT REPLACE COMMENT \"用户性别\",\n    `phone` LARGEINT REPLACE COMMENT \"用户电话\",\n    `address` VARCHAR(500) REPLACE COMMENT \"用户地址\",\n    `register_time` DATETIME REPLACE COMMENT \"用户注册时间\"\n)\nAGGREGATE KEY(`user_id`, `username`)\nDISTRIBUTED BY HASH(`user_id`) BUCKETS 10;\n\n# 插入样例数据\ninsert into test_db.user_2 values\\\n(10000,'wuyanzu','北京',18,0,12345678910,'北京朝阳区','2017-10-01 07:00:00'),\\\n(10000,'wuyanzu','北京',19,0,12345678910,'北京朝阳区','2017-10-01 07:00:00'),\\\n(10000,'zhangsan','北京',20,0,12345678910,'北京海淀区','2017-11-15 06:10:20');\n\n# 查询验证 发现也是只有2条，成功去重\nMySQL [test_db]> select user_id,username,city,age from user_2;\n+---------+----------+--------+------+\n| user_id | username | city   | age  |\n+---------+----------+--------+------+\n| 10000   | wuyanzu  | 北京   |   19 |\n| 10000   | zhangsan | 北京   |   20 |\n+---------+----------+--------+------+\n```\n\n##### 4.3.3 Duplicate 使用示例\n\n- 建表\n\n```\nCREATE TABLE IF NOT EXISTS test_db.example_log\n(\n    `timestamp` DATETIME NOT NULL COMMENT \"日志时间\",\n    `type` INT NOT NULL COMMENT \"日志类型\",\n    `error_code` INT COMMENT \"错误码\",\n    `error_msg` VARCHAR(1024) COMMENT \"错误详细信息\",\n    `op_id` BIGINT COMMENT \"负责人id\",\n    `op_time` DATETIME COMMENT \"处理时间\"\n)\nDUPLICATE KEY(`timestamp`, `type`)\nDISTRIBUTED BY HASH(`timestamp`) BUCKETS 10;\n```\n\n- 插入样例数据\n\n```\ninsert into test_db.example_log values\\\n('2017-10-01 08:00:05',1,404,'not found page', 101, '2017-10-01 08:00:05'),\\\n('2017-10-01 08:00:05',1,404,'not found page', 101, '2017-10-01 08:00:05'),\\\n('2017-10-01 08:00:05',2,404,'not found page', 101, '2017-10-01 08:00:06'),\\\n('2017-10-01 08:00:06',2,404,'not found page', 101, '2017-10-01 08:00:07');\n```\n\n- 查看数据验证\n\n```\nMySQL [test_db]> select * from example_log;\n+---------------------+------+------------+----------------+-------+---------------------+\n| timestamp           | type | error_code | error_msg      | op_id | op_time             |\n+---------------------+------+------------+----------------+-------+---------------------+\n| 2017-10-01 08:00:05 |    1 |        404 | not found page |   101 | 2017-10-01 08:00:05 |\n| 2017-10-01 08:00:05 |    1 |        404 | not found page |   101 | 2017-10-01 08:00:05 |\n| 2017-10-01 08:00:05 |    2 |        404 | not found page |   101 | 2017-10-01 08:00:06 |\n| 2017-10-01 08:00:06 |    2 |        404 | not found page |   101 | 2017-10-01 08:00:07 |\n+---------------------+------+------------+----------------+-------+---------------------+\n```\n\nDuplicate 这种数据模型区别于 Aggregate 和 Unique 模型。数据完全按照导入文件中的数据进行存储，不会有任何聚合。即使两行数据完全相同，也都会保留。 而在建表语句中指定的 DUPLICATE KEY，只是用来指明底层数据按照那些列进行排序。\n\n```\n在 DUPLICATE KEY 的选择上，建议适当的选择前 2-4 列就可以，这种数据模型适用于既没有聚合需求，又没有主键唯一性约束的原始数据的存储。\n```\n\n#### 4.4 Doris web-ui使用\n\n```\n首页可以查看Doris应用部署的版本信息`Version`和对应服务器的硬件信息`Hardware Info`\n\n页面`Playground`可以进行SQL查询\n\n页面System可以查看集群的基本信息，例如用户、节点、状态等等情况\n\n页面Log可以直接查看部署应用的log日志，十分便捷\n\n页面Session Info可以实时监控当前Doris数据库实时会话信息，例如使用命令行连接数据库，再使用Navicat工具连一个会话，则可以在页面看到当前2个连接session信息\n```\n\n#### 4.5 Doris丰富的建表示例\n\n查看建表帮助\n\n```\nHELP CREATE TABLE;\n```\n\n可以查看建表的各类示例\n\n```\nDescription:\n\n该语句用于创建 table。\n语法：\n​```\n    CREATE [EXTERNAL] TABLE [IF NOT EXISTS] [database.]table_name\n    (column_definition1[, column_definition2, ...]\n    [, index_definition1[, index_definition2, ...]])\n    [ENGINE = [olap|mysql|broker|hive|iceberg]]\n    [key_desc]\n    [COMMENT \"table comment\"];\n    [partition_desc]\n    [distribution_desc]\n    [rollup_index]\n    [PROPERTIES (\"key\"=\"value\", ...)]\n    [BROKER PROPERTIES (\"key\"=\"value\", ...)]\n​```\n```\n\n例如帮助中有非常丰富的不同场景的建表示例( 都可以通过`HELP CREATE TABLE;`直接查看获取 )：\n\n```\n创建一个 olap 表，使用 HASH 分桶，使用列存，相同key的记录进行聚合\n创建一个 olap 表，使用 Hash 分桶，使用列存，相同key的记录进行覆盖，\n创建一个 olap 表，使用 Range 分区，使用Hash分桶，默认使用列存，\n创建一个 olap 表，使用 List 分区，使用Hash分桶，默认使用列存，\n创建一个 mysql 表\n创建一个数据文件存储在HDFS上的 broker 外部表, 数据使用 “|” 分割，“\\n” 换行\n创建一张含有HLL列的表\n创建一张含有BITMAP_UNION聚合类型的表（v1和v2列的原始数据类型必须是TINYINT,SMALLINT,INT）\n创建两张支持Colocate Join的表t1 和t2\n创建一个数据文件存储在BOS上的 broker 外部表\n创建一个带有bitmap 索引的表\n创建一个动态分区表(需要在FE配置中开启动态分区功能)，该表每天提前创建3天的分区，并删除3天前的分区。例如今天为2020-01-08，则会创建分区名为p20200108, p20200109,\n创建一个带有rollup索引的表\n创建一个内存表\n创建一个hive外部表\n通过 replication_allocation 指定表的副本分布\n创建一个 Iceberg 外表\n```\n\n### 五、Doris集群管理\n\n#### 5.1 配置管理\n\n##### 5.1.1 FE配置项\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/config/fe-config\n```\n\n##### 5.1.2 BE配置项\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/config/be-config\n```\n\n#### 5.2 运维监控\n\n**监控指标**\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/maint-monitor/monitor-metrics/metrics\n```\n\n**磁盘空间管理**\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/maint-monitor/disk-capacity\n```\n\n**数据副本管理**\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/maint-monitor/tablet-repair-and-balance\n```\n\n**元数据运维**\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/maint-monitor/tablet-repair-and-balance\n\nhttps://doris.apache.org/zh-CN/community/design/metadata-design\n```\n\n#### 5.3 工作负载分析\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/resource-admin/workload-analysis\n```\n\n#### 5.4 SQL拦截\n\nsql查询数据超过一定大小拦截，或直接拦截对应sql语句\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/query-admin/sql-interception\n```\n\n#### 5.5 服务自动拉起\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/maint-monitor/automatic-service-start\n```\n\n#### 5.6 OPEN API使用\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/open-api/overview\n```\n\n#### 5.7 安全管理\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/auth/authentication-and-authorization\n```\n\n```\n#示例\nSHOW ALL GRANTS;\nSHOW GRANTS FOR 'admin'@'%';\nselect * from mysql.user;\n\n#创建数据库\ncreate DATABASE vota;\n#创建角色\nshow roles;\nCREATE ROLE vota_rd COMMENT \"vota Read\";\nCREATE ROLE vota_rw COMMENT \"vota Read and Write Role\";\n#授予角色权限\nGRANT Select_priv,Load_priv on vota.* to Role 'vota_rd';\nGRANT Select_priv,Load_priv,Alter_priv,Create_priv,Drop_priv on vota.* to Role 'vota_rw';\n#创建用户\ndrop user vota;\nCREATE USER 'vota'@'%' IDENTIFIED BY 'Vota@126' DEFAULT ROLE 'vota_rd';\nCREATE USER 'vota_admin'@'%' IDENTIFIED BY 'Vota_admin@126' DEFAULT ROLE 'vota_rw';\n#密码修改\nSET PASSWORD FOR 'jack'@'192.%' = PASSWORD('123456')\n#授予用户角色\nGRANT 'vota_rd' TO 'vota'@'%';\nGRANT 'vota_rw' TO 'vota_admin'@'%';\n#登录验证\n```\n\n#### 5.8 数据备份恢复\n\n表级备份恢复，恢复时需手动创建database，仅支持S3和HDFS备份\n\n```\n数据备份：https://doris.apache.org/zh-CN/docs/admin-manual/data-admin/backup-restore/backup\n数据恢复：https://doris.apache.org/zh-CN/docs/admin-manual/data-admin/backup-restore/restore\n回收站恢复：https://doris.apache.org/zh-CN/docs/admin-manual/data-admin/recyclebin\n```\n\n```\n#查看当前仓库\nSHOW REPOSITORIES;\n#查看仓库创建语句\nSHOW CREATE REPOSITORY for <repo_name>;\n\n#创建备份仓库\nCREATE REPOSITORY `minio_repo`\nWITH S3\nON LOCATION \"s3://doris-backup-bucket/bak\"\nPROPERTIES\n(\n    \"AWS_ENDPOINT\" = \"http://172.16.20.233:9001\",\n    \"AWS_ACCESS_KEY\" = \"admin\",\n    \"AWS_SECRET_KEY\"=\"jzzx123456\",\n    \"AWS_REGION\" = \"REGION\",\n\t\"use_path_style\" = \"true\"\n); \n\n\n#database全量备份\nBACKUP SNAPSHOT destdb.`destdb_20241225`\nTO example_repo;\n\n#表级恢复\nRESTORE SNAPSHOT testdb.`snapshot_testdb_20250506`\nFROM `minio_repo`\nON\n(\n    `institutional_person_info` AS `institutional_person_info_bak`\n)\nPROPERTIES\n(\n    \"backup_timestamp\"=\"2025-05-06-17-12-40\"\n);\n\n\n#库级恢复\nRESTORE SNAPSHOT destdb.`restore_label1`\nFROM `example_repo`\nPROPERTIES\n(\n    \"backup_timestamp\"=\"2022-04-08-15-52-29\"\n);\n\n\n#单表全量备份\nBACKUP SNAPSHOT testdb.snapshot_sa_code\nTO minio_repo\nON (sa_code)\nPROPERTIES (\"type\" = \"full\");\n\n#已存在备份\nSHOW SNAPSHOT ON minio_repo WHERE SNAPSHOT = \"snapshot_sa_code\";\n\n#单表恢复\nRESTORE SNAPSHOT test.snapshot_test\nFROM `minio_repo`\nPROPERTIES\n(\n    \"backup_timestamp\"=\"2024-11-14-09-59-33\" \n);\n\n#查看备份状态\nshow BACKUP\\G;\n\n#取消备份\nCANCEL BACKUP FROM db_name;\n```\n\n#### 5.9 集群升级\n\n```\nhttps://doris.apache.org/zh-CN/docs/admin-manual/cluster-management/upgrade\n```\n\n### 六、Doris断电异常问题处理\n\n```\ndoris fe和be节点因物理机断电，异常关闭，无法正常启动。fe节点元数据文件损坏，be节点tablet副本数据损坏且表数据为单副本。\n```\n\n#### 6.1 Doris fe修复\n\nfe节点启动报错，fe meta数据损坏，错误如下图：\n\n![](图片\\doris-fe故障.png)\n\n##### 6.1.1 检查fe集群状态\n\n确认fe 集群节点正常，确认master节点正常及损坏节点状态\n\n```\nshow proc '/frontends'\\G;\n```\n\n##### 6.1.2 fe损坏节点元数据同步\n\n```\n# 停止 FE\nsh bin/stop_fe.sh\n\n# 备份 meta 元数据\ncp -r doris-meta doris-meta.bak.$(date +%F)\n\n# 删除 BDB 持久化目录\nrm -rf doris-meta\n\n# 重启 FE，节点会重新与 leader 元数据同步\n./bin/start_fe.sh --helper leader_fe_host:edit_log_port --daemon\n\n#查看当前FE状态\nshow proc '/frontends'\\G;\n```\n\n##### 6.1.3 FE 正常恢复启动\n\n```\n./bin/start_fe.sh --daemon\n```\n\n#### 6.2 Doris be修复\n\n```\n数据副本管理：https://doris.apache.org/zh-CN/docs/admin-manual/maint-monitor/tablet-repair-and-balance\n参考文档：\nhttps://mp.weixin.qq.com/s/bslbn51o4oltV2ATnuABPA\nhttps://doris-forum.org.cn/questions/D1Pw1/zui-jia-shi-jian-shu-ju-fu-ben-wen-ti-pai-cha-zhi-nan\nhttps://blog.csdn.net/S1124654/article/details/133943714\n```\n\n##### 6.2.1 问题现象\n\n**问题日志**\n\n```\nExecution failed: Error Failed to execute sql: java.sql.SQLException: (conn=440550) errCode = 2, detailMessage = Failed to get scan range, no queryable replica found in tablet: 89273. Reason: Visible Replicas:Visible version: 2, Replicas: [replicaId=89274, backendId=10452, backendAlive=true, version=3, lastFailedVersion=4, lastSuccessVersion=3, lastFailedTimestamp=1723617079544, state=NORMAL].\n\n\nfailed to make snapshot|tablet_id=20176804|schema_hash=1673275255|error=[INTERNAL_ERROR]fail to find path in version_graph. spec_version: 0-81741\n```\n\n**问题说明**\n\n```\n查询时，FE让BE返回spec_version范围的数据，但是BE缺部分version了，就会报这个错误；\n```\n\n**问题原因**\n\n```\n迁移副本过程可能丢version，在2.0.3修复了，或者在数据导入过程中be宕机。 \n```\n\n**注意:** 如果版本是2.0.1及以前，且它的所有副本last failed version > 0，通常需要重新建表进行导数。\n\n##### **6.2.2 问题定位**\n\n![](图片\\doris-be故障.webp)\n\n如上图所示，查询报错的 tablet_id 是 606202， BE ip是 10.xxx， BE 需要包含version 区间 [0 - 35]。 \n\n当确定异常tablet_id时，参考如下步骤先进行问题信息收集：\n\n![](图片\\doris-be故障-1.webp)\n\n**1. 获取异常tablet的详细信息**\n\n```\n-- 这里是606202，拿到detail cmd\nshow tablet {tablet_id} \n```\n\n**2. 执行DetailCmd**\n\n```\nSHOW PROC ' /dbs/10113/591325/partitions/606195/591326/606202\";\n```\n\n找出该BE所在的副本（CompactionStatus url中包含有该BE的ip），如果BackendId等字段显示为-1，说明该tabelt可能已经自动修复或迁移了。\n\n**3. 执行curl<步骤2的CompactionStatus url>(或在浏览器打开该url)**\n\n```\ncurl  http://10.xxx:8040/api/compaction/show?tablet_id=606202\n```\n\n![](图片\\doris-be故障-2.webp)\n\n查看该副本的rowset 和 missing_rowset，重点看rowset 的最大版本（这里是34）和 missing_rowsets。从上图可以看出该副本的rowset 为 0 ~ 34， 且中间不缺version(missing_rowsets为空)。而查询语句中是 special  version 是 [0, 35]， 但该BE不含version 35。所以需要给该BE补上version 35。 \n\n**注意**：这里的special version实际就是partition的visible version。它也可以通过如下指令查看。\n\n```\nshow partitions from <table-name xxx> where PartitionName = '<partition name xxx>' \n```\n\n##### 6.2.3 问题处理\n\n**临时规避方案**\n\n执行下面命令可恢复查询，如果需要全局设置，可以加上 **global** 关键字\n\n```\nshow variables like '%skip%';\nset skip_missing_version=true;\nset skip_bad_tablet=true;\n```\n\n**1. 确认是否自动修复**\n\n由于doris内部会自动做数据均衡和修复，所以当出现数据副本异常时，先确认异常数据副本能否自动修复：\n\n![](图片\\doris-be故障-3.webp)\n\n如果是多副本，查看是否存在健康副本。健康副本是指副本version >= special version && last failed version = -1 && isBad = false， 且curl 它的 CompactionStatus， missing rowsets 为空。 \n\n如果存在这样的副本，把查询报错的副本set bad，如上图所示BackendId为10003上版本远落后于其他两个副本的version，可以通过设置为bad来自动修复。\n\n```\nADMIN SET REPLICA STATUS PROPERTIES(\"tablet_id\" = \"7552021\", \"backend_id\" = \"10003\", \"status\" = \"bad\");\n```\n\n等待一会（可能需要一两分钟），再执行步骤2中的DetailCmd，如果副本都健康了：\n\n```\nversion >= special version && last failed version = -1 && isBad = false\n```\n\n且curl它的CompactionStatus,  missing rowsets为空，说明修补OK了。且执行select count (*) from table_xx 是否OK。 \n\n如果没问题，就自动修复完成了，不用往下看。如果还是有问题，接着往下看。\n\n**2. 重新导数手动修复**\n\n```\n如果是多个副本都损坏，并且是分区表的情况下，可以删除这个分区，然后手动重建这个分区，重新导入数据即可。\n\n如果是多个副本都损坏，并且是非分区表的情况下，只能删除这个表重新导入数据。\n```\n\n**3. 填充空副本进行修复**\n\n**注意**：以上两个方法可以恢复丢失的数据，而填充空副本方法，是插入若干个空rowset，它能恢复读写。但如果丢失的rowset是包含数据的，这种方法实质是丢数据的。单副本修复方法\n\n空副本修复方式如下：\n\n1️⃣ **自动修复**\n\n可以先通过 `SHOW FRONTEND CONFIG;` 命令查看当前版本是否支持该参数。\n\n```\nADMIN SET FRONTEND CONFIG (\"recover_with_empty_tablet\" = \"true\");\n```\n\n2️⃣ **手动修复**\n\n```\ncurl  http://10.xxx:8040/api/compaction/show?tablet_id=606202\ncurl -X POST \"http://10.xxx:8040/api/pad_rowset?tablet_id=606202&start_version=35&end_version=35\"\n```\n\n- 异常tablet_id\n- start_version 起始版本\n- end_version 终止版本\n\n该功能用于使用一个空的 rowset 填充损坏的副本。这个例子中修补的url中 start_version = 35,  end_version = 35。 \n\n这个例子只是缺一个rowset， 实际中可能缺多个（missing rowset，最大version + 1 ~ special version），例如查询中的max_version是9527，但是步骤3查询中数据的最后一行rowsets是[45-9520] 1 DATA ...，需要修补的就是9521～9527。 \n\n```\ncurl -X POST \"http://10.151.2.29:8040/api/pad_rowset?tablet_id=606202&start_version=9521&end_version=9527\"\n```\n\n修补完之后，再执行下show tablet xxx，该副本last fail version 是否等于 -1，如果它的version都补上了，但是last fail version = version + 1， 还需要手工执行把last fail version 改成 -1：\n\n```\nADMIN SET REPLICA VERSION PROPERTIES(\"tablet_id\" = \"10003\", \"backend_id\" = \"10001\", \"last_failed_version\" = \"-1\"); \n```\n\n低版本的doris可能不含这个SQL， 如果不支持这个SQL且是单副本的，通常需要重新建表进行导数。 \n\n如果没问题，使用：\n\n```\nselect count(*) from {table};\nselect * from {table};\n```\n\n查看是否可读，可读则说明数据副本问题已处理。\n\n**FAQ**\n\n如果有用户不小心把end_version调大了一轮，spec_version比max_version小，查询可能会出现如下报错\n\n```\n[CANCELLED]missed versions is empty, spec_version 307566, max_version 307567 tablet id 11423\n```\n\n可以通过指定副本为bad，或者往这个分区导入数据，如果还不行的话可以使用ADMIN-SET-PARTITION-VERSION来指定version。先通过下面这个命令来查看对应分区的**PartitionId**和**VisibleVersion**版本是多少\n\n```\nshow partitions from <table-name xxx> \n```\n\n然后使用**ADMIN-SET-PARTITION-VERSION**来指定version为当前的**max_version**。\n\n```\nADMIN SET TABLE tbl1 PARTITION VERSION PROPERTIES(\"partition_id\" = \"1769152\", \"visible_version\" = \"307567\"); \n```\n\n##### 6.2.4 数据验证\n\n查看副本健康\n\n```\nSHOW PROC '/cluster_health/tablet_health';\n```\n\n若数据可以查询，但依旧存在坏副本，可以备份数据，重新进行表数据初始化\n\n```\ncreate table test_bak as select * from test;\ndrop table test;\nalter table test_bak rename test;\n```\n\n验证副本健康\n\n```\nSHOW PROC '/cluster_health/tablet_health';\n```\n\n### 七、常见问题\n\n#### 7.1 什么是 priority_networks?\n\nDoris 进程监听 IP 的 CIDR 格式表示的网段。如果部署的机器只有一个网段，可以不用配置。如果有两个或多个网段，务必做配置。\n\n```\n这个参数主要用于帮助系统选择正确的网卡 IP 作为自己的监听 IP。比如需要监听的 IP 为 192.168.0.1，则可以设置 priority_networks=192.168.0.0/24，系统会自动扫描机器上的所有 IP，只有匹配上 192.168.0.0/24 这个网段的才会去作为服务监听地址。这个参数也可以配置多个 CIDR 网段，比如 priority_networks = 10.10.0.0/16; 192.168.0.0/24。\n```\n\n#### 7.2 通过 Web UI 无法修改 root 密码\n\n```\n当前内置的 Web 控制台，还不能执行 SET 类型的 SQL 语句，所以，在 Web 控制台，当前还不能通过执行 SET PASSWORD FOR 'root' = PASSWORD('your_password') `类似语句来修改 root 的密码，可以通过 MySQL Client 来修改 root 账户的密码。\n```\n\n","slug":"Doris详解","published":1,"date":"2025-05-07T09:16:35.415Z","updated":"2025-05-07T09:16:35.415Z","_id":"cmadnm5bq0000unb8cvbx2a8i","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"一、-Doris简介\"><a href=\"#一、-Doris简介\" class=\"headerlink\" title=\"一、 Doris简介\"></a>一、 Doris简介</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">Doris 中文官方文档：https:<span class=\"hljs-regexp\">//</span>doris.apache.org<span class=\"hljs-regexp\">/zh-CN/</span>docs<span class=\"hljs-regexp\">/dev/</span>summary/basic-summary<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1-1-Doris概述\"><a href=\"#1-1-Doris概述\" class=\"headerlink\" title=\"1.1 Doris概述\"></a>1.1 Doris概述</h4><figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tap\"> Apache Doris 是一个基于 MPP 架构的高性能、实时的分析型数据库，以极速易用的特点被人们所熟知，仅需亚秒级响应时间即可返回海量数据下的查询结果，不仅可以支持高并发的点查询场景，也能支持高吞吐的复杂分析场景。基于此，Apache Doris 能够较好的满足报表分析、即席查询、统一数仓构建、数据湖联邦查询加速等使用场景，用户可以在此之上构建用户行为分析、AB 实验平台、日志检索分析、用户画像分析、订单分析等应用<br><br>​ Apache Doris 最早是诞生于百度广告报表业务的 Palo 项目，2017 年正式对外开源，2018 年<span class=\"hljs-number\"> 7 </span>月由百度捐赠给 Apache 基金会进行孵化，之后在 Apache 导师的指导下由孵化器项目管理委员会成员进行孵化和运营。目前 Apache Doris 社区已经聚集了来自不同行业数百家企业的<span class=\"hljs-number\"> 400 </span>余位贡献者，并且每月活跃贡献者人数也超过<span class=\"hljs-number\"> 100 </span>位。<span class=\"hljs-number\"> 2022 </span>年<span class=\"hljs-number\"> 6 </span>月，Apache Doris 成功从 Apache 孵化器毕业，正式成为 Apache 顶级项目（Top-Level Project，TLP）<br><br>​ Apache Doris 如今在中国乃至全球范围内都拥有着广泛的用户群体，截止目前， Apache Doris 已经在全球超过<span class=\"hljs-number\"> 2000 </span>家企业的生产环境中得到应用，在中国市值或估值排行前<span class=\"hljs-number\"> 50 </span>的互联网公司中，有超过 80% 长期使用 Apache Doris，包括百度、美团、小米、京东、字节跳动、腾讯、网易、快手、微博、贝壳等。同时在一些传统行业如金融、能源、制造、电信等领域也有着丰富的应用<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1-2-Doris使用场景\"><a href=\"#1-2-Doris使用场景\" class=\"headerlink\" title=\"1.2 Doris使用场景\"></a>1.2 Doris使用场景</h4><p>Doris数据库是一个分布式列式存储和查询系统，主要用于实时分析和查询海量数据。它适用于以下场景：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">1.实时分析：Doris数据库可以快速查询和分析海量数据，支持实时查询和聚合操作，可以帮助企业快速做出决策并调整业务策略。<br><br>2.大数据仓库：Doris数据库可以作为企业的数据仓库，存储大规模的数据，并提供高效的查询和分析能力，帮助企业更好地理解和利用数据。<br><br>3.日志存储和分析：Doris数据库可以快速存储和分析实时生成的日志数据，支持实时查询和聚合操作，帮助企业及时发现和解决问题。<br><br>4.金融数据分析：Doris数据库可以存储和分析金融相关的大规模数据，如证券交易数据、客户信息等，帮助金融机构更好地理解市场趋势、客户需求等信息<br><br>Doris数据库适用于需要处理海量数据、需要实时查询和分析数据的场景。<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-Doris架构\"><a href=\"#1-3-Doris架构\" class=\"headerlink\" title=\"1.3 Doris架构\"></a>1.3 Doris架构</h4><p>Doris整体架构如下图所示，Doris 架构非常简单，只有两类进程</p>\n<p><img src=\"/images/Doris.png\"></p>\n<p><strong>Frontend（FE）</strong></p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">主要负责用户请求的接入、查询解析规划、元数据的管理、节点管理相关工作，并将请求转发给对应的Backend进行处理。Frontend还负责了Doris集群的负载均衡和故障转移等功能<br><br>主要有三个角色：<br>（<span class=\"hljs-number\">1</span>）Leader 和Follower：主要是用来达到元数据的高可用，保证单节点宕机的情况下，元数据能够实时地在线恢复，而不影响整个服务。<br>（<span class=\"hljs-number\">2</span>）Observer：用来扩展查询节点，同时起到元数据备份的作用。如果在发现集群压力非常大的情况下，需要去扩展整个查询的能力，那么可以加 observer 的节点。observer 不参与任何的写入，只参与读取。<br><br>用于fe非<span class=\"hljs-literal\">master</span>节点同步元数据。doris只有<span class=\"hljs-literal\">master</span>节点才能写fe元数据，其他fe节点写元数据的操作都会转发到<span class=\"hljs-literal\">master</span>节点。在<span class=\"hljs-literal\">master</span>完成元数据写入操作后，非<span class=\"hljs-literal\">master</span>节点replay元数据会有短暂的延迟，可以使用该语句同步元数据<br></code></pre></td></tr></table></figure>\n\n<p><strong>Backend（BE）</strong></p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">主要负责数据存储、查询计划的执行<br><br>数据的可靠性由 <span class=\"hljs-keyword\">BE </span>保证，<span class=\"hljs-keyword\">BE </span>会对整个数据存储多副本或者是三副本。副本数可根据需求动态调整<br></code></pre></td></tr></table></figure>\n\n<p> Frontend（FE）和 Backend（BE）这两类进程都是可以横向扩展的，单集群可以支持到数百台机器，数十 PB 的存储容量。并且这两类进程通过一致性协议来保证服务的高可用和数据的高可靠。这种高度集成的架构设计极大的降低了一款分布式系统的运维成本</p>\n<p><strong>MySQL Client</strong></p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\">Doris借助MySQL协议，用户使用任意MySQL的<span class=\"hljs-keyword\">ODBC</span>/JDBC以及MySQL的客户端，都可以直接访问Doris<br></code></pre></td></tr></table></figure>\n\n<p><strong>broker</strong></p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-keyword\">Broker </span>是 Doris 集群中一种可选进程，主要用于支持 Doris 读写远端存储上的文件和目录，如 HDFS、<span class=\"hljs-keyword\">BOS </span>和 AFS 等<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"二、Doris安装和部署\"><a href=\"#二、Doris安装和部署\" class=\"headerlink\" title=\"二、Doris安装和部署\"></a>二、Doris安装和部署</h3><h4 id=\"2-1-Doris安装环境要求\"><a href=\"#2-1-Doris安装环境要求\" class=\"headerlink\" title=\"2.1 Doris安装环境要求\"></a>2.1 Doris安装环境要求</h4><h5 id=\"2-1-1-Linux-操作系统版本需求\"><a href=\"#2-1-1-Linux-操作系统版本需求\" class=\"headerlink\" title=\"2.1.1 Linux 操作系统版本需求\"></a>2.1.1 Linux 操作系统版本需求</h5><table>\n<thead>\n<tr>\n<th align=\"center\">Linux 系统</th>\n<th align=\"center\">版本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">CentOS</td>\n<td align=\"center\">7.1 及以上</td>\n</tr>\n</tbody></table>\n<h5 id=\"2-1-2-软件需求\"><a href=\"#2-1-2-软件需求\" class=\"headerlink\" title=\"2.1.2 软件需求\"></a>2.1.2 软件需求</h5><table>\n<thead>\n<tr>\n<th align=\"center\">软件</th>\n<th align=\"center\">版本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Java</td>\n<td align=\"center\">1.8 及以上</td>\n</tr>\n<tr>\n<td align=\"center\">GCC</td>\n<td align=\"center\">4.8.2 及以上</td>\n</tr>\n</tbody></table>\n<h5 id=\"2-1-3-Linux文件系统\"><a href=\"#2-1-3-Linux文件系统\" class=\"headerlink\" title=\"2.1.3 Linux文件系统\"></a>2.1.3 Linux文件系统</h5><p>ext4和xfs文件系统均支持</p>\n<h5 id=\"2-1-4-机器配置-生产环境\"><a href=\"#2-1-4-机器配置-生产环境\" class=\"headerlink\" title=\"2.1.4 机器配置( 生产环境 )\"></a>2.1.4 机器配置( 生产环境 )</h5><table>\n<thead>\n<tr>\n<th align=\"center\">模块</th>\n<th align=\"center\">CPU</th>\n<th align=\"center\">内存</th>\n<th align=\"center\">磁盘</th>\n<th align=\"center\">网络</th>\n<th align=\"center\">实例数量（最低要求）</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Frontend</td>\n<td align=\"center\">16核+</td>\n<td align=\"center\">64GB+</td>\n<td align=\"center\">SSD 或 RAID 卡，100GB+ *</td>\n<td align=\"center\">万兆网卡</td>\n<td align=\"center\">1-3 *</td>\n</tr>\n<tr>\n<td align=\"center\">Backend</td>\n<td align=\"center\">16核+</td>\n<td align=\"center\">64GB+</td>\n<td align=\"center\">SSD 或 SATA，100G+ *</td>\n<td align=\"center\">万兆网卡</td>\n<td align=\"center\">3 *</td>\n</tr>\n</tbody></table>\n<h5 id=\"2-1-5-端口预留\"><a href=\"#2-1-5-端口预留\" class=\"headerlink\" title=\"2.1.5 端口预留\"></a>2.1.5 端口预留</h5><table>\n<thead>\n<tr>\n<th align=\"center\">实例名称</th>\n<th align=\"center\">端口名称</th>\n<th align=\"center\">默认端口</th>\n<th align=\"center\">通讯方向</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">BE</td>\n<td align=\"center\">be_prot</td>\n<td align=\"center\">9060</td>\n<td align=\"center\">FE–&gt;BE</td>\n<td align=\"center\">BE上thrift server的端口用于接收来自FE 的请求</td>\n</tr>\n<tr>\n<td align=\"center\">BE</td>\n<td align=\"center\">webserver_port</td>\n<td align=\"center\">8040</td>\n<td align=\"center\">BE&lt;–&gt;FE</td>\n<td align=\"center\">BE上的http server端口</td>\n</tr>\n<tr>\n<td align=\"center\">BE</td>\n<td align=\"center\">heartbeat_service_port</td>\n<td align=\"center\">9050</td>\n<td align=\"center\">FE–&gt;BE</td>\n<td align=\"center\">BE上心跳服务端口用于接收来自FE的心跳</td>\n</tr>\n<tr>\n<td align=\"center\">BE</td>\n<td align=\"center\">brpc_prot*</td>\n<td align=\"center\">8060</td>\n<td align=\"center\">FE&lt;–&gt;BEBE&lt;–&gt;BE</td>\n<td align=\"center\">BE上的brpc端口用于BE之间通信</td>\n</tr>\n<tr>\n<td align=\"center\">FE</td>\n<td align=\"center\">http_port</td>\n<td align=\"center\">8030</td>\n<td align=\"center\">FE&lt;–&gt;FE用户&lt;–&gt; FE</td>\n<td align=\"center\">FE上的http_server端口</td>\n</tr>\n<tr>\n<td align=\"center\">FE</td>\n<td align=\"center\">rpc_port</td>\n<td align=\"center\">9020</td>\n<td align=\"center\">BE–&gt;FEFE&lt;–&gt;FE</td>\n<td align=\"center\">FE上thirt server端口号</td>\n</tr>\n<tr>\n<td align=\"center\">FE</td>\n<td align=\"center\">query_port</td>\n<td align=\"center\">9030</td>\n<td align=\"center\">用户&lt;–&gt; FE</td>\n<td align=\"center\">FE上的mysql server端口</td>\n</tr>\n<tr>\n<td align=\"center\">FE</td>\n<td align=\"center\">edit_log_port</td>\n<td align=\"center\">9010</td>\n<td align=\"center\">FE&lt;–&gt;FE</td>\n<td align=\"center\">FE上bdbje之间通信用的端口</td>\n</tr>\n<tr>\n<td align=\"center\">Broker</td>\n<td align=\"center\">broker_ipc_port</td>\n<td align=\"center\">8000</td>\n<td align=\"center\">FE–&gt;BROKERBE–&gt;BROKER</td>\n<td align=\"center\">Broker上的thrift server用于接收请求</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">端口部署可以更改，表中为官方版本各组件的默认端口<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-1-6-部署常见的注意事项\"><a href=\"#2-1-6-部署常见的注意事项\" class=\"headerlink\" title=\"2.1.6 部署常见的注意事项\"></a>2.1.6 部署常见的注意事项</h5><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">（<span class=\"hljs-number\">1</span>）FE的磁盘空间主要用于存储元数据，包括日志和image。通常从几百MB到几个GB不等。<br><br>（<span class=\"hljs-number\">2</span>）<span class=\"hljs-keyword\">BE的磁盘空间主要用于存放用户数据，总磁盘空间按用户总数据量* </span><span class=\"hljs-number\">3</span>（<span class=\"hljs-number\">3</span>副本）计算，然后再预留额外<span class=\"hljs-number\">40</span>%的空间用作后台compaction以及一些中间数据的存放。<br><br>（<span class=\"hljs-number\">3</span>）一台机器上可以部署多个<span class=\"hljs-keyword\">BE实例，但是只能部署一个 </span>FE。如果需要 <span class=\"hljs-number\">3</span> 副本数据，那么至少需要 <span class=\"hljs-number\">3</span> 台机器各部署一个<span class=\"hljs-keyword\">BE实例（而不是1台机器部署3个BE实例）。多个FE所在服务器的时钟必须保持一致（允许最多5秒的时钟偏差）</span><br><span class=\"hljs-keyword\"></span><br>（<span class=\"hljs-number\">4</span>）测试环境也可以仅适用一个<span class=\"hljs-keyword\">BE进行测试。实际生产环境，BE实例数量直接决定了整体查询延迟。</span><br><span class=\"hljs-keyword\"></span><br>（<span class=\"hljs-number\">5</span>）所有部署节点关闭<span class=\"hljs-keyword\">Swap。</span><br><span class=\"hljs-keyword\"></span><br>（<span class=\"hljs-number\">6</span>）FE节点数据至少为<span class=\"hljs-number\">1</span>（<span class=\"hljs-number\">1</span>个Follower）。当部署<span class=\"hljs-number\">1</span>个Follower和<span class=\"hljs-number\">1</span>个Observer时，可以实现读高可用。当部署<span class=\"hljs-number\">3</span>个Follower时，可以实现读写高可用（HA）。<br><br>（<span class=\"hljs-number\">7</span>）Follower的数量必须为奇数，Observer 数量随意。<br><br>（<span class=\"hljs-number\">8</span>）根据以往经验，当集群可用性要求很高时（比如提供在线业务），可以部署<span class=\"hljs-number\">3</span>个 Follower和<span class=\"hljs-number\">1</span><span class=\"hljs-number\">-3</span>个Observer。如果是离线业务，建议部署<span class=\"hljs-number\">1</span>个Follower和<span class=\"hljs-number\">1</span><span class=\"hljs-number\">-3</span>个Observer。<br><br>（<span class=\"hljs-number\">9</span>）<span class=\"hljs-keyword\">Broker是用于访问外部数据源（如HDFS）的进程。通常，在每台机器上部署一个 </span><span class=\"hljs-keyword\">broker实例即可。</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-Doris集群部署\"><a href=\"#2-2-Doris集群部署\" class=\"headerlink\" title=\"2.2 Doris集群部署\"></a>2.2 Doris集群部署</h4><h5 id=\"2-2-1-机器规划\"><a href=\"#2-2-1-机器规划\" class=\"headerlink\" title=\"2.2.1 机器规划\"></a>2.2.1 机器规划</h5><table>\n<thead>\n<tr>\n<th>实例名称</th>\n<th>服务IP</th>\n<th>机器资源</th>\n<th>部署路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>FE(LEADER)</td>\n<td>172.16.20.239</td>\n<td>8c8g50g</td>\n<td>&#x2F;data</td>\n</tr>\n<tr>\n<td>BE</td>\n<td>172.16.20.105</td>\n<td>8c16g100g</td>\n<td>&#x2F;data</td>\n</tr>\n<tr>\n<td>BE</td>\n<td>172.16.20.73</td>\n<td>8c16g100g</td>\n<td>&#x2F;data</td>\n</tr>\n<tr>\n<td>BE</td>\n<td>172.16.20.144</td>\n<td>8c16g100g</td>\n<td>&#x2F;data</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">生产环境建议 FE 和 <span class=\"hljs-keyword\">BE </span>分开<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-2-安装包准备\"><a href=\"#2-2-2-安装包准备\" class=\"headerlink\" title=\"2.2.2 安装包准备\"></a>2.2.2 安装包准备</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">官方下载地址：https://doris.apache.org/download<br><br>注意：查看服务器是否支持 CPU Model ：avx2<br><span class=\"hljs-built_in\">cat</span> /proc/cpuinfo | grep avx2<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-%E4%B8%8B%E8%BD%BD.png\"></p>\n<figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tcl\"> 如果CPU不支持avx2指令集，请选择无avx2版本。您可以通过cat /<span class=\"hljs-keyword\">proc</span>/cpuinfo检查是否支持。avx2指令将提高诸如布隆过滤器之类的数据结构的计算效率<br>​ 支持avx2 可以下载X86(<span class=\"hljs-title\"> avx2</span> ) , 不支持avx2 可以下载X86(<span class=\"hljs-title\"> no</span> avx2 )<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-3-下载安装包\"><a href=\"#2-2-3-下载安装包\" class=\"headerlink\" title=\"2.2.3 下载安装包\"></a>2.2.3 下载安装包</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-comment\">#部署安装2.1.4版本</span><br><span class=\"hljs-attribute\">wget</span> https://apache-doris-releases.oss-accelerate.aliyuncs.com/apache-doris-<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">4</span>-bin-x64.tar.gz<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-4-安装Java和gcc环境\"><a href=\"#2-2-4-安装Java和gcc环境\" class=\"headerlink\" title=\"2.2.4 安装Java和gcc环境\"></a>2.2.4 安装Java和gcc环境</h5><p>因java和gcc都为常用环境，如没有需自行安装</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-comment\"># java版本信息查看</span><br>[wangting@hdt-dmcp-ops01 ~]$ <span class=\"hljs-keyword\">java </span>-version<br><span class=\"hljs-keyword\">java </span>version <span class=\"hljs-string\">&quot;1.8.0_212&quot;</span><br><span class=\"hljs-keyword\">Java(TM) </span>SE Runtime Environment (<span class=\"hljs-keyword\">build </span><span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">8</span>.<span class=\"hljs-number\">0</span>_212-<span class=\"hljs-keyword\">b10)</span><br><span class=\"hljs-keyword\"></span><span class=\"hljs-keyword\">Java </span>HotSpot(TM) <span class=\"hljs-number\">64</span>-<span class=\"hljs-keyword\">Bit </span>Server VM (<span class=\"hljs-keyword\">build </span><span class=\"hljs-number\">25</span>.<span class=\"hljs-number\">212</span>-<span class=\"hljs-keyword\">b10, </span>mixed mode)<br><span class=\"hljs-comment\"># gcc版本信息查看</span><br>[wangting@hdt-dmcp-ops01 ~]$ gcc --version<br>gcc (GCC) <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">8</span>.<span class=\"hljs-number\">5</span> <span class=\"hljs-number\">20150623</span> (Red Hat <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">8</span>.<span class=\"hljs-number\">5</span><span class=\"hljs-number\">-44</span>)<br>Copyright (C) <span class=\"hljs-number\">2015</span> Free Software Foundation, Inc.<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-5-设置系统文件句柄数\"><a href=\"#2-2-5-设置系统文件句柄数\" class=\"headerlink\" title=\"2.2.5 设置系统文件句柄数\"></a>2.2.5 设置系统文件句柄数</h5><p>系统文件句柄</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gams\">[wangting@hdt-dmcp-ops01 doris]<span class=\"hljs-symbol\">$</span> sudo vim /etc/security/limits.conf<br># End of <span class=\"hljs-keyword\">file</span><br><br><span class=\"hljs-comment\">* soft nofile 65536</span><br><span class=\"hljs-comment\">* hard nofile 131072</span><br><span class=\"hljs-comment\">* soft nproc 2048</span><br><span class=\"hljs-comment\">* hard nproc 65536</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livecodeserver\">在操作系统中，每个进程都有一个打开文件句柄的限制，它限制了进程能够同时打开的文件数。这个限制对于一些需要同时处理大量文件的应用程序来说可能会成为瓶颈。因此，可以通过修改系统最大打开文件句柄数来提高应用程序的性能。<br><br>具体来说，增加最大打开文件句柄数可以：<br><br>  提高服务器的并发性能：如果你的服务器需要同时处理大量的网络连接和文件 I/O 操作，那么增加最大打开文件句柄数可以提高服务器的并发性能，从而降低响应时间和延迟。<br>  提高数据库性能：一些数据库软件如 MySQL，需要在处理大量的数据时打开大量的文件句柄，增加最大打开文件句柄数可以提高数据库的性能。<br>  解决程序打开文件失败的问题：如果你的程序在运行时出现 “too many <span class=\"hljs-built_in\">open</span> <span class=\"hljs-built_in\">files</span>” 的错误，那么增加最大打开文件句柄数可以解决这个问题。<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-6-关闭-swap-分区\"><a href=\"#2-2-6-关闭-swap-分区\" class=\"headerlink\" title=\"2.2.6 关闭 swap 分区\"></a>2.2.6 关闭 swap 分区</h5><p>在部署 Doris 时，建议关闭 swap 分区。swap 分区是内核发现内存紧张时，会按照自己的策略将部分内存数据移动到配置的 swap 分区，由于内核策略不能充分了解应用的行为，会对数据库性能造成较大影响。所以建议关闭。</p>\n<p>通过以下命令可以临时或者永久关闭。</p>\n<p><strong>临时关闭</strong>，下次机器启动时，swap 还会被打开。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">swapoff -<span class=\"hljs-selector-tag\">a</span> <br></code></pre></td></tr></table></figure>\n\n<p><strong>永久关闭</strong>，使用 Linux root 账户，注释掉 &#x2F;etc&#x2F;fstab 中的 swap 分区，然后重启即可彻底关闭 swap 分区。</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\"><span class=\"hljs-comment\"># /etc/fstab</span><br><span class=\"hljs-comment\"># &lt;file system&gt;        &lt;dir&gt;         &lt;type&gt;    &lt;options&gt;             &lt;dump&gt; &lt;pass&gt;</span><br>tmpfs                  <span class=\"hljs-symbol\">/tmp</span>          tmpfs     nodev,nosuid          <span class=\"hljs-number\">0</span>      <span class=\"hljs-number\">0</span><br><span class=\"hljs-symbol\">/dev/sda1</span>              <span class=\"hljs-symbol\">/</span>             ext4      defaults,noatime      <span class=\"hljs-number\">0</span>      <span class=\"hljs-number\">1</span><br><span class=\"hljs-comment\"># /dev/sda2              none          swap      defaults              0      0</span><br><span class=\"hljs-symbol\">/dev/sda3</span>              <span class=\"hljs-symbol\">/home</span>         ext4      defaults,noatime      <span class=\"hljs-number\">0</span>      <span class=\"hljs-number\">2</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-7-检测和关闭系统防火墙\"><a href=\"#2-2-7-检测和关闭系统防火墙\" class=\"headerlink\" title=\"2.2.7 检测和关闭系统防火墙\"></a>2.2.7 检测和关闭系统防火墙</h5><p>如果发现端口不同，可以试着关闭防火墙，确认是否是本机防火墙造成。如果是防火墙造成，可以根据配置的 Doris 各组件端口打开相应的端口通信。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">sudo systemctl stop firewalld.service<br>sudo systemctl disable firewalld.service<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-8-配置-NTP-服务\"><a href=\"#2-2-8-配置-NTP-服务\" class=\"headerlink\" title=\"2.2.8 配置 NTP 服务\"></a>2.2.8 配置 NTP 服务</h5><p>Doris 的元数据要求时间精度要小于 5000ms，所以所有集群所有机器要进行时钟同步，避免因为时钟问题引发的元数据不一致导致服务出现异常。</p>\n<p>通常情况下，可以通过配置 NTP 服务保证各节点时钟同步。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> systemctl start ntpd.service<br><span class=\"hljs-built_in\">sudo</span> systemctl <span class=\"hljs-built_in\">enable</span> ntpd.service<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-9-修改虚拟内存区域数量\"><a href=\"#2-2-9-修改虚拟内存区域数量\" class=\"headerlink\" title=\"2.2.9 修改虚拟内存区域数量\"></a>2.2.9 修改虚拟内存区域数量</h5><p>修改虚拟内存区域至少 2000000</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">sysctl -w vm.<span class=\"hljs-attribute\">max_map_count</span>=2000000<br></code></pre></td></tr></table></figure>\n\n<p>永久修改</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\"><span class=\"hljs-keyword\">vim</span> /etc/sysctl.<span class=\"hljs-keyword\">conf</span><br><span class=\"hljs-keyword\">vm</span>.max_map_count=<span class=\"hljs-number\">2000000</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-10关闭透明大页\"><a href=\"#2-2-10关闭透明大页\" class=\"headerlink\" title=\"2.2.10关闭透明大页\"></a>2.2.10关闭透明大页</h5><p>在部署 Doris 时，建议关闭透明大页。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">echo never &gt; <span class=\"hljs-regexp\">/sys/</span>kernel<span class=\"hljs-regexp\">/mm/</span>transparent_hugepage/enabled<br>echo never &gt; <span class=\"hljs-regexp\">/sys/</span>kernel<span class=\"hljs-regexp\">/mm/</span>transparent_hugepage/defrag<br><br><span class=\"hljs-comment\">#永久关闭</span><br>vim <span class=\"hljs-regexp\">/etc/</span>rc.local<br>echo never &gt; <span class=\"hljs-regexp\">/sys/</span>kernel<span class=\"hljs-regexp\">/mm/</span>transparent_hugepage/enabled<br>echo never &gt; <span class=\"hljs-regexp\">/sys/</span>kernel<span class=\"hljs-regexp\">/mm/</span>transparent_hugepage/defrag<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-11-解压安装\"><a href=\"#2-2-11-解压安装\" class=\"headerlink\" title=\"2.2.11 解压安装\"></a>2.2.11 解压安装</h5><figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs haskell\"><span class=\"hljs-title\">mkdir</span> -p /<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span></span><br><span class=\"hljs-title\">tar</span> -xf apache-doris-<span class=\"hljs-number\">2.1</span>.<span class=\"hljs-number\">4</span>-bin-x64.tar.gz -<span class=\"hljs-type\">C</span> /<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span></span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-12-配置FE\"><a href=\"#2-2-12-配置FE\" class=\"headerlink\" title=\"2.2.12 配置FE\"></a>2.2.12 配置FE</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cd</span> /data/apache-doris-2.1.4-bin-x64/fe<br><br><span class=\"hljs-built_in\">ln</span> -s /data/apache-doris-2.1.4-bin-x64/fe/doris-meta /data/doris-fe-meta<br><br>vim conf/fe.conf<br><span class=\"hljs-comment\">#修改 FE 元数据目录</span><br>meta_dir = <span class=\"hljs-variable\">$&#123;DORIS_HOME&#125;</span>/doris-meta<br><br><span class=\"hljs-comment\">#绑定集群 IP</span><br>priority_networks = 172.16.20.0/24<br><br><span class=\"hljs-comment\">#调整 FE 内存</span><br>JAVA_OPTS=<span class=\"hljs-string\">&quot;-Xmx16384m -XX:+UseMembar -XX:SurvivorRatio=8 -XX:MaxTenuringThreshold=7 -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSClassUnloadingEnabled -XX:-CMSParallelRemarkEnabled -XX:CMSInitiatingOccupancyFraction=80 -XX:SoftRefLRUPolicyMSPerMB=0 -Xloggc:<span class=\"hljs-variable\">$DORIS_HOME</span>/log/fe.gc.log.<span class=\"hljs-variable\">$DATE</span>&quot;</span><br><br><span class=\"hljs-comment\">#修改 Doris 大小写敏感参数 lower_case_table_names(可选)</span><br>在 Doris 中默认表名大小写敏感。如果有对大小写不敏感的需求，需要在集群初始化时进行设置。表名大小写敏感在集群初始化完成后就无法再进行修改<br>https://doris.apache.org/zh-CN/docs/query/query-variables/variables<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-13-启动-FE-进程\"><a href=\"#2-2-13-启动-FE-进程\" class=\"headerlink\" title=\"2.2.13 启动 FE 进程\"></a>2.2.13 启动 FE 进程</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cd</span> /data/apache-doris-2.1.4-bin-x64/fe<br><br>bin/start_fe.sh --daemon<br></code></pre></td></tr></table></figure>\n\n<p>FE 进程启动进入后台执行。日志默认存放在 <code>log/</code> 目录下。如启动失败，可以通过查看 <code>log/fe.log</code> 或者 log&#x2F;fe.out 查看错误信息</p>\n<h5 id=\"2-2-14-检查-FE-启动状态\"><a href=\"#2-2-14-检查-FE-启动状态\" class=\"headerlink\" title=\"2.2.14 检查 FE 启动状态\"></a>2.2.14 检查 FE 启动状态</h5><p>#检查是否启动成功</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">curl http:<span class=\"hljs-regexp\">//</span><span class=\"hljs-number\">127.0</span>.<span class=\"hljs-number\">0.1</span>:<span class=\"hljs-number\">8030</span><span class=\"hljs-regexp\">/api/</span>bootstrap<br><br>&#123;<span class=\"hljs-string\">&quot;msg&quot;</span>:<span class=\"hljs-string\">&quot;success&quot;</span>,<span class=\"hljs-string\">&quot;code&quot;</span>:<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">&quot;data&quot;</span>:&#123;<span class=\"hljs-string\">&quot;replayedJournalId&quot;</span>:<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">&quot;queryPort&quot;</span>:<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">&quot;rpcPort&quot;</span>:<span class=\"hljs-number\">0</span>,eng<span class=\"hljs-string\">&quot;version&quot;</span>:<span class=\"hljs-string\">&quot;&quot;</span>&#125;,<span class=\"hljs-string\">&quot;count&quot;</span>:<span class=\"hljs-number\">0</span>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>通过 MySQL Client 可以链接 Doris 集群。初始化用户为 <code>root</code>，密码为空。</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">mysql -uroot -P<span class=\"hljs-tag\">&lt;fe_query_port&gt;</span> -h<span class=\"hljs-tag\">&lt;fe_ip_address&gt;</span><br><br>show frontends <br><br>Alive 为 <span class=\"hljs-literal\">true</span> 表示节点存活<br>Join 为 <span class=\"hljs-literal\">true</span> 表示节点加入到集群中，但不代表当前还在集群内（可能已失联）<br>IsMaster 为 <span class=\"hljs-literal\">true</span> 表示当前节点为 <span class=\"hljs-keyword\">Master</span> <span class=\"hljs-title\">节点</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-15-FE-Web-登录页面\"><a href=\"#2-2-15-FE-Web-登录页面\" class=\"headerlink\" title=\"2.2.15 FE Web 登录页面\"></a>2.2.15 FE Web 登录页面</h5><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">访问地址: http://172.16.20.239:8030/login</span><br><span class=\"hljs-section\">初始用户: root</span><br><span class=\"hljs-section\">密码:无</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-web.png\"></p>\n<h5 id=\"2-2-16-配置-BE\"><a href=\"#2-2-16-配置-BE\" class=\"headerlink\" title=\"2.2.16 配置 BE\"></a>2.2.16 配置 BE</h5><figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs haskell\"><span class=\"hljs-meta\">#BE三节点都配置</span><br><span class=\"hljs-meta\"># 创建BE数据存放目录</span><br><span class=\"hljs-title\">mkdir</span> -p /<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>/doris-storage1</span><br> mkdir -p /<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>/doris-storage2.<span class=\"hljs-type\">SSD</span></span><br><br><span class=\"hljs-meta\"># 修改BE配置文件</span><br><span class=\"hljs-meta\">## 在 storage_root_path 中使用 medium 指定磁盘类型</span><br><span class=\"hljs-meta\">## /home/disk1/doris,medium:HDD： 表示该目录存储冷数据;</span><br><span class=\"hljs-meta\">## /home/disk2/doris,medium:SSD： 表示该目录存储热数据;</span><br><span class=\"hljs-title\">vim</span> /<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>/apache-doris-2.1.4-bin-x64/be/conf/be.conf</span><br><span class=\"hljs-title\">storage_root_path</span> = /<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>/doris-storage1;/<span class=\"hljs-keyword\">data</span>/doris-storage2.<span class=\"hljs-type\">SSD</span>,10</span><br><span class=\"hljs-title\">priority_networks</span> = <span class=\"hljs-number\">172.16</span>.<span class=\"hljs-number\">20.0</span>/<span class=\"hljs-number\">24</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs scss\">Doris 支持冷热数据分级存储，将冷数据存储在 HDD 或对象存储中，热数据存储在 SSD 中。<br><br>可以通过路径区别节点内的冷热数据存储目录，HDD（冷数据目录）或 SSD（热数据目录）。如果不需要 BE 节点内的冷热机制，那么只需要配置路径即可，无需指定 medium 类型；也不需要修改 FE 的默认存储介质配置。<br><br>在使用冷热数据分离功能时，需要在 storage_root_path 中使用 medium 选项。<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-17-添加-BE\"><a href=\"#2-2-17-添加-BE\" class=\"headerlink\" title=\"2.2.17 添加 BE\"></a>2.2.17 添加 BE</h5><p>BE节点需要先在FE中添加，才可加入集群。可以使用mysql-client连接到FE</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs axapta\">注意：<br><br>这里需要有MySQL客户端连接MySQL的<span class=\"hljs-keyword\">client</span>，安装忽略，yum安装mysqld或者mariadb均可<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>使用 Mysql 客户端连接到 FE</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">FE</span> 默认没有密码<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">[wangting@hdt-dmcp-ops01 ~]$ mysql -h hdt-dmcp-ops01 -uroot -P <span class=\"hljs-number\">9030</span><br><span class=\"hljs-comment\"># 设置密码</span><br>MySQL [(none)]&gt; SET PASSWORD FOR <span class=\"hljs-string\">&#x27;root&#x27;</span> = PASSWORD(<span class=\"hljs-string\">&#x27;Doris@123&#x27;</span>);<br>Query OK, <span class=\"hljs-number\">0</span> rows affected (<span class=\"hljs-number\">0.00</span> sec)<br>MySQL [(none)]&gt; <span class=\"hljs-keyword\">exit</span>;<br>Bye<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">注意：<br>这里密码改过以后，那FE的前端访问页面的ROOT密码，就是改后的，注意下次登录时需要输入对应的新密码<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>添加BE</li>\n</ul>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\">## 链接任一存活的 FE 节点<br>mysql -uroot -P&lt;fe_query_port&gt; -h&lt;fe_ip_address&gt;<br><br>## 注册 BE 节点<br>## be_heartbeat_service_port 可以从 be.conf 中查看，默认为 <span class=\"hljs-number\">9050</span><br>## 在 MySQL Client 中执行 ALTER SYSTEM 语句<br>ALTER SYSTEM ADD BACKEND <span class=\"hljs-string\">&quot;&lt;be_ip_address&gt;:&lt;be_heartbeat_service_port&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-18-启动-BE-进程\"><a href=\"#2-2-18-启动-BE-进程\" class=\"headerlink\" title=\"2.2.18 启动 BE 进程\"></a>2.2.18 <strong>启动 BE 进程</strong></h5><p>通过以下命令可以启动 BE 进程</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">bin/start_be<span class=\"hljs-selector-class\">.sh</span> <span class=\"hljs-attr\">--daemon</span><br></code></pre></td></tr></table></figure>\n\n<p>BE 进程启动进入后台执行。日志默认存放在 <code>log/</code> 目录下。如启动失败，可以通过查看 <code>log/be.log</code> 或者 <code>log/be.out</code> 查看错误信息</p>\n<h5 id=\"2-2-19-查看-BE-启动状态\"><a href=\"#2-2-19-查看-BE-启动状态\" class=\"headerlink\" title=\"2.2.19 查看 BE 启动状态\"></a>2.2.19 <strong>查看 BE 启动状态</strong></h5><p>在链接到 Doris 集群后，通过 show backends 命令查看 BE 的状态。</p>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\">## 链接 Doris 集群<br>mysql -uroot -P&lt;fe_query_port&gt; -h&lt;fe_ip_address&gt;<br><br>## 查看 BE 状态，在 MySQL Client 中执行 show 命令<br>show backends;<br></code></pre></td></tr></table></figure>\n\n<p>通常情况下需要注意以下几项状态：</p>\n<ul>\n<li>Alive 为 true 表示节点存活</li>\n<li>TabletNum 表示该节点上的分片数量，新加入的节点会进行数据均衡，TabletNum 逐渐趋于平均</li>\n</ul>\n<h5 id=\"2-2-20-验证集群正确性\"><a href=\"#2-2-20-验证集群正确性\" class=\"headerlink\" title=\"2.2.20 验证集群正确性\"></a>2.2.20 验证集群正确性</h5><p><strong>登录数据库</strong></p>\n<p>通过 MySQL Client 登录 Doris 集群。</p>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gherkin\"><span class=\"hljs-comment\">## 链接 Doris 集群</span><br>mysql -uroot -P<span class=\"hljs-variable\">&lt;fe_query_port&gt;</span> -h<span class=\"hljs-variable\">&lt;fe_ip_address&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>检查 Doris 安装版本</strong></p>\n<p>通过 show frontends 与 show backends 命令可以查看数据库版本情况。</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-comment\">## 查看 FE 各实例的版本，在 MySQL Client 中执行 show 命令</span><br><span class=\"hljs-keyword\">show </span>frontends \\G<br><br><span class=\"hljs-comment\">## 查看 BE 各实例的版本，在 MySQL Client 中执行 show 命令</span><br><span class=\"hljs-keyword\">show </span><span class=\"hljs-keyword\">backends </span>\\G<br></code></pre></td></tr></table></figure>\n\n<p><strong>修改 Doris 集群密码</strong></p>\n<p>在创建 Doris 集群后，系统会自动创建 <code>root</code> 用户，并默认密码为空。建议在创建集群后为 <code>root</code> 用户重置一个新密码。</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs asciidoc\">## 确认当前用户为 root，在 MySQL Client 中查看当前用户<br><span class=\"hljs-section\">select user();</span><br><span class=\"hljs-section\">+------------------------+</span><br><span class=\"hljs-section\">| user()                 |</span><br><span class=\"hljs-section\">+------------------------+</span><br><span class=\"hljs-section\">| &#x27;root&#x27;@&#x27;192.168.88.30&#x27; |</span><br><span class=\"hljs-section\">+------------------------+</span><br><br>## 修改 root 用户密码，在 MySQL Client 中执行 set password 命令<br>SET PASSWORD = PASSWORD(<span class=\"hljs-emphasis\">&#x27;doris_new_passwd&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<p><strong>创建测试表并插入数据</strong></p>\n<p>在新创建的集群中，可以创建表并插入数据以验证集群正确性。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">## 创建测试数据库，在 MySQL Client 中执行 <span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">database</span> 语句<br><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">database</span> testdb;<br><br>## 创建测试表，在 MySQL Client 中执行 <span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> 语句<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> testdb.table_hash<br>(<br>    k1 TINYINT,<br>    k2 <span class=\"hljs-type\">DECIMAL</span>(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">2</span>) <span class=\"hljs-keyword\">DEFAULT</span> &quot;10.5&quot;,<br>    k3 <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">10</span>) <span class=\"hljs-keyword\">COMMENT</span> &quot;string column&quot;,<br>    k4 <span class=\"hljs-type\">INT</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> <span class=\"hljs-keyword\">DEFAULT</span> &quot;1&quot; <span class=\"hljs-keyword\">COMMENT</span> &quot;int column&quot;<br>)<br><span class=\"hljs-keyword\">COMMENT</span> &quot;my first table&quot;<br>DISTRIBUTED <span class=\"hljs-keyword\">BY</span> HASH(k1) BUCKETS <span class=\"hljs-number\">32</span>;<br></code></pre></td></tr></table></figure>\n\n<p>Doris 兼容 MySQL 协议，可以使用 insert 语句插入数据。</p>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gherkin\"><span class=\"hljs-comment\">## 插入部分测试数据，在 MySQL Client 中执行 insert into 语句</span><br>INSERT INTO testdb.table_hash VALUES<br>(1, 10.1, &#x27;AAA&#x27;, 10),<br>(2, 10.2, &#x27;BBB&#x27;, 20),<br>(3, 10.3, &#x27;CCC&#x27;, 30),<br>(4, 10.4, &#x27;DDD&#x27;, 40),<br>(5, 10.5, &#x27;EEE&#x27;, 50);<br><br><span class=\"hljs-comment\">## 验证插入数据正确性，在 MySQL Client 中执行 select 语句</span><br>SELECT <span class=\"hljs-symbol\">*</span> from testdb.table_hash;<br>+------+-------+------+------+<br>|<span class=\"hljs-string\"> k1   </span>|<span class=\"hljs-string\"> k2    </span>|<span class=\"hljs-string\"> k3   </span>|<span class=\"hljs-string\"> k4   </span>|<br>+------+-------+------+------+<br>|<span class=\"hljs-string\">    3 </span>|<span class=\"hljs-string\"> 10.30 </span>|<span class=\"hljs-string\"> CCC  </span>|<span class=\"hljs-string\">   30 </span>|<br>|<span class=\"hljs-string\">    4 </span>|<span class=\"hljs-string\"> 10.40 </span>|<span class=\"hljs-string\"> DDD  </span>|<span class=\"hljs-string\">   40 </span>|<br>|<span class=\"hljs-string\">    5 </span>|<span class=\"hljs-string\"> 10.50 </span>|<span class=\"hljs-string\"> EEE  </span>|<span class=\"hljs-string\">   50 </span>|<br>|<span class=\"hljs-string\">    1 </span>|<span class=\"hljs-string\"> 10.10 </span>|<span class=\"hljs-string\"> AAA  </span>|<span class=\"hljs-string\">   10 </span>|<br>|<span class=\"hljs-string\">    2 </span>|<span class=\"hljs-string\"> 10.20 </span>|<span class=\"hljs-string\"> BBB  </span>|<span class=\"hljs-string\">   20 </span>|<br>+------+-------+------+------+<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"三、Doris扩容和缩容\"><a href=\"#三、Doris扩容和缩容\" class=\"headerlink\" title=\"三、Doris扩容和缩容\"></a>三、Doris扩容和缩容</h3><h4 id=\"3-1-FE-扩容和缩容\"><a href=\"#3-1-FE-扩容和缩容\" class=\"headerlink\" title=\"3.1 FE 扩容和缩容\"></a>3.1 FE 扩容和缩容</h4><p>可以通过将FE扩容至3个以上节点(必须是奇数)来实现FE的高可用</p>\n<h5 id=\"3-1-1-FE扩容\"><a href=\"#3-1-1-FE扩容\" class=\"headerlink\" title=\"3.1.1 FE扩容\"></a>3.1.1 FE扩容</h5><ul>\n<li>查看 FE 状态</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">MySQL</span> [<span class=\"hljs-string\">(none)</span>]<span class=\"hljs-string\">&gt;</span> <span class=\"hljs-string\">show</span> <span class=\"hljs-string\">proc</span> <span class=\"hljs-string\">&#x27;/frontends&#x27;</span><span class=\"hljs-string\">\\G;</span><br><span class=\"hljs-string\">***************************</span> <span class=\"hljs-number\">1</span><span class=\"hljs-string\">.</span> <span class=\"hljs-string\">row</span> <span class=\"hljs-string\">***************************</span><br>             <span class=\"hljs-attr\">Name:</span> <span class=\"hljs-number\">172.20</span><span class=\"hljs-number\">.8</span><span class=\"hljs-string\">.117_9010_1683623765731</span><br>               <span class=\"hljs-attr\">IP:</span> <span class=\"hljs-number\">172.20</span><span class=\"hljs-number\">.8</span><span class=\"hljs-number\">.117</span><br>         <span class=\"hljs-attr\">HostName:</span> <span class=\"hljs-string\">hdt-dmcp-ops01</span><br>      <span class=\"hljs-attr\">EditLogPort:</span> <span class=\"hljs-number\">9010</span><br>         <span class=\"hljs-attr\">HttpPort:</span> <span class=\"hljs-number\">8130</span><br>        <span class=\"hljs-attr\">QueryPort:</span> <span class=\"hljs-number\">9030</span><br>          <span class=\"hljs-attr\">RpcPort:</span> <span class=\"hljs-number\">9020</span><br>             <span class=\"hljs-attr\">Role:</span> <span class=\"hljs-string\">FOLLOWER</span><br>         <span class=\"hljs-attr\">IsMaster:</span> <span class=\"hljs-literal\">true</span><br>        <span class=\"hljs-attr\">ClusterId:</span> <span class=\"hljs-number\">2040453956</span><br>             <span class=\"hljs-attr\">Join:</span> <span class=\"hljs-literal\">true</span><br>            <span class=\"hljs-attr\">Alive:</span> <span class=\"hljs-literal\">true</span><br><span class=\"hljs-attr\">ReplayedJournalId:</span> <span class=\"hljs-number\">18054</span><br>    <span class=\"hljs-attr\">LastHeartbeat:</span> <span class=\"hljs-number\">2023-05-10 09:59:13</span><br>         <span class=\"hljs-attr\">IsHelper:</span> <span class=\"hljs-literal\">true</span><br>           <span class=\"hljs-attr\">ErrMsg:</span> <br>          <span class=\"hljs-attr\">Version:</span> <span class=\"hljs-number\">1.1</span><span class=\"hljs-number\">.5</span><span class=\"hljs-string\">-rc02-ef0635dae7</span><br> <span class=\"hljs-attr\">CurrentConnected:</span> <span class=\"hljs-literal\">Yes</span><br><span class=\"hljs-number\">1</span> <span class=\"hljs-string\">row</span> <span class=\"hljs-string\">in</span> <span class=\"hljs-string\">set</span> <span class=\"hljs-string\">(0.01</span> <span class=\"hljs-string\">sec)</span><br></code></pre></td></tr></table></figure>\n\n<p>从查询结果看，目前只有一个 FE，Role 为 FOLLOWER</p>\n<ul>\n<li>增加FE节点</li>\n</ul>\n<p> FE分为Leader，Follower和Observer三种角色。 默认一个集群只能有一个Leader，可以有多个Follower和Observer。其中Leader和Follower组成一个Paxos选择组，如果 Leader宕机，则剩下的Follower 会自动选出新的Leader，保证写入高可用。Observer 同步 Leader的数据，但是不参加选举。<br> 如果只部署一个FE，则FE 默认就是Leader。在此基础上，可以添加若干Follower和 Observer。</p>\n<pre><code class=\"hljs\"># 增加FOLLOWER\nALTER SYSTEM ADD FOLLOWER &quot;follower_host:edit_log_port&quot;;\n# 增加OBSERVER\nALTER SYSTEM ADD OBSERVER &quot;observer_host:edit_log_port&quot;;\n</code></pre>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">此时只是加入角色，各 FE 节点服务还未部署<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>配置Follower和Observer</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">参考2.2.12<br></code></pre></td></tr></table></figure>\n\n<p>启动新的 FE 节点</p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs delphi\">注意：<br>扩容的节点第一次启动时，启动命令需要添加参 --<span class=\"hljs-keyword\">helper</span> leader的IP:port，第一次需要成功启动加入到集群后，后续就不需要<span class=\"hljs-keyword\">helper</span>参数了<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\"><span class=\"hljs-string\">./bin/start_fe.sh</span> <span class=\"hljs-params\">--helper</span> leader_fe_host<span class=\"hljs-function\">:edit_log_port</span> <span class=\"hljs-params\">--daemon</span><br></code></pre></td></tr></table></figure>\n\n<p>查看 FE 状态</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">show</span> proc <span class=\"hljs-string\">&#x27;/frontends&#x27;</span>\\G;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-1-2-FE缩容\"><a href=\"#3-1-2-FE缩容\" class=\"headerlink\" title=\"3.1.2 FE缩容\"></a>3.1.2 FE缩容</h5><p>删除只需执行如下命令即可：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">SYSTEM</span> <span class=\"hljs-keyword\">DROP</span> FOLLOWER[OBSERVER] &quot;fe_host:edit_log_port&quot;;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\">注意：<br>删除 Follower FE 时，确保最终剩余的 Follower（包括 <span class=\"hljs-built_in\">Leader</span>）节点为奇数的合理状态<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-BE扩容和缩容\"><a href=\"#3-2-BE扩容和缩容\" class=\"headerlink\" title=\"3.2 BE扩容和缩容\"></a>3.2 BE扩容和缩容</h4><h5 id=\"3-2-1-BE扩容\"><a href=\"#3-2-1-BE扩容\" class=\"headerlink\" title=\"3.2.1 BE扩容\"></a>3.2.1 BE扩容</h5><p>BE扩容和第一次部署添加 BE 方式一样</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">在MySQL命令行，通过 <span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">SYSTEM</span> <span class=\"hljs-keyword\">ADD</span> BACKEND 命令增加BE节点<br><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">SYSTEM</span> <span class=\"hljs-keyword\">ADD</span> BACKEND &quot;hdt-dmcp-ops04:9050&quot;;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-2-2-BE缩容\"><a href=\"#3-2-2-BE缩容\" class=\"headerlink\" title=\"3.2.2 BE缩容\"></a>3.2.2 BE缩容</h5><p>使用 <code>DECOMMISSION</code> 方式删除BE节点</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">语法：<span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">SYSTEM</span> DECOMMISSION BACKEND &quot;be_host:be_heartbeat_service_port&quot;;<br><br>示例：<span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">SYSTEM</span> DECOMMISSION BACKEND &quot;hdt-dmcp-ops05:9050&quot;;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">注意：<br><br>该命令用于安全删除BE节点。命令下发后，Doris 会尝试将该BE上的数据向其他BE节点迁移，当所有数据都迁移完成后，Doris会自动删除该节点。<br><br>该命令是一个异步操作。执行后，可以通过 <span class=\"hljs-keyword\">SHOW</span> PROC ‘<span class=\"hljs-operator\">/</span>backends’; 看到该 BE 节点的isDecommission状态为<span class=\"hljs-literal\">true</span>。表示该节点正在进行下线。<br><br>该命令不一定执行成功。比如剩余BE存储空间不足以容纳下线BE上的数据，或者剩余机器数量不满足最小副本数时，该命令都无法完成，并且BE会一直处于 isDecommission为<span class=\"hljs-literal\">true</span>的状态。<br><br>DECOMMISSION的进度，可以通过<span class=\"hljs-keyword\">SHOW</span> PROC ‘<span class=\"hljs-operator\">/</span>backends’; 中的TabletNum查看，如果正在进行，TabletNum将不断减少。<br><br>该操作可以通过如下命令取消：<br><br>CANCEL DECOMMISSION BACKEND &quot;be_host:be_heartbeat_service_port&quot;;<br><br>如执行取消命令后，该BE上的数据将维持当前剩余的数据量。后续Doris重新进行负载均衡<br>除了使用DECOMMISSION方式，还可以直接使用 <span class=\"hljs-keyword\">DROP</span> 方式删除 BE 节点，但生产环境不建议使用<br><br>示例：<span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">SYSTEM</span> <span class=\"hljs-keyword\">DROP</span> BACKEND &quot;be_host:be_heartbeat_service_port&quot;;<br><br><span class=\"hljs-keyword\">DROP</span> BACKEND 会直接删除该BE，并且其上的数据将不能再恢复。方式比较暴力，所以不推荐使用 <span class=\"hljs-keyword\">DROP</span> BACKEND 这种方式删除BE节点。当执行这个语句时，也会有对应的防误操作提示信息<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"四、Doris-基本概念与介绍\"><a href=\"#四、Doris-基本概念与介绍\" class=\"headerlink\" title=\"四、Doris 基本概念与介绍\"></a>四、Doris 基本概念与介绍</h3><h4 id=\"4-1-Doris基本概念\"><a href=\"#4-1-Doris基本概念\" class=\"headerlink\" title=\"4.1 Doris基本概念\"></a>4.1 Doris基本概念</h4><h5 id=\"4-1-1-Row-Column\"><a href=\"#4-1-1-Row-Column\" class=\"headerlink\" title=\"4.1.1 Row &amp; Column\"></a>4.1.1 Row &amp; Column</h5><p> 一张表包括行（Row）和列（Column）：</p>\n<figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autohotkey\"><span class=\"hljs-built_in\">Row ,</span> 即用户的一行数据<span class=\"hljs-comment\">;</span><br><span class=\"hljs-built_in\"></span><br><span class=\"hljs-built_in\">Column ,</span> 用于描述一行数据中不同的字段。<br></code></pre></td></tr></table></figure>\n\n<p>Column 可以分为两大类：Key 和 Value。从业务角度看，Key 和 Value 可以分别对应维度列和指标列</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">Doris数据库是一个分布式的列式存储引擎，它的数据模型是基于列式存储的。在Doris数据库中，一个<span class=\"hljs-built_in\">Row</span>就是一个数据行，它由多个<span class=\"hljs-built_in\">Column</span>组成。每个<span class=\"hljs-built_in\">Column</span>则代表这个数据行中的一个属性或者字段。因此，我们也可以将一个<span class=\"hljs-built_in\">Row</span>看做是一个数据表中的一行数据，而<span class=\"hljs-built_in\">Column</span>则对应数据表中的列。<br><br>在Doris数据库中，由于数据是以列式存储的，因此在查询时可以只读取需要的<span class=\"hljs-built_in\">Column</span>数据，而不用读取整个<span class=\"hljs-built_in\">Row</span>数据，这就大大提高了查询性能。同时，Doris还支持<span class=\"hljs-built_in\">Column</span>的压缩和编码，可以进一步减小存储空间，提高数据的存储和查询效率。<br><br>总之，在Doris数据库中，<span class=\"hljs-built_in\">Row</span>和<span class=\"hljs-built_in\">Column</span>是基本的数据结构，<span class=\"hljs-built_in\">Row</span>代表一个数据行，<span class=\"hljs-built_in\">Column</span>代表一个属性或字段，这种设计使得Doris能够高效地存储和查询海量数据。<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-1-2-Tablet-Partition\"><a href=\"#4-1-2-Tablet-Partition\" class=\"headerlink\" title=\"4.1.2 Tablet &amp; Partition\"></a>4.1.2 Tablet &amp; Partition</h5><figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mathematica\">在<span class=\"hljs-variable\">Doris</span>的存储引擎中，用户数据首先被划分成若干个分区（<span class=\"hljs-built_in\">Partition</span>），划分的规则通常是按照用户指定的分区列进行范围划分，比如按时间划分。而在每个分区内，数据被进一步的按照<span class=\"hljs-built_in\">Hash</span>的方式分桶，分桶的规则是要找用户指定的分桶列的值进行<span class=\"hljs-built_in\">Hash</span>后分桶。每个分桶就是一个数据分片（<span class=\"hljs-variable\">Tablet</span>），也是数据划分的最小逻辑单元。<br><br><span class=\"hljs-variable\">Tablet</span>之间的数据是没有交集的，独立存储的。<span class=\"hljs-variable\">Tablet</span>也是数据移动、复制等操作的最小物理存储单元。<br><br><span class=\"hljs-built_in\">Partition</span>可以视为是逻辑上最小的管理单元。数据的导入与删除，都可以或仅能针对一个 <span class=\"hljs-built_in\">Partition</span> 进行<span class=\"hljs-operator\">,</span>例如，可以按照数据的时间戳、地理位置、业务类型等进行分区，以保证数据的高效存储和查询。每个<span class=\"hljs-built_in\">Partition</span>都包含一定数量的数据块（<span class=\"hljs-variable\">Data</span> <span class=\"hljs-built_in\">Block</span>），一个数据块包含一段连续的数据和对应的元数据信息，用于支持查询和数据的压缩存储等功能。<br><br>总之，<span class=\"hljs-variable\">Doris</span>的<span class=\"hljs-variable\">Tablet</span>和<span class=\"hljs-built_in\">Partition</span>是实现高性能、高可用的分布式存储和计算的关键组件，通过合理的划分和分配，可以充分利用计算和存储资源，提高数据的利用率和系统的性能<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-Doris字段类型\"><a href=\"#4-2-Doris字段类型\" class=\"headerlink\" title=\"4.2 Doris字段类型\"></a>4.2 Doris字段类型</h4><table>\n<thead>\n<tr>\n<th>TINYINT</th>\n<th>1字节</th>\n<th>范围：-2^7 + 1 ~ 2^7 - 1</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SMALLINT</td>\n<td>2字节</td>\n<td>范围：-2^15 + 1 ~ 2^15 - 1</td>\n</tr>\n<tr>\n<td>INT</td>\n<td>4字节</td>\n<td>范围：-2^31 + 1 ~ 2^31 - 1</td>\n</tr>\n<tr>\n<td>BIGINT</td>\n<td>8字节</td>\n<td>范围：-2^63 + 1 ~ 2^63 - 1</td>\n</tr>\n<tr>\n<td>LARGEINT</td>\n<td>16字节</td>\n<td>范围：-2^127 + 1 ~ 2^127 - 1</td>\n</tr>\n<tr>\n<td>FLOAT</td>\n<td>4字节</td>\n<td>支持科学计数法</td>\n</tr>\n<tr>\n<td>DOUBLE</td>\n<td>12字节</td>\n<td>支持科学计数法</td>\n</tr>\n<tr>\n<td>DECIMAL[(precision, scale)]</td>\n<td>16字节</td>\n<td>保证精度的小数类型。默认是 DECIMAL(10, 0)precision: 1 ~ 27scale: 0 ~ 9其中整数部分为 1 ~ 18不支持科学计数法</td>\n</tr>\n<tr>\n<td>DATE</td>\n<td>3字节</td>\n<td>范围：0000-01-01 ~ 9999-12-31</td>\n</tr>\n<tr>\n<td>DATETIME</td>\n<td>8字节</td>\n<td>范围：0000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td>\n</tr>\n<tr>\n<td>CHAR[(length)]</td>\n<td></td>\n<td>定长字符串。长度范围：1 ~ 255。默认为1</td>\n</tr>\n<tr>\n<td>VARCHAR[(length)]</td>\n<td></td>\n<td>变长字符串。长度范围：1 ~ 65533</td>\n</tr>\n<tr>\n<td>BOOLEAN</td>\n<td></td>\n<td>与TINYINT一样，0代表false，1代表true</td>\n</tr>\n<tr>\n<td>HLL</td>\n<td>1~16385个字节</td>\n<td>hll列类型，不需要指定长度和默认值、长度根据数据的聚合程度系统内控制，并且HLL列只能通过配套的hll_union_agg、Hll_cardinality、hll_hash进行查询或使用</td>\n</tr>\n<tr>\n<td>BITMAP</td>\n<td></td>\n<td>bitmap列类型，不需要指定长度和默认值。表示整型的集合，元素最大支持到2^64 - 1</td>\n</tr>\n<tr>\n<td>STRING</td>\n<td></td>\n<td>变长字符串，0.15版本支持，最大支持2147483643 字节（2GB-4），长度还受be 配置<code>string_type_soft_limit</code>, 实际能存储的最大长度取两者最小值。只能用在value 列，不能用在 key 列和分区、分桶列</td>\n</tr>\n</tbody></table>\n<h4 id=\"4-3-Doris数据模型\"><a href=\"#4-3-Doris数据模型\" class=\"headerlink\" title=\"4.3 Doris数据模型\"></a>4.3 Doris数据模型</h4><p>Doris 的数据模型主要分为3类</p>\n<p>Aggregate - 实现聚合查询</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">Doris的<span class=\"hljs-built_in\">Aggregate</span>模型是Doris中的一种数据模型，用于支持快速的聚合查询。该模型将数据按照一定的规则进行分组，并对每个分组内的数据进行聚合计算，得到一个汇总的结果。在Doris中，<span class=\"hljs-built_in\">Aggregate</span>模型是通过一个存储在内存中的数据结构进行计算的，这个数据结构被称为“HyperLogLog”（简称HLL）。HLL可以快速地统计一个数据集的基数（不同元素的个数），并且可以进行基于聚合的计算，例如计算不同的元素的个数、求和、平均值等。在Doris中，用户可以通过定义聚合键、聚合函数等参数来创建<span class=\"hljs-built_in\">Aggregate</span>模型，从而支持更高效的查询操作。<br></code></pre></td></tr></table></figure>\n\n<p>Unique - 实现唯一性约束</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">Doris数据库的<span class=\"hljs-built_in\">Unique</span>模型是指在Doris中使用了一种特殊的索引结构，称为<span class=\"hljs-built_in\">Unique</span>索引，来实现唯一性约束。这种索引结构允许在表的某个列上创建唯一性约束，保证该列的值在表中是唯一的，并且可以快速地检查重复值。<br><br>在Doris中，<span class=\"hljs-built_in\">Unique</span>索引使用B+树数据结构来实现，通过将唯一性列的值作为索引的键值，将其它列的值作为索引的数据值，来构建索引。当插入或更新数据时，Doris会自动检查唯一性列的值是否已经存在，如果不存在则插入数据，否则更新数据。这样就可以避免重复数据的插入，保证数据的唯一性。<br><br><span class=\"hljs-built_in\">Unique</span>模型主要用于实现单列唯一性约束，如果需要实现多列唯一性约束，则需要使用Doris的联合索引。<br></code></pre></td></tr></table></figure>\n\n<p>Duplicate - 实现自动检测和删除重复数据</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">Doris数据库的Duplicate模型是用于处理数据冗余问题的模型，它可以自动检测和删除重复数据。在Doris数据库中，数据是以分布式表的形式存储的，分布式表由多个分片组成，每个分片都有自己的数据副本。当用户执行插入操作时，Duplicate模型会首先检测分片中是否已经存在相同的数据，如果存在，则会自动删除重复数据，从而保证数据的唯一性。Duplicate模型还支持对唯一性约束进行自定义设置，用户可以根据自己的业务需求来定义唯一性约束。<br></code></pre></td></tr></table></figure>\n\n<p>建测试库</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">MySQL [(<span class=\"hljs-keyword\">none</span>)]&gt; <span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">database</span> test_db;<br>Query OK, <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">rows</span> affected (<span class=\"hljs-number\">0.02</span> sec)<br><br>MySQL [(<span class=\"hljs-keyword\">none</span>)]&gt; use test_db;<br><span class=\"hljs-keyword\">Database</span> changed<br>MySQL [test_db]&gt; <br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-3-1-Aggregate使用示例\"><a href=\"#4-3-1-Aggregate使用示例\" class=\"headerlink\" title=\"4.3.1 Aggregate使用示例\"></a>4.3.1 Aggregate使用示例</h5><ul>\n<li>建表</li>\n</ul>\n<figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autohotkey\">CREATE TABLE IF <span class=\"hljs-literal\">NOT</span> EXISTS test_db.example_site_visit<br>(<br>    `user_id` LARGEINT <span class=\"hljs-literal\">NOT</span> NULL COMMENT <span class=\"hljs-string\">&quot;用户id&quot;</span>,<br>    `date` DATE <span class=\"hljs-literal\">NOT</span> NULL COMMENT <span class=\"hljs-string\">&quot;数据灌入日期时间&quot;</span>,<br>    `city` VARCHAR(<span class=\"hljs-number\">20</span>) COMMENT <span class=\"hljs-string\">&quot;用户所在城市&quot;</span>,<br>    `age` SMALLINT COMMENT <span class=\"hljs-string\">&quot;用户年龄&quot;</span>,<br>    `sex` TINYINT COMMENT <span class=\"hljs-string\">&quot;用户性别&quot;</span>,<br>`last_visit_date` DATETIME REPLACE DEFAULT <span class=\"hljs-string\">&quot;1970-01-01 00:00:00&quot;</span> COMMENT <span class=\"hljs-string\">&quot;用户最后一次访问时间&quot;</span>,<br>    `cost` BIGINT SUM DEFAULT <span class=\"hljs-string\">&quot;0&quot;</span> COMMENT <span class=\"hljs-string\">&quot;用户总消费&quot;</span>,<br>    `max_dwell_time` INT MAX DEFAULT <span class=\"hljs-string\">&quot;0&quot;</span> COMMENT <span class=\"hljs-string\">&quot;用户最大停留时间&quot;</span>,<br>    `min_dwell_time` INT MIN DEFAULT <span class=\"hljs-string\">&quot;99999&quot;</span> COMMENT <span class=\"hljs-string\">&quot;用户最小停留时间&quot;</span><br>)<br>AGGREGATE KEY(`user_id`, `date`, `city`, `age`, `sex`)<br>DISTRIBUTED BY HASH(`user_id`) BUCKETS <span class=\"hljs-number\">10</span><span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>插入样例数据</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">insert</span> into test_db.example_site_visit values<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10000</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span>&#x27;,&#x27;北京&#x27;,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">0</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">06</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>&#x27; ,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">10</span>),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10000</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span>&#x27;,&#x27;北京&#x27;,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">0</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">07</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>&#x27;,<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10001</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span>&#x27;,&#x27;北京&#x27;,<span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">1</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">17</span>:<span class=\"hljs-number\">05</span>:<span class=\"hljs-number\">45</span>&#x27;,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">22</span>,<span class=\"hljs-number\">22</span>),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10002</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">02</span>&#x27;,&#x27;上海&#x27;,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">1</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">02</span> <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">59</span>:<span class=\"hljs-number\">12</span>&#x27; ,<span class=\"hljs-number\">200</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">5</span>),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10003</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">02</span>&#x27;,&#x27;广州&#x27;,<span class=\"hljs-number\">32</span>,<span class=\"hljs-number\">0</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">02</span> <span class=\"hljs-number\">11</span>:<span class=\"hljs-number\">20</span>:<span class=\"hljs-number\">00</span>&#x27;,<span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">11</span>),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10004</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span>&#x27;,&#x27;深圳&#x27;,<span class=\"hljs-number\">35</span>,<span class=\"hljs-number\">0</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">10</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">15</span>&#x27;,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10004</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">03</span>&#x27;,&#x27;深圳&#x27;,<span class=\"hljs-number\">35</span>,<span class=\"hljs-number\">0</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">03</span> <span class=\"hljs-number\">10</span>:<span class=\"hljs-number\">20</span>:<span class=\"hljs-number\">22</span>&#x27;,<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">6</span>);<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>查看数据验证</li>\n</ul>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vbnet\">可以观察结果针对同一个user_id进行的聚合结果<br><br>根据建表语句中<span class=\"hljs-keyword\">AGGREGATE</span> <span class=\"hljs-keyword\">KEY</span>(user_id, <span class=\"hljs-type\">date</span>, city, age, sex),涉及的字段信息都相同进行聚合，如有不同不触发聚合<br><br><span class=\"hljs-number\">10000</span>信息相同进行聚合，而<span class=\"hljs-number\">10004</span>灌入日期时间就已经不同，不进行聚合<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-Aggregate.png\"></p>\n<h5 id=\"4-3-2-Unique-使用示例\"><a href=\"#4-3-2-Unique-使用示例\" class=\"headerlink\" title=\"4.3.2 Unique 使用示例\"></a>4.3.2 Unique 使用示例</h5><ul>\n<li>建表</li>\n</ul>\n<figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autohotkey\">CREATE TABLE IF <span class=\"hljs-literal\">NOT</span> EXISTS test_db.user<br>(<br>    `user_id` LARGEINT <span class=\"hljs-literal\">NOT</span> NULL COMMENT <span class=\"hljs-string\">&quot;用户id&quot;</span>,<br>    `username` VARCHAR(<span class=\"hljs-number\">50</span>) <span class=\"hljs-literal\">NOT</span> NULL COMMENT <span class=\"hljs-string\">&quot;用户昵称&quot;</span>,<br>    `city` VARCHAR(<span class=\"hljs-number\">20</span>) COMMENT <span class=\"hljs-string\">&quot;用户所在城市&quot;</span>,<br>    `age` SMALLINT COMMENT <span class=\"hljs-string\">&quot;用户年龄&quot;</span>,<br>    `sex` TINYINT COMMENT <span class=\"hljs-string\">&quot;用户性别&quot;</span>,<br>    `phone` LARGEINT COMMENT <span class=\"hljs-string\">&quot;用户电话&quot;</span>,<br>    `address` VARCHAR(<span class=\"hljs-number\">500</span>) COMMENT <span class=\"hljs-string\">&quot;用户地址&quot;</span>,<br>    `register_time` DATETIME COMMENT <span class=\"hljs-string\">&quot;用户注册时间&quot;</span><br>)<br>UNIQUE KEY(`user_id`, `username`)<br>DISTRIBUTED BY HASH(`user_id`) BUCKETS <span class=\"hljs-number\">10</span><span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>插入样例数据</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">insert</span> into test_db.user values<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10000</span>,&#x27;wuyanzu&#x27;,&#x27;北京&#x27;,<span class=\"hljs-number\">18</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">12345678910</span>,&#x27;北京朝阳区&#x27;,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">07</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>&#x27;),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10000</span>,&#x27;wuyanzu&#x27;,&#x27;北京&#x27;,<span class=\"hljs-number\">19</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">12345678910</span>,&#x27;北京朝阳区&#x27;,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">07</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>&#x27;),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10000</span>,&#x27;zhangsan&#x27;,&#x27;北京&#x27;,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">12345678910</span>,&#x27;北京海淀区&#x27;,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">11</span>-<span class=\"hljs-number\">15</span> <span class=\"hljs-number\">06</span>:<span class=\"hljs-number\">10</span>:<span class=\"hljs-number\">20</span>&#x27;);<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>查看数据验证</li>\n</ul>\n<p>可以观察结果针对同一个<code>user_id</code>进行的聚合结果</p>\n<p>根据建表语句中<code>UNIQUE KEY(user_id, username)</code>,涉及的字段信息都相同进行去重，如有不同不触发去重</p>\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-Unique.png\"></p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">注意：<br><br><span class=\"hljs-built_in\">Unique</span> 模型完全可以用聚合模型中的 <span class=\"hljs-built_in\">REPLACE</span> 方式替代。其内部的实现方式和数据存储方式也完全一样<br><br>简单的理解就是 <span class=\"hljs-built_in\">Unique</span> 能实现的功能都可以用 <span class=\"hljs-built_in\">Aggregate</span> 实现<br></code></pre></td></tr></table></figure>\n\n<p>补充示例：</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\"># 建表<br><span class=\"hljs-keyword\">CREATE</span> TABLE <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">EXISTS</span> test_db.user_2 <br>(<br>    <span class=\"hljs-symbol\">`user_id`</span> LARGEINT <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> COMMENT <span class=\"hljs-string\">&quot;用户id&quot;</span>,<br>    <span class=\"hljs-symbol\">`username`</span> VARCHAR(<span class=\"hljs-number\">50</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> COMMENT <span class=\"hljs-string\">&quot;用户昵称&quot;</span>,<br>    <span class=\"hljs-symbol\">`city`</span> VARCHAR(<span class=\"hljs-number\">20</span>) <span class=\"hljs-built_in\">REPLACE</span> COMMENT <span class=\"hljs-string\">&quot;用户所在城市&quot;</span>,<br>    <span class=\"hljs-symbol\">`age`</span> SMALLINT <span class=\"hljs-built_in\">REPLACE</span> COMMENT <span class=\"hljs-string\">&quot;用户年龄&quot;</span>,<br>    <span class=\"hljs-symbol\">`sex`</span> TINYINT <span class=\"hljs-built_in\">REPLACE</span> COMMENT <span class=\"hljs-string\">&quot;用户性别&quot;</span>,<br>    <span class=\"hljs-symbol\">`phone`</span> LARGEINT <span class=\"hljs-built_in\">REPLACE</span> COMMENT <span class=\"hljs-string\">&quot;用户电话&quot;</span>,<br>    <span class=\"hljs-symbol\">`address`</span> VARCHAR(<span class=\"hljs-number\">500</span>) <span class=\"hljs-built_in\">REPLACE</span> COMMENT <span class=\"hljs-string\">&quot;用户地址&quot;</span>,<br>    <span class=\"hljs-symbol\">`register_time`</span> DATETIME <span class=\"hljs-built_in\">REPLACE</span> COMMENT <span class=\"hljs-string\">&quot;用户注册时间&quot;</span><br>)<br>AGGREGATE <span class=\"hljs-keyword\">KEY</span>(<span class=\"hljs-symbol\">`user_id`</span>, <span class=\"hljs-symbol\">`username`</span>)<br>DISTRIBUTED <span class=\"hljs-keyword\">BY</span> HASH(<span class=\"hljs-symbol\">`user_id`</span>) BUCKETS <span class=\"hljs-number\">10</span>;<br><br># 插入样例数据<br><span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> test_db.user_2 <span class=\"hljs-keyword\">values</span>\\<br>(<span class=\"hljs-number\">10000</span>,<span class=\"hljs-string\">&#x27;wuyanzu&#x27;</span>,<span class=\"hljs-string\">&#x27;北京&#x27;</span>,<span class=\"hljs-number\">18</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">12345678910</span>,<span class=\"hljs-string\">&#x27;北京朝阳区&#x27;</span>,<span class=\"hljs-string\">&#x27;2017-10-01 07:00:00&#x27;</span>),\\<br>(<span class=\"hljs-number\">10000</span>,<span class=\"hljs-string\">&#x27;wuyanzu&#x27;</span>,<span class=\"hljs-string\">&#x27;北京&#x27;</span>,<span class=\"hljs-number\">19</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">12345678910</span>,<span class=\"hljs-string\">&#x27;北京朝阳区&#x27;</span>,<span class=\"hljs-string\">&#x27;2017-10-01 07:00:00&#x27;</span>),\\<br>(<span class=\"hljs-number\">10000</span>,<span class=\"hljs-string\">&#x27;zhangsan&#x27;</span>,<span class=\"hljs-string\">&#x27;北京&#x27;</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">12345678910</span>,<span class=\"hljs-string\">&#x27;北京海淀区&#x27;</span>,<span class=\"hljs-string\">&#x27;2017-11-15 06:10:20&#x27;</span>);<br><br># 查询验证 发现也是只有2条，成功去重<br>MySQL [test_db]&gt; <span class=\"hljs-keyword\">select</span> user_id,username,city,age <span class=\"hljs-keyword\">from</span> user_2;<br>+---------+----------+--------+------+<br>| user_id | username | city   | age  |<br>+---------+----------+--------+------+<br>| 10000   | wuyanzu  | 北京   |   19 |<br>| 10000   | zhangsan | 北京   |   20 |<br>+---------+----------+--------+------+<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-3-3-Duplicate-使用示例\"><a href=\"#4-3-3-Duplicate-使用示例\" class=\"headerlink\" title=\"4.3.3 Duplicate 使用示例\"></a>4.3.3 Duplicate 使用示例</h5><ul>\n<li>建表</li>\n</ul>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">EXISTS</span> test_db.example_log<br>(<br>    `<span class=\"hljs-type\">timestamp</span>` DATETIME <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> &quot;日志时间&quot;,<br>    `<span class=\"hljs-keyword\">type</span>` <span class=\"hljs-type\">INT</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> &quot;日志类型&quot;,<br>    `error_code` <span class=\"hljs-type\">INT</span> <span class=\"hljs-keyword\">COMMENT</span> &quot;错误码&quot;,<br>    `error_msg` <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">1024</span>) <span class=\"hljs-keyword\">COMMENT</span> &quot;错误详细信息&quot;,<br>    `op_id` <span class=\"hljs-type\">BIGINT</span> <span class=\"hljs-keyword\">COMMENT</span> &quot;负责人id&quot;,<br>    `op_time` DATETIME <span class=\"hljs-keyword\">COMMENT</span> &quot;处理时间&quot;<br>)<br>DUPLICATE KEY(`<span class=\"hljs-type\">timestamp</span>`, `<span class=\"hljs-keyword\">type</span>`)<br>DISTRIBUTED <span class=\"hljs-keyword\">BY</span> HASH(`<span class=\"hljs-type\">timestamp</span>`) BUCKETS <span class=\"hljs-number\">10</span>;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>插入样例数据</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">insert</span> into test_db.example_log values<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">05</span>&#x27;,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">404</span>,&#x27;not found page&#x27;, <span class=\"hljs-number\">101</span>, &#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">05</span>&#x27;),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">05</span>&#x27;,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">404</span>,&#x27;not found page&#x27;, <span class=\"hljs-number\">101</span>, &#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">05</span>&#x27;),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">05</span>&#x27;,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">404</span>,&#x27;not found page&#x27;, <span class=\"hljs-number\">101</span>, &#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">06</span>&#x27;),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">06</span>&#x27;,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">404</span>,&#x27;not found page&#x27;, <span class=\"hljs-number\">101</span>, &#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">07</span>&#x27;);<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>查看数据验证</li>\n</ul>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gherkin\">MySQL [test_db]&gt; select <span class=\"hljs-symbol\">*</span> from example_log;<br>+---------------------+------+------------+----------------+-------+---------------------+<br>|<span class=\"hljs-string\"> timestamp           </span>|<span class=\"hljs-string\"> type </span>|<span class=\"hljs-string\"> error_code </span>|<span class=\"hljs-string\"> error_msg      </span>|<span class=\"hljs-string\"> op_id </span>|<span class=\"hljs-string\"> op_time             </span>|<br>+---------------------+------+------------+----------------+-------+---------------------+<br>|<span class=\"hljs-string\"> 2017-10-01 08:00:05 </span>|<span class=\"hljs-string\">    1 </span>|<span class=\"hljs-string\">        404 </span>|<span class=\"hljs-string\"> not found page </span>|<span class=\"hljs-string\">   101 </span>|<span class=\"hljs-string\"> 2017-10-01 08:00:05 </span>|<br>|<span class=\"hljs-string\"> 2017-10-01 08:00:05 </span>|<span class=\"hljs-string\">    1 </span>|<span class=\"hljs-string\">        404 </span>|<span class=\"hljs-string\"> not found page </span>|<span class=\"hljs-string\">   101 </span>|<span class=\"hljs-string\"> 2017-10-01 08:00:05 </span>|<br>|<span class=\"hljs-string\"> 2017-10-01 08:00:05 </span>|<span class=\"hljs-string\">    2 </span>|<span class=\"hljs-string\">        404 </span>|<span class=\"hljs-string\"> not found page </span>|<span class=\"hljs-string\">   101 </span>|<span class=\"hljs-string\"> 2017-10-01 08:00:06 </span>|<br>|<span class=\"hljs-string\"> 2017-10-01 08:00:06 </span>|<span class=\"hljs-string\">    2 </span>|<span class=\"hljs-string\">        404 </span>|<span class=\"hljs-string\"> not found page </span>|<span class=\"hljs-string\">   101 </span>|<span class=\"hljs-string\"> 2017-10-01 08:00:07 </span>|<br>+---------------------+------+------------+----------------+-------+---------------------+<br></code></pre></td></tr></table></figure>\n\n<p>Duplicate 这种数据模型区别于 Aggregate 和 Unique 模型。数据完全按照导入文件中的数据进行存储，不会有任何聚合。即使两行数据完全相同，也都会保留。 而在建表语句中指定的 DUPLICATE KEY，只是用来指明底层数据按照那些列进行排序。</p>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">在 DUPLICATE <span class=\"hljs-keyword\">KEY</span> 的选择上，建议适当的选择前 <span class=\"hljs-number\">2</span>-<span class=\"hljs-number\">4</span> 列就可以，这种数据模型适用于既没有聚合需求，又没有主键唯一性约束的原始数据的存储。<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-4-Doris-web-ui使用\"><a href=\"#4-4-Doris-web-ui使用\" class=\"headerlink\" title=\"4.4 Doris web-ui使用\"></a>4.4 Doris web-ui使用</h4><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">首页可以查看Doris应用部署的版本信息`<span class=\"hljs-keyword\">Version</span>`和对应服务器的硬件信息`Hardware <span class=\"hljs-keyword\">Info</span>`<br><br>页面`Playground`可以进行<span class=\"hljs-keyword\">SQL</span>查询<br><br>页面<span class=\"hljs-keyword\">System</span>可以查看集群的基本信息，例如用户、节点、状态等等情况<br><br>页面<span class=\"hljs-keyword\">Log</span>可以直接查看部署应用的<span class=\"hljs-keyword\">log</span>日志，十分便捷<br><br>页面<span class=\"hljs-keyword\">Session</span> <span class=\"hljs-keyword\">Info</span>可以实时监控当前Doris数据库实时会话信息，例如使用命令行连接数据库，再使用Navicat工具连一个会话，则可以在页面看到当前<span class=\"hljs-number\">2</span>个连接<span class=\"hljs-keyword\">session</span>信息<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-5-Doris丰富的建表示例\"><a href=\"#4-5-Doris丰富的建表示例\" class=\"headerlink\" title=\"4.5 Doris丰富的建表示例\"></a>4.5 Doris丰富的建表示例</h4><p>查看建表帮助</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">HELP <span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span>;<br></code></pre></td></tr></table></figure>\n\n<p>可以查看建表的各类示例</p>\n<figure class=\"highlight inform7\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">Description:<br><br>该语句用于创建 table。<br>语法：<br>​```<br>    CREATE <span class=\"hljs-comment\">[EXTERNAL]</span> TABLE <span class=\"hljs-comment\">[IF NOT EXISTS]</span> <span class=\"hljs-comment\">[database.]</span>table_name<br>    (column_definition1<span class=\"hljs-comment\">[, column_definition2, ...]</span><br>    <span class=\"hljs-comment\">[, index_definition1<span class=\"hljs-comment\">[, index_definition2, ...]</span>]</span>)<br>    <span class=\"hljs-comment\">[ENGINE = <span class=\"hljs-comment\">[olap|mysql|broker|hive|iceberg]</span>]</span><br>    <span class=\"hljs-comment\">[key_desc]</span><br>    <span class=\"hljs-comment\">[COMMENT &quot;table comment&quot;]</span>;<br>    <span class=\"hljs-comment\">[partition_desc]</span><br>    <span class=\"hljs-comment\">[distribution_desc]</span><br>    <span class=\"hljs-comment\">[rollup_index]</span><br>    <span class=\"hljs-comment\">[PROPERTIES (&quot;key&quot;=&quot;value&quot;, ...)]</span><br>    <span class=\"hljs-comment\">[BROKER PROPERTIES (&quot;key&quot;=&quot;value&quot;, ...)]</span><br>​```<br></code></pre></td></tr></table></figure>\n\n<p>例如帮助中有非常丰富的不同场景的建表示例( 都可以通过<code>HELP CREATE TABLE;</code>直接查看获取 )：</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mathematica\">创建一个 <span class=\"hljs-variable\">olap</span> 表，使用 <span class=\"hljs-variable\">HASH</span> 分桶，使用列存，相同<span class=\"hljs-variable\">key</span>的记录进行聚合<br>创建一个 <span class=\"hljs-variable\">olap</span> 表，使用 <span class=\"hljs-built_in\">Hash</span> 分桶，使用列存，相同<span class=\"hljs-variable\">key</span>的记录进行覆盖，<br>创建一个 <span class=\"hljs-variable\">olap</span> 表，使用 <span class=\"hljs-built_in\">Range</span> 分区，使用<span class=\"hljs-built_in\">Hash</span>分桶，默认使用列存，<br>创建一个 <span class=\"hljs-variable\">olap</span> 表，使用 <span class=\"hljs-built_in\">List</span> 分区，使用<span class=\"hljs-built_in\">Hash</span>分桶，默认使用列存，<br>创建一个 <span class=\"hljs-variable\">mysql</span> 表<br>创建一个数据文件存储在<span class=\"hljs-variable\">HDFS</span>上的 <span class=\"hljs-variable\">broker</span> 外部表<span class=\"hljs-operator\">,</span> 数据使用 “<span class=\"hljs-operator\">|</span>” 分割，“\\<span class=\"hljs-variable\">n</span>” 换行<br>创建一张含有<span class=\"hljs-variable\">HLL</span>列的表<br>创建一张含有<span class=\"hljs-type\">BITMAP_UNION</span>聚合类型的表（<span class=\"hljs-variable\">v1</span>和<span class=\"hljs-variable\">v2</span>列的原始数据类型必须是<span class=\"hljs-variable\">TINYINT</span><span class=\"hljs-operator\">,</span><span class=\"hljs-variable\">SMALLINT</span><span class=\"hljs-operator\">,</span><span class=\"hljs-variable\">INT</span>）<br>创建两张支持<span class=\"hljs-variable\">Colocate</span> <span class=\"hljs-built_in\">Join</span>的表<span class=\"hljs-variable\">t1</span> 和<span class=\"hljs-variable\">t2</span><br>创建一个数据文件存储在<span class=\"hljs-variable\">BOS</span>上的 <span class=\"hljs-variable\">broker</span> 外部表<br>创建一个带有<span class=\"hljs-variable\">bitmap</span> 索引的表<br>创建一个动态分区表<span class=\"hljs-punctuation\">(</span>需要在<span class=\"hljs-variable\">FE</span>配置中开启动态分区功能<span class=\"hljs-punctuation\">)</span>，该表每天提前创建<span class=\"hljs-number\">3</span>天的分区，并删除<span class=\"hljs-number\">3</span>天前的分区。例如今天为<span class=\"hljs-number\">2020</span><span class=\"hljs-operator\">-</span><span class=\"hljs-number\">01</span><span class=\"hljs-operator\">-</span><span class=\"hljs-number\">08</span>，则会创建分区名为<span class=\"hljs-variable\">p20200108</span><span class=\"hljs-operator\">,</span> <span class=\"hljs-variable\">p20200109</span><span class=\"hljs-operator\">,</span><br>创建一个带有<span class=\"hljs-variable\">rollup</span>索引的表<br>创建一个内存表<br>创建一个<span class=\"hljs-variable\">hive</span>外部表<br>通过 <span class=\"hljs-type\">replication_allocation</span> 指定表的副本分布<br>创建一个 <span class=\"hljs-variable\">Iceberg</span> 外表<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"五、Doris集群管理\"><a href=\"#五、Doris集群管理\" class=\"headerlink\" title=\"五、Doris集群管理\"></a>五、Doris集群管理</h3><h4 id=\"5-1-配置管理\"><a href=\"#5-1-配置管理\" class=\"headerlink\" title=\"5.1 配置管理\"></a>5.1 配置管理</h4><h5 id=\"5-1-1-FE配置项\"><a href=\"#5-1-1-FE配置项\" class=\"headerlink\" title=\"5.1.1 FE配置项\"></a>5.1.1 FE配置项</h5><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/config/fe-config<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"5-1-2-BE配置项\"><a href=\"#5-1-2-BE配置项\" class=\"headerlink\" title=\"5.1.2 BE配置项\"></a>5.1.2 BE配置项</h5><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/config/be-config<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-2-运维监控\"><a href=\"#5-2-运维监控\" class=\"headerlink\" title=\"5.2 运维监控\"></a>5.2 运维监控</h4><p><strong>监控指标</strong></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">https:<span class=\"hljs-regexp\">//</span>doris.apache.org<span class=\"hljs-regexp\">/zh-CN/</span>docs<span class=\"hljs-regexp\">/admin-manual/m</span>aint-monitor<span class=\"hljs-regexp\">/monitor-metrics/m</span>etrics<br></code></pre></td></tr></table></figure>\n\n<p><strong>磁盘空间管理</strong></p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/maint-monitor/disk-capacity<br></code></pre></td></tr></table></figure>\n\n<p><strong>数据副本管理</strong></p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/maint-monitor/tablet-repair-<span class=\"hljs-keyword\">and</span>-balance<br></code></pre></td></tr></table></figure>\n\n<p><strong>元数据运维</strong></p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/maint-monitor/tablet-repair-<span class=\"hljs-keyword\">and</span>-balance<br><br><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/community/design/metadata-design<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-3-工作负载分析\"><a href=\"#5-3-工作负载分析\" class=\"headerlink\" title=\"5.3 工作负载分析\"></a>5.3 工作负载分析</h4><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/resource-admin/workload-analysis<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-4-SQL拦截\"><a href=\"#5-4-SQL拦截\" class=\"headerlink\" title=\"5.4 SQL拦截\"></a>5.4 SQL拦截</h4><p>sql查询数据超过一定大小拦截，或直接拦截对应sql语句</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/query-admin/sql-interception<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-5-服务自动拉起\"><a href=\"#5-5-服务自动拉起\" class=\"headerlink\" title=\"5.5 服务自动拉起\"></a>5.5 服务自动拉起</h4><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/maint-monitor/automatic-service-start<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-6-OPEN-API使用\"><a href=\"#5-6-OPEN-API使用\" class=\"headerlink\" title=\"5.6 OPEN API使用\"></a>5.6 OPEN API使用</h4><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/open-api/overview<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-7-安全管理\"><a href=\"#5-7-安全管理\" class=\"headerlink\" title=\"5.7 安全管理\"></a>5.7 安全管理</h4><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/auth/authentication-<span class=\"hljs-keyword\">and</span>-authorization<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">#示例<br><span class=\"hljs-keyword\">SHOW</span> <span class=\"hljs-keyword\">ALL</span> GRANTS;<br><span class=\"hljs-keyword\">SHOW</span> GRANTS <span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-string\">&#x27;admin&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span>;<br><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> mysql.<span class=\"hljs-keyword\">user</span>;<br><br>#创建数据库<br><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">DATABASE</span> vota;<br>#创建角色<br><span class=\"hljs-keyword\">show</span> roles;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">ROLE</span> vota_rd <span class=\"hljs-keyword\">COMMENT</span> &quot;vota Read&quot;;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">ROLE</span> vota_rw <span class=\"hljs-keyword\">COMMENT</span> &quot;vota Read and Write Role&quot;;<br>#授予角色权限<br><span class=\"hljs-keyword\">GRANT</span> Select_priv,Load_priv <span class=\"hljs-keyword\">on</span> vota.* <span class=\"hljs-keyword\">to</span> <span class=\"hljs-keyword\">Role</span> <span class=\"hljs-string\">&#x27;vota_rd&#x27;</span>;<br><span class=\"hljs-keyword\">GRANT</span> Select_priv,Load_priv,Alter_priv,Create_priv,Drop_priv <span class=\"hljs-keyword\">on</span> vota.* <span class=\"hljs-keyword\">to</span> <span class=\"hljs-keyword\">Role</span> <span class=\"hljs-string\">&#x27;vota_rw&#x27;</span>;<br>#创建用户<br><span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">user</span> vota;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;vota&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;Vota@126&#x27;</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">ROLE</span> <span class=\"hljs-string\">&#x27;vota_rd&#x27;</span>;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;vota_admin&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;Vota_admin@126&#x27;</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">ROLE</span> <span class=\"hljs-string\">&#x27;vota_rw&#x27;</span>;<br>#密码修改<br><span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">PASSWORD</span> <span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-string\">&#x27;jack&#x27;</span>@<span class=\"hljs-string\">&#x27;192.%&#x27;</span> = <span class=\"hljs-keyword\">PASSWORD</span>(<span class=\"hljs-string\">&#x27;123456&#x27;</span>)<br>#授予用户角色<br><span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-string\">&#x27;vota_rd&#x27;</span> <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">&#x27;vota&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span>;<br><span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-string\">&#x27;vota_rw&#x27;</span> <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">&#x27;vota_admin&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span>;<br>#登录验证<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-8-数据备份恢复\"><a href=\"#5-8-数据备份恢复\" class=\"headerlink\" title=\"5.8 数据备份恢复\"></a>5.8 数据备份恢复</h4><p>表级备份恢复，恢复时需手动创建database，仅支持S3和HDFS备份</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">数据备份：https:<span class=\"hljs-regexp\">//</span>doris.apache.org<span class=\"hljs-regexp\">/zh-CN/</span>docs<span class=\"hljs-regexp\">/admin-manual/</span>data-admin<span class=\"hljs-regexp\">/backup-restore/</span>backup<br>数据恢复：https:<span class=\"hljs-regexp\">//</span>doris.apache.org<span class=\"hljs-regexp\">/zh-CN/</span>docs<span class=\"hljs-regexp\">/admin-manual/</span>data-admin<span class=\"hljs-regexp\">/backup-restore/</span>restore<br>回收站恢复：https:<span class=\"hljs-regexp\">//</span>doris.apache.org<span class=\"hljs-regexp\">/zh-CN/</span>docs<span class=\"hljs-regexp\">/admin-manual/</span>data-admin/recyclebin<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nsis\"><span class=\"hljs-comment\">#查看当前仓库</span><br><span class=\"hljs-literal\">SHOW</span> REPOSITORIES<span class=\"hljs-comment\">;</span><br><span class=\"hljs-comment\">#查看仓库创建语句</span><br><span class=\"hljs-literal\">SHOW</span> CREATE REPOSITORY for &lt;repo_name&gt;<span class=\"hljs-comment\">;</span><br><br><span class=\"hljs-comment\">#创建备份仓库</span><br>CREATE REPOSITORY <span class=\"hljs-string\">`minio_repo`</span><br>WITH S3<br><span class=\"hljs-literal\">ON</span> LOCATION <span class=\"hljs-string\">&quot;s3://doris-backup-bucket/bak&quot;</span><br>PROPERTIES<br>(<br>    <span class=\"hljs-string\">&quot;AWS_ENDPOINT&quot;</span> = <span class=\"hljs-string\">&quot;http://172.16.20.233:9001&quot;</span>,<br>    <span class=\"hljs-string\">&quot;AWS_ACCESS_KEY&quot;</span> = <span class=\"hljs-string\">&quot;admin&quot;</span>,<br>    <span class=\"hljs-string\">&quot;AWS_SECRET_KEY&quot;</span>=<span class=\"hljs-string\">&quot;jzzx123456&quot;</span>,<br>    <span class=\"hljs-string\">&quot;AWS_REGION&quot;</span> = <span class=\"hljs-string\">&quot;REGION&quot;</span>,<br>\t<span class=\"hljs-string\">&quot;use_path_style&quot;</span> = <span class=\"hljs-string\">&quot;true&quot;</span><br>)<span class=\"hljs-comment\">; </span><br><br><br><span class=\"hljs-comment\">#database全量备份</span><br>BACKUP SNAPSHOT destdb.<span class=\"hljs-string\">`destdb_20241225`</span><br>TO example_repo<span class=\"hljs-comment\">;</span><br><br><span class=\"hljs-comment\">#表级恢复</span><br>RESTORE SNAPSHOT testdb.<span class=\"hljs-string\">`snapshot_testdb_20250506`</span><br>FROM <span class=\"hljs-string\">`minio_repo`</span><br><span class=\"hljs-literal\">ON</span><br>(<br>    <span class=\"hljs-string\">`institutional_person_info`</span> AS <span class=\"hljs-string\">`institutional_person_info_bak`</span><br>)<br>PROPERTIES<br>(<br>    <span class=\"hljs-string\">&quot;backup_timestamp&quot;</span>=<span class=\"hljs-string\">&quot;2025-05-06-17-12-40&quot;</span><br>)<span class=\"hljs-comment\">;</span><br><br><br><span class=\"hljs-comment\">#库级恢复</span><br>RESTORE SNAPSHOT destdb.<span class=\"hljs-string\">`restore_label1`</span><br>FROM <span class=\"hljs-string\">`example_repo`</span><br>PROPERTIES<br>(<br>    <span class=\"hljs-string\">&quot;backup_timestamp&quot;</span>=<span class=\"hljs-string\">&quot;2022-04-08-15-52-29&quot;</span><br>)<span class=\"hljs-comment\">;</span><br><br><br><span class=\"hljs-comment\">#单表全量备份</span><br>BACKUP SNAPSHOT testdb.snapshot_sa_code<br>TO minio_repo<br><span class=\"hljs-literal\">ON</span> (sa_code)<br>PROPERTIES (<span class=\"hljs-string\">&quot;type&quot;</span> = <span class=\"hljs-string\">&quot;full&quot;</span>)<span class=\"hljs-comment\">;</span><br><br><span class=\"hljs-comment\">#已存在备份</span><br><span class=\"hljs-literal\">SHOW</span> SNAPSHOT <span class=\"hljs-literal\">ON</span> minio_repo WHERE SNAPSHOT = <span class=\"hljs-string\">&quot;snapshot_sa_code&quot;</span><span class=\"hljs-comment\">;</span><br><br><span class=\"hljs-comment\">#单表恢复</span><br>RESTORE SNAPSHOT test.snapshot_test<br>FROM <span class=\"hljs-string\">`minio_repo`</span><br>PROPERTIES<br>(<br>    <span class=\"hljs-string\">&quot;backup_timestamp&quot;</span>=<span class=\"hljs-string\">&quot;2024-11-14-09-59-33&quot;</span> <br>)<span class=\"hljs-comment\">;</span><br><br><span class=\"hljs-comment\">#查看备份状态</span><br><span class=\"hljs-literal\">show</span> BACKUP\\G<span class=\"hljs-comment\">;</span><br><br><span class=\"hljs-comment\">#取消备份</span><br>CANCEL BACKUP FROM db_name<span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-9-集群升级\"><a href=\"#5-9-集群升级\" class=\"headerlink\" title=\"5.9 集群升级\"></a>5.9 集群升级</h4><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/cluster-management/upgrade<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"六、Doris断电异常问题处理\"><a href=\"#六、Doris断电异常问题处理\" class=\"headerlink\" title=\"六、Doris断电异常问题处理\"></a>六、Doris断电异常问题处理</h3><figure class=\"highlight mizar\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mizar\">doris fe和<span class=\"hljs-keyword\">be</span>节点因物理机断电，异常关闭，无法正常启动。fe节点元数据文件损坏，<span class=\"hljs-keyword\">be</span>节点tablet副本数据损坏且表数据为单副本。<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"6-1-Doris-fe修复\"><a href=\"#6-1-Doris-fe修复\" class=\"headerlink\" title=\"6.1 Doris fe修复\"></a>6.1 Doris fe修复</h4><p>fe节点启动报错，fe meta数据损坏，错误如下图：</p>\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-fe%E6%95%85%E9%9A%9C.png\"></p>\n<h5 id=\"6-1-1-检查fe集群状态\"><a href=\"#6-1-1-检查fe集群状态\" class=\"headerlink\" title=\"6.1.1 检查fe集群状态\"></a>6.1.1 检查fe集群状态</h5><p>确认fe 集群节点正常，确认master节点正常及损坏节点状态</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">show</span> proc <span class=\"hljs-string\">&#x27;/frontends&#x27;</span>\\G;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"6-1-2-fe损坏节点元数据同步\"><a href=\"#6-1-2-fe损坏节点元数据同步\" class=\"headerlink\" title=\"6.1.2 fe损坏节点元数据同步\"></a>6.1.2 fe损坏节点元数据同步</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 停止 FE</span><br>sh bin/stop_fe.sh<br><br><span class=\"hljs-comment\"># 备份 meta 元数据</span><br><span class=\"hljs-built_in\">cp</span> -r doris-meta doris-meta.bak.$(<span class=\"hljs-built_in\">date</span> +%F)<br><br><span class=\"hljs-comment\"># 删除 BDB 持久化目录</span><br><span class=\"hljs-built_in\">rm</span> -rf doris-meta<br><br><span class=\"hljs-comment\"># 重启 FE，节点会重新与 leader 元数据同步</span><br>./bin/start_fe.sh --helper leader_fe_host:edit_log_port --daemon<br><br><span class=\"hljs-comment\">#查看当前FE状态</span><br>show proc <span class=\"hljs-string\">&#x27;/frontends&#x27;</span>\\G;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"6-1-3-FE-正常恢复启动\"><a href=\"#6-1-3-FE-正常恢复启动\" class=\"headerlink\" title=\"6.1.3 FE 正常恢复启动\"></a>6.1.3 FE 正常恢复启动</h5><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\"><span class=\"hljs-string\">./bin/start_fe.sh</span> <span class=\"hljs-params\">--daemon</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"6-2-Doris-be修复\"><a href=\"#6-2-Doris-be修复\" class=\"headerlink\" title=\"6.2 Doris be修复\"></a>6.2 Doris be修复</h4><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">数据副本管理：https:<span class=\"hljs-regexp\">//</span>doris.apache.org<span class=\"hljs-regexp\">/zh-CN/</span>docs<span class=\"hljs-regexp\">/admin-manual/m</span>aint-monitor/tablet-repair-and-balance<br>参考文档：<br>https:<span class=\"hljs-regexp\">//m</span>p.weixin.qq.com<span class=\"hljs-regexp\">/s/</span>bslbn51o4oltV2ATnuABPA<br>https:<span class=\"hljs-regexp\">//</span>doris-forum.org.cn<span class=\"hljs-regexp\">/questions/</span>D1Pw1/zui-jia-shi-jian-shu-ju-fu-ben-wen-ti-pai-cha-zhi-nan<br>https:<span class=\"hljs-regexp\">//</span>blog.csdn.net<span class=\"hljs-regexp\">/S1124654/</span>article<span class=\"hljs-regexp\">/details/</span><span class=\"hljs-number\">133943714</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"6-2-1-问题现象\"><a href=\"#6-2-1-问题现象\" class=\"headerlink\" title=\"6.2.1 问题现象\"></a>6.2.1 问题现象</h5><p><strong>问题日志</strong></p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">Execution failed: <span class=\"hljs-built_in\">Error</span> Failed <span class=\"hljs-keyword\">to</span> execute sql: java.sql.SQLException: (<span class=\"hljs-attribute\">conn</span>=440550) errCode = 2, detailMessage = Failed <span class=\"hljs-keyword\">to</span> <span class=\"hljs-built_in\">get</span> scan range, <span class=\"hljs-literal\">no</span> queryable replica found <span class=\"hljs-keyword\">in</span> tablet: 89273. Reason: Visible Replicas:Visible version: 2, Replicas: [<span class=\"hljs-attribute\">replicaId</span>=89274, <span class=\"hljs-attribute\">backendId</span>=10452, <span class=\"hljs-attribute\">backendAlive</span>=<span class=\"hljs-literal\">true</span>, <span class=\"hljs-attribute\">version</span>=3, <span class=\"hljs-attribute\">lastFailedVersion</span>=4, <span class=\"hljs-attribute\">lastSuccessVersion</span>=3, <span class=\"hljs-attribute\">lastFailedTimestamp</span>=1723617079544, <span class=\"hljs-attribute\">state</span>=NORMAL].<br><br><br>failed <span class=\"hljs-keyword\">to</span> make snapshot|<span class=\"hljs-attribute\">tablet_id</span>=20176804|schema_hash=1673275255|error=[INTERNAL_ERROR]fail <span class=\"hljs-keyword\">to</span> <span class=\"hljs-built_in\">find</span> path <span class=\"hljs-keyword\">in</span> version_graph. spec_version: 0-81741<br></code></pre></td></tr></table></figure>\n\n<p><strong>问题说明</strong></p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\">查询时，FE让BE返回spec_<span class=\"hljs-keyword\">version</span>范围的数据，但是BE缺部分<span class=\"hljs-keyword\">version</span>了，就会报这个错误；<br></code></pre></td></tr></table></figure>\n\n<p><strong>问题原因</strong></p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">迁移副本过程可能丢<span class=\"hljs-keyword\">version</span>，在<span class=\"hljs-number\">2.0</span>.<span class=\"hljs-number\">3</span>修复了，或者在数据导入过程中<span class=\"hljs-keyword\">be</span>宕机。 <br></code></pre></td></tr></table></figure>\n\n<p><strong>注意:</strong> 如果版本是2.0.1及以前，且它的所有副本last failed version &gt; 0，通常需要重新建表进行导数。</p>\n<h5 id=\"6-2-2-问题定位\"><a href=\"#6-2-2-问题定位\" class=\"headerlink\" title=\"6.2.2 问题定位\"></a><strong>6.2.2 问题定位</strong></h5><p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-be%E6%95%85%E9%9A%9C.webp\"></p>\n<p>如上图所示，查询报错的 tablet_id 是 606202， BE ip是 10.xxx， BE 需要包含version 区间 [0 - 35]。 </p>\n<p>当确定异常tablet_id时，参考如下步骤先进行问题信息收集：</p>\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-be%E6%95%85%E9%9A%9C-1.webp\"></p>\n<p><strong>1. 获取异常tablet的详细信息</strong></p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-comment\">-- 这里是606202，拿到detail cmd</span><br><span class=\"hljs-keyword\">show</span> tablet &#123;tablet_id&#125; <br></code></pre></td></tr></table></figure>\n\n<p><strong>2. 执行DetailCmd</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">SHOW</span> PROC &#x27; /dbs/<span class=\"hljs-number\">10113</span>/<span class=\"hljs-number\">591325</span>/partitions/<span class=\"hljs-number\">606195</span>/<span class=\"hljs-number\">591326</span>/<span class=\"hljs-number\">606202</span><span class=\"hljs-string\">&quot;;</span><br></code></pre></td></tr></table></figure>\n\n<p>找出该BE所在的副本（CompactionStatus url中包含有该BE的ip），如果BackendId等字段显示为-1，说明该tabelt可能已经自动修复或迁移了。</p>\n<p><strong>3. 执行curl&lt;步骤2的CompactionStatus url&gt;(或在浏览器打开该url)</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span>  http://<span class=\"hljs-number\">10</span>.xxx:<span class=\"hljs-number\">8040</span>/api/compaction/show?tablet_id=<span class=\"hljs-number\">606202</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-be%E6%95%85%E9%9A%9C-2.webp\"></p>\n<p>查看该副本的rowset 和 missing_rowset，重点看rowset 的最大版本（这里是34）和 missing_rowsets。从上图可以看出该副本的rowset 为 0 ~ 34， 且中间不缺version(missing_rowsets为空)。而查询语句中是 special  version 是 [0, 35]， 但该BE不含version 35。所以需要给该BE补上version 35。 </p>\n<p><strong>注意</strong>：这里的special version实际就是partition的visible version。它也可以通过如下指令查看。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">show</span> partitions <span class=\"hljs-keyword\">from</span> &lt;<span class=\"hljs-keyword\">table</span>-<span class=\"hljs-type\">name</span> xxx&gt; <span class=\"hljs-keyword\">where</span> PartitionName = <span class=\"hljs-string\">&#x27;&lt;partition name xxx&gt;&#x27;</span> <br></code></pre></td></tr></table></figure>\n\n<h5 id=\"6-2-3-问题处理\"><a href=\"#6-2-3-问题处理\" class=\"headerlink\" title=\"6.2.3 问题处理\"></a>6.2.3 问题处理</h5><p><strong>临时规避方案</strong></p>\n<p>执行下面命令可恢复查询，如果需要全局设置，可以加上 <strong>global</strong> 关键字</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">show variables like <span class=\"hljs-string\">&#x27;%skip%&#x27;</span>;<br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-attribute\">skip_missing_version</span>=<span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-attribute\">skip_bad_tablet</span>=<span class=\"hljs-literal\">true</span>;<br></code></pre></td></tr></table></figure>\n\n<p><strong>1. 确认是否自动修复</strong></p>\n<p>由于doris内部会自动做数据均衡和修复，所以当出现数据副本异常时，先确认异常数据副本能否自动修复：</p>\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-be%E6%95%85%E9%9A%9C-3.webp\"></p>\n<p>如果是多副本，查看是否存在健康副本。健康副本是指副本version &gt;&#x3D; special version &amp;&amp; last failed version &#x3D; -1 &amp;&amp; isBad &#x3D; false， 且curl 它的 CompactionStatus， missing rowsets 为空。 </p>\n<p>如果存在这样的副本，把查询报错的副本set bad，如上图所示BackendId为10003上版本远落后于其他两个副本的version，可以通过设置为bad来自动修复。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">ADMIN</span> <span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">REPLICA</span> STATUS PROPERTIES(&quot;tablet_id&quot; = &quot;7552021&quot;, &quot;backend_id&quot; = &quot;10003&quot;, &quot;status&quot; = &quot;bad&quot;);<br></code></pre></td></tr></table></figure>\n\n<p>等待一会（可能需要一两分钟），再执行步骤2中的DetailCmd，如果副本都健康了：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\"><span class=\"hljs-built_in\">version</span> &gt;= special <span class=\"hljs-built_in\">version</span> &amp;&amp; <span class=\"hljs-keyword\">last</span> failed <span class=\"hljs-built_in\">version</span> = <span class=\"hljs-number\">-1</span> &amp;&amp; isBad = <span class=\"hljs-literal\">false</span><br></code></pre></td></tr></table></figure>\n\n<p>且curl它的CompactionStatus,  missing rowsets为空，说明修补OK了。且执行select count (*) from table_xx 是否OK。 </p>\n<p>如果没问题，就自动修复完成了，不用往下看。如果还是有问题，接着往下看。</p>\n<p><strong>2. 重新导数手动修复</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">如果是多个副本都损坏，并且是分区表的情况下，可以删除这个分区，然后手动重建这个分区，重新导入数据即可。<br><br>如果是多个副本都损坏，并且是非分区表的情况下，只能删除这个表重新导入数据。<br></code></pre></td></tr></table></figure>\n\n<p><strong>3. 填充空副本进行修复</strong></p>\n<p><strong>注意</strong>：以上两个方法可以恢复丢失的数据，而填充空副本方法，是插入若干个空rowset，它能恢复读写。但如果丢失的rowset是包含数据的，这种方法实质是丢数据的。单副本修复方法</p>\n<p>空副本修复方式如下：</p>\n<p>1️⃣ <strong>自动修复</strong></p>\n<p>可以先通过 <code>SHOW FRONTEND CONFIG;</code> 命令查看当前版本是否支持该参数。</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">ADMIN <span class=\"hljs-built_in\">SET</span> FRONTEND<span class=\"hljs-built_in\"> CONFIG </span>(<span class=\"hljs-string\">&quot;recover_with_empty_tablet&quot;</span> = <span class=\"hljs-string\">&quot;true&quot;</span>);<br></code></pre></td></tr></table></figure>\n\n<p>2️⃣ <strong>手动修复</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span>  http://<span class=\"hljs-number\">10</span>.xxx:<span class=\"hljs-number\">8040</span>/api/compaction/show?tablet_id=<span class=\"hljs-number\">606202</span><br><span class=\"hljs-attribute\">curl</span> -X POST <span class=\"hljs-string\">&quot;http://10.xxx:8040/api/pad_rowset?tablet_id=606202&amp;start_version=35&amp;end_version=35&quot;</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>异常tablet_id</li>\n<li>start_version 起始版本</li>\n<li>end_version 终止版本</li>\n</ul>\n<p>该功能用于使用一个空的 rowset 填充损坏的副本。这个例子中修补的url中 start_version &#x3D; 35,  end_version &#x3D; 35。 </p>\n<p>这个例子只是缺一个rowset， 实际中可能缺多个（missing rowset，最大version + 1 ~ special version），例如查询中的max_version是9527，但是步骤3查询中数据的最后一行rowsets是[45-9520] 1 DATA …，需要修补的就是9521～9527。 </p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">curl</span> -X POST <span class=\"hljs-string\">&quot;http://10.151.2.29:8040/api/pad_rowset?tablet_id=606202&amp;start_version=9521&amp;end_version=9527&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>修补完之后，再执行下show tablet xxx，该副本last fail version 是否等于 -1，如果它的version都补上了，但是last fail version &#x3D; version + 1， 还需要手工执行把last fail version 改成 -1：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">ADMIN</span> <span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">REPLICA</span> <span class=\"hljs-keyword\">VERSION</span> PROPERTIES(&quot;tablet_id&quot; = &quot;10003&quot;, &quot;backend_id&quot; = &quot;10001&quot;, &quot;last_failed_version&quot; = &quot;-1&quot;); <br></code></pre></td></tr></table></figure>\n\n<p>低版本的doris可能不含这个SQL， 如果不支持这个SQL且是单副本的，通常需要重新建表进行导数。 </p>\n<p>如果没问题，使用：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">select</span> count(*) <span class=\"hljs-keyword\">from</span> &#123;<span class=\"hljs-keyword\">table</span>&#125;;<br><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> &#123;<span class=\"hljs-keyword\">table</span>&#125;;<br></code></pre></td></tr></table></figure>\n\n<p>查看是否可读，可读则说明数据副本问题已处理。</p>\n<p><strong>FAQ</strong></p>\n<p>如果有用户不小心把end_version调大了一轮，spec_version比max_version小，查询可能会出现如下报错</p>\n<figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xquery\">[CANCELLED]missed versions <span class=\"hljs-literal\">is</span><span class=\"hljs-built_in\"> empty</span>, spec_version <span class=\"hljs-number\">307566</span>, max_version <span class=\"hljs-number\">307567</span> tablet<span class=\"hljs-built_in\"> id</span> <span class=\"hljs-number\">11423</span><br></code></pre></td></tr></table></figure>\n\n<p>可以通过指定副本为bad，或者往这个分区导入数据，如果还不行的话可以使用ADMIN-SET-PARTITION-VERSION来指定version。先通过下面这个命令来查看对应分区的<strong>PartitionId</strong>和<strong>VisibleVersion</strong>版本是多少</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">show</span> partitions <span class=\"hljs-keyword\">from</span> &lt;<span class=\"hljs-keyword\">table</span>-<span class=\"hljs-type\">name</span> xxx&gt; <br></code></pre></td></tr></table></figure>\n\n<p>然后使用<strong>ADMIN-SET-PARTITION-VERSION</strong>来指定version为当前的<strong>max_version</strong>。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">ADMIN</span> <span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">TABLE</span> tbl1 <span class=\"hljs-keyword\">PARTITION</span> <span class=\"hljs-keyword\">VERSION</span> PROPERTIES(&quot;partition_id&quot; = &quot;1769152&quot;, &quot;visible_version&quot; = &quot;307567&quot;); <br></code></pre></td></tr></table></figure>\n\n<h5 id=\"6-2-4-数据验证\"><a href=\"#6-2-4-数据验证\" class=\"headerlink\" title=\"6.2.4 数据验证\"></a>6.2.4 数据验证</h5><p>查看副本健康</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\"><span class=\"hljs-keyword\">SHOW</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">PROC</span> &#x27;/<span class=\"hljs-title\">cluster_health</span>/<span class=\"hljs-title\">tablet_health</span>&#x27;</span>;<br></code></pre></td></tr></table></figure>\n\n<p>若数据可以查询，但依旧存在坏副本，可以备份数据，重新进行表数据初始化</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> test_bak <span class=\"hljs-keyword\">as</span> <span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> test;<br><span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">table</span> test;<br><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> test_bak <span class=\"hljs-keyword\">rename</span> test;<br></code></pre></td></tr></table></figure>\n\n<p>验证副本健康</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\"><span class=\"hljs-keyword\">SHOW</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">PROC</span> &#x27;/<span class=\"hljs-title\">cluster_health</span>/<span class=\"hljs-title\">tablet_health</span>&#x27;</span>;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"七、常见问题\"><a href=\"#七、常见问题\" class=\"headerlink\" title=\"七、常见问题\"></a>七、常见问题</h3><h4 id=\"7-1-什么是-priority-networks\"><a href=\"#7-1-什么是-priority-networks\" class=\"headerlink\" title=\"7.1 什么是 priority_networks?\"></a>7.1 什么是 priority_networks?</h4><p>Doris 进程监听 IP 的 CIDR 格式表示的网段。如果部署的机器只有一个网段，可以不用配置。如果有两个或多个网段，务必做配置。</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs armasm\">这个参数主要用于帮助系统选择正确的网卡 <span class=\"hljs-built_in\">IP</span> 作为自己的监听 <span class=\"hljs-built_in\">IP</span>。比如需要监听的 <span class=\"hljs-built_in\">IP</span> 为 <span class=\"hljs-number\">192</span>.<span class=\"hljs-number\">168</span>.<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">1</span>，则可以设置 priority_networks<span class=\"hljs-number\">=192</span>.<span class=\"hljs-number\">168</span>.<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">0</span>/<span class=\"hljs-number\">24</span>，系统会自动扫描机器上的所有 <span class=\"hljs-built_in\">IP</span>，只有匹配上 <span class=\"hljs-number\">192</span>.<span class=\"hljs-number\">168</span>.<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">0</span>/<span class=\"hljs-number\">24</span> 这个网段的才会去作为服务监听地址。这个参数也可以配置多个 CIDR 网段，比如 priority_networks = <span class=\"hljs-number\">10</span>.<span class=\"hljs-number\">10</span>.<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">0</span>/<span class=\"hljs-number\">16</span><span class=\"hljs-comment\">; 192.168.0.0/24。</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"7-2-通过-Web-UI-无法修改-root-密码\"><a href=\"#7-2-通过-Web-UI-无法修改-root-密码\" class=\"headerlink\" title=\"7.2 通过 Web UI 无法修改 root 密码\"></a>7.2 通过 Web UI 无法修改 root 密码</h4><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">当前内置的 Web 控制台，还不能执行 <span class=\"hljs-keyword\">SET</span> 类型的 <span class=\"hljs-keyword\">SQL</span> 语句，所以，在 Web 控制台，当前还不能通过执行 <span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">PASSWORD</span> <span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-string\">&#x27;root&#x27;</span> = <span class=\"hljs-keyword\">PASSWORD</span>(<span class=\"hljs-string\">&#x27;your_password&#x27;</span>) `类似语句来修改 root 的密码，可以通过 MySQL Client 来修改 root 账户的密码。<br></code></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<h3 id=\"一、-Doris简介\"><a href=\"#一、-Doris简介\" class=\"headerlink\" title=\"一、 Doris简介\"></a>一、 Doris简介</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">Doris 中文官方文档：https:<span class=\"hljs-regexp\">//</span>doris.apache.org<span class=\"hljs-regexp\">/zh-CN/</span>docs<span class=\"hljs-regexp\">/dev/</span>summary/basic-summary<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1-1-Doris概述\"><a href=\"#1-1-Doris概述\" class=\"headerlink\" title=\"1.1 Doris概述\"></a>1.1 Doris概述</h4><figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tap\"> Apache Doris 是一个基于 MPP 架构的高性能、实时的分析型数据库，以极速易用的特点被人们所熟知，仅需亚秒级响应时间即可返回海量数据下的查询结果，不仅可以支持高并发的点查询场景，也能支持高吞吐的复杂分析场景。基于此，Apache Doris 能够较好的满足报表分析、即席查询、统一数仓构建、数据湖联邦查询加速等使用场景，用户可以在此之上构建用户行为分析、AB 实验平台、日志检索分析、用户画像分析、订单分析等应用<br><br>​ Apache Doris 最早是诞生于百度广告报表业务的 Palo 项目，2017 年正式对外开源，2018 年<span class=\"hljs-number\"> 7 </span>月由百度捐赠给 Apache 基金会进行孵化，之后在 Apache 导师的指导下由孵化器项目管理委员会成员进行孵化和运营。目前 Apache Doris 社区已经聚集了来自不同行业数百家企业的<span class=\"hljs-number\"> 400 </span>余位贡献者，并且每月活跃贡献者人数也超过<span class=\"hljs-number\"> 100 </span>位。<span class=\"hljs-number\"> 2022 </span>年<span class=\"hljs-number\"> 6 </span>月，Apache Doris 成功从 Apache 孵化器毕业，正式成为 Apache 顶级项目（Top-Level Project，TLP）<br><br>​ Apache Doris 如今在中国乃至全球范围内都拥有着广泛的用户群体，截止目前， Apache Doris 已经在全球超过<span class=\"hljs-number\"> 2000 </span>家企业的生产环境中得到应用，在中国市值或估值排行前<span class=\"hljs-number\"> 50 </span>的互联网公司中，有超过 80% 长期使用 Apache Doris，包括百度、美团、小米、京东、字节跳动、腾讯、网易、快手、微博、贝壳等。同时在一些传统行业如金融、能源、制造、电信等领域也有着丰富的应用<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1-2-Doris使用场景\"><a href=\"#1-2-Doris使用场景\" class=\"headerlink\" title=\"1.2 Doris使用场景\"></a>1.2 Doris使用场景</h4><p>Doris数据库是一个分布式列式存储和查询系统，主要用于实时分析和查询海量数据。它适用于以下场景：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">1.实时分析：Doris数据库可以快速查询和分析海量数据，支持实时查询和聚合操作，可以帮助企业快速做出决策并调整业务策略。<br><br>2.大数据仓库：Doris数据库可以作为企业的数据仓库，存储大规模的数据，并提供高效的查询和分析能力，帮助企业更好地理解和利用数据。<br><br>3.日志存储和分析：Doris数据库可以快速存储和分析实时生成的日志数据，支持实时查询和聚合操作，帮助企业及时发现和解决问题。<br><br>4.金融数据分析：Doris数据库可以存储和分析金融相关的大规模数据，如证券交易数据、客户信息等，帮助金融机构更好地理解市场趋势、客户需求等信息<br><br>Doris数据库适用于需要处理海量数据、需要实时查询和分析数据的场景。<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-Doris架构\"><a href=\"#1-3-Doris架构\" class=\"headerlink\" title=\"1.3 Doris架构\"></a>1.3 Doris架构</h4><p>Doris整体架构如下图所示，Doris 架构非常简单，只有两类进程</p>\n<p><img src=\"/images/Doris.png\"></p>\n<p><strong>Frontend（FE）</strong></p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">主要负责用户请求的接入、查询解析规划、元数据的管理、节点管理相关工作，并将请求转发给对应的Backend进行处理。Frontend还负责了Doris集群的负载均衡和故障转移等功能<br><br>主要有三个角色：<br>（<span class=\"hljs-number\">1</span>）Leader 和Follower：主要是用来达到元数据的高可用，保证单节点宕机的情况下，元数据能够实时地在线恢复，而不影响整个服务。<br>（<span class=\"hljs-number\">2</span>）Observer：用来扩展查询节点，同时起到元数据备份的作用。如果在发现集群压力非常大的情况下，需要去扩展整个查询的能力，那么可以加 observer 的节点。observer 不参与任何的写入，只参与读取。<br><br>用于fe非<span class=\"hljs-literal\">master</span>节点同步元数据。doris只有<span class=\"hljs-literal\">master</span>节点才能写fe元数据，其他fe节点写元数据的操作都会转发到<span class=\"hljs-literal\">master</span>节点。在<span class=\"hljs-literal\">master</span>完成元数据写入操作后，非<span class=\"hljs-literal\">master</span>节点replay元数据会有短暂的延迟，可以使用该语句同步元数据<br></code></pre></td></tr></table></figure>\n\n<p><strong>Backend（BE）</strong></p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">主要负责数据存储、查询计划的执行<br><br>数据的可靠性由 <span class=\"hljs-keyword\">BE </span>保证，<span class=\"hljs-keyword\">BE </span>会对整个数据存储多副本或者是三副本。副本数可根据需求动态调整<br></code></pre></td></tr></table></figure>\n\n<p> Frontend（FE）和 Backend（BE）这两类进程都是可以横向扩展的，单集群可以支持到数百台机器，数十 PB 的存储容量。并且这两类进程通过一致性协议来保证服务的高可用和数据的高可靠。这种高度集成的架构设计极大的降低了一款分布式系统的运维成本</p>\n<p><strong>MySQL Client</strong></p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\">Doris借助MySQL协议，用户使用任意MySQL的<span class=\"hljs-keyword\">ODBC</span>/JDBC以及MySQL的客户端，都可以直接访问Doris<br></code></pre></td></tr></table></figure>\n\n<p><strong>broker</strong></p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-keyword\">Broker </span>是 Doris 集群中一种可选进程，主要用于支持 Doris 读写远端存储上的文件和目录，如 HDFS、<span class=\"hljs-keyword\">BOS </span>和 AFS 等<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"二、Doris安装和部署\"><a href=\"#二、Doris安装和部署\" class=\"headerlink\" title=\"二、Doris安装和部署\"></a>二、Doris安装和部署</h3><h4 id=\"2-1-Doris安装环境要求\"><a href=\"#2-1-Doris安装环境要求\" class=\"headerlink\" title=\"2.1 Doris安装环境要求\"></a>2.1 Doris安装环境要求</h4><h5 id=\"2-1-1-Linux-操作系统版本需求\"><a href=\"#2-1-1-Linux-操作系统版本需求\" class=\"headerlink\" title=\"2.1.1 Linux 操作系统版本需求\"></a>2.1.1 Linux 操作系统版本需求</h5><table>\n<thead>\n<tr>\n<th align=\"center\">Linux 系统</th>\n<th align=\"center\">版本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">CentOS</td>\n<td align=\"center\">7.1 及以上</td>\n</tr>\n</tbody></table>\n<h5 id=\"2-1-2-软件需求\"><a href=\"#2-1-2-软件需求\" class=\"headerlink\" title=\"2.1.2 软件需求\"></a>2.1.2 软件需求</h5><table>\n<thead>\n<tr>\n<th align=\"center\">软件</th>\n<th align=\"center\">版本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Java</td>\n<td align=\"center\">1.8 及以上</td>\n</tr>\n<tr>\n<td align=\"center\">GCC</td>\n<td align=\"center\">4.8.2 及以上</td>\n</tr>\n</tbody></table>\n<h5 id=\"2-1-3-Linux文件系统\"><a href=\"#2-1-3-Linux文件系统\" class=\"headerlink\" title=\"2.1.3 Linux文件系统\"></a>2.1.3 Linux文件系统</h5><p>ext4和xfs文件系统均支持</p>\n<h5 id=\"2-1-4-机器配置-生产环境\"><a href=\"#2-1-4-机器配置-生产环境\" class=\"headerlink\" title=\"2.1.4 机器配置( 生产环境 )\"></a>2.1.4 机器配置( 生产环境 )</h5><table>\n<thead>\n<tr>\n<th align=\"center\">模块</th>\n<th align=\"center\">CPU</th>\n<th align=\"center\">内存</th>\n<th align=\"center\">磁盘</th>\n<th align=\"center\">网络</th>\n<th align=\"center\">实例数量（最低要求）</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Frontend</td>\n<td align=\"center\">16核+</td>\n<td align=\"center\">64GB+</td>\n<td align=\"center\">SSD 或 RAID 卡，100GB+ *</td>\n<td align=\"center\">万兆网卡</td>\n<td align=\"center\">1-3 *</td>\n</tr>\n<tr>\n<td align=\"center\">Backend</td>\n<td align=\"center\">16核+</td>\n<td align=\"center\">64GB+</td>\n<td align=\"center\">SSD 或 SATA，100G+ *</td>\n<td align=\"center\">万兆网卡</td>\n<td align=\"center\">3 *</td>\n</tr>\n</tbody></table>\n<h5 id=\"2-1-5-端口预留\"><a href=\"#2-1-5-端口预留\" class=\"headerlink\" title=\"2.1.5 端口预留\"></a>2.1.5 端口预留</h5><table>\n<thead>\n<tr>\n<th align=\"center\">实例名称</th>\n<th align=\"center\">端口名称</th>\n<th align=\"center\">默认端口</th>\n<th align=\"center\">通讯方向</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">BE</td>\n<td align=\"center\">be_prot</td>\n<td align=\"center\">9060</td>\n<td align=\"center\">FE–&gt;BE</td>\n<td align=\"center\">BE上thrift server的端口用于接收来自FE 的请求</td>\n</tr>\n<tr>\n<td align=\"center\">BE</td>\n<td align=\"center\">webserver_port</td>\n<td align=\"center\">8040</td>\n<td align=\"center\">BE&lt;–&gt;FE</td>\n<td align=\"center\">BE上的http server端口</td>\n</tr>\n<tr>\n<td align=\"center\">BE</td>\n<td align=\"center\">heartbeat_service_port</td>\n<td align=\"center\">9050</td>\n<td align=\"center\">FE–&gt;BE</td>\n<td align=\"center\">BE上心跳服务端口用于接收来自FE的心跳</td>\n</tr>\n<tr>\n<td align=\"center\">BE</td>\n<td align=\"center\">brpc_prot*</td>\n<td align=\"center\">8060</td>\n<td align=\"center\">FE&lt;–&gt;BEBE&lt;–&gt;BE</td>\n<td align=\"center\">BE上的brpc端口用于BE之间通信</td>\n</tr>\n<tr>\n<td align=\"center\">FE</td>\n<td align=\"center\">http_port</td>\n<td align=\"center\">8030</td>\n<td align=\"center\">FE&lt;–&gt;FE用户&lt;–&gt; FE</td>\n<td align=\"center\">FE上的http_server端口</td>\n</tr>\n<tr>\n<td align=\"center\">FE</td>\n<td align=\"center\">rpc_port</td>\n<td align=\"center\">9020</td>\n<td align=\"center\">BE–&gt;FEFE&lt;–&gt;FE</td>\n<td align=\"center\">FE上thirt server端口号</td>\n</tr>\n<tr>\n<td align=\"center\">FE</td>\n<td align=\"center\">query_port</td>\n<td align=\"center\">9030</td>\n<td align=\"center\">用户&lt;–&gt; FE</td>\n<td align=\"center\">FE上的mysql server端口</td>\n</tr>\n<tr>\n<td align=\"center\">FE</td>\n<td align=\"center\">edit_log_port</td>\n<td align=\"center\">9010</td>\n<td align=\"center\">FE&lt;–&gt;FE</td>\n<td align=\"center\">FE上bdbje之间通信用的端口</td>\n</tr>\n<tr>\n<td align=\"center\">Broker</td>\n<td align=\"center\">broker_ipc_port</td>\n<td align=\"center\">8000</td>\n<td align=\"center\">FE–&gt;BROKERBE–&gt;BROKER</td>\n<td align=\"center\">Broker上的thrift server用于接收请求</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">端口部署可以更改，表中为官方版本各组件的默认端口<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-1-6-部署常见的注意事项\"><a href=\"#2-1-6-部署常见的注意事项\" class=\"headerlink\" title=\"2.1.6 部署常见的注意事项\"></a>2.1.6 部署常见的注意事项</h5><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">（<span class=\"hljs-number\">1</span>）FE的磁盘空间主要用于存储元数据，包括日志和image。通常从几百MB到几个GB不等。<br><br>（<span class=\"hljs-number\">2</span>）<span class=\"hljs-keyword\">BE的磁盘空间主要用于存放用户数据，总磁盘空间按用户总数据量* </span><span class=\"hljs-number\">3</span>（<span class=\"hljs-number\">3</span>副本）计算，然后再预留额外<span class=\"hljs-number\">40</span>%的空间用作后台compaction以及一些中间数据的存放。<br><br>（<span class=\"hljs-number\">3</span>）一台机器上可以部署多个<span class=\"hljs-keyword\">BE实例，但是只能部署一个 </span>FE。如果需要 <span class=\"hljs-number\">3</span> 副本数据，那么至少需要 <span class=\"hljs-number\">3</span> 台机器各部署一个<span class=\"hljs-keyword\">BE实例（而不是1台机器部署3个BE实例）。多个FE所在服务器的时钟必须保持一致（允许最多5秒的时钟偏差）</span><br><span class=\"hljs-keyword\"></span><br>（<span class=\"hljs-number\">4</span>）测试环境也可以仅适用一个<span class=\"hljs-keyword\">BE进行测试。实际生产环境，BE实例数量直接决定了整体查询延迟。</span><br><span class=\"hljs-keyword\"></span><br>（<span class=\"hljs-number\">5</span>）所有部署节点关闭<span class=\"hljs-keyword\">Swap。</span><br><span class=\"hljs-keyword\"></span><br>（<span class=\"hljs-number\">6</span>）FE节点数据至少为<span class=\"hljs-number\">1</span>（<span class=\"hljs-number\">1</span>个Follower）。当部署<span class=\"hljs-number\">1</span>个Follower和<span class=\"hljs-number\">1</span>个Observer时，可以实现读高可用。当部署<span class=\"hljs-number\">3</span>个Follower时，可以实现读写高可用（HA）。<br><br>（<span class=\"hljs-number\">7</span>）Follower的数量必须为奇数，Observer 数量随意。<br><br>（<span class=\"hljs-number\">8</span>）根据以往经验，当集群可用性要求很高时（比如提供在线业务），可以部署<span class=\"hljs-number\">3</span>个 Follower和<span class=\"hljs-number\">1</span><span class=\"hljs-number\">-3</span>个Observer。如果是离线业务，建议部署<span class=\"hljs-number\">1</span>个Follower和<span class=\"hljs-number\">1</span><span class=\"hljs-number\">-3</span>个Observer。<br><br>（<span class=\"hljs-number\">9</span>）<span class=\"hljs-keyword\">Broker是用于访问外部数据源（如HDFS）的进程。通常，在每台机器上部署一个 </span><span class=\"hljs-keyword\">broker实例即可。</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-Doris集群部署\"><a href=\"#2-2-Doris集群部署\" class=\"headerlink\" title=\"2.2 Doris集群部署\"></a>2.2 Doris集群部署</h4><h5 id=\"2-2-1-机器规划\"><a href=\"#2-2-1-机器规划\" class=\"headerlink\" title=\"2.2.1 机器规划\"></a>2.2.1 机器规划</h5><table>\n<thead>\n<tr>\n<th>实例名称</th>\n<th>服务IP</th>\n<th>机器资源</th>\n<th>部署路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>FE(LEADER)</td>\n<td>172.16.20.239</td>\n<td>8c8g50g</td>\n<td>&#x2F;data</td>\n</tr>\n<tr>\n<td>BE</td>\n<td>172.16.20.105</td>\n<td>8c16g100g</td>\n<td>&#x2F;data</td>\n</tr>\n<tr>\n<td>BE</td>\n<td>172.16.20.73</td>\n<td>8c16g100g</td>\n<td>&#x2F;data</td>\n</tr>\n<tr>\n<td>BE</td>\n<td>172.16.20.144</td>\n<td>8c16g100g</td>\n<td>&#x2F;data</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">生产环境建议 FE 和 <span class=\"hljs-keyword\">BE </span>分开<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-2-安装包准备\"><a href=\"#2-2-2-安装包准备\" class=\"headerlink\" title=\"2.2.2 安装包准备\"></a>2.2.2 安装包准备</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">官方下载地址：https://doris.apache.org/download<br><br>注意：查看服务器是否支持 CPU Model ：avx2<br><span class=\"hljs-built_in\">cat</span> /proc/cpuinfo | grep avx2<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-%E4%B8%8B%E8%BD%BD.png\"></p>\n<figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tcl\"> 如果CPU不支持avx2指令集，请选择无avx2版本。您可以通过cat /<span class=\"hljs-keyword\">proc</span>/cpuinfo检查是否支持。avx2指令将提高诸如布隆过滤器之类的数据结构的计算效率<br>​ 支持avx2 可以下载X86(<span class=\"hljs-title\"> avx2</span> ) , 不支持avx2 可以下载X86(<span class=\"hljs-title\"> no</span> avx2 )<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-3-下载安装包\"><a href=\"#2-2-3-下载安装包\" class=\"headerlink\" title=\"2.2.3 下载安装包\"></a>2.2.3 下载安装包</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-comment\">#部署安装2.1.4版本</span><br><span class=\"hljs-attribute\">wget</span> https://apache-doris-releases.oss-accelerate.aliyuncs.com/apache-doris-<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">4</span>-bin-x64.tar.gz<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-4-安装Java和gcc环境\"><a href=\"#2-2-4-安装Java和gcc环境\" class=\"headerlink\" title=\"2.2.4 安装Java和gcc环境\"></a>2.2.4 安装Java和gcc环境</h5><p>因java和gcc都为常用环境，如没有需自行安装</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-comment\"># java版本信息查看</span><br>[wangting@hdt-dmcp-ops01 ~]$ <span class=\"hljs-keyword\">java </span>-version<br><span class=\"hljs-keyword\">java </span>version <span class=\"hljs-string\">&quot;1.8.0_212&quot;</span><br><span class=\"hljs-keyword\">Java(TM) </span>SE Runtime Environment (<span class=\"hljs-keyword\">build </span><span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">8</span>.<span class=\"hljs-number\">0</span>_212-<span class=\"hljs-keyword\">b10)</span><br><span class=\"hljs-keyword\"></span><span class=\"hljs-keyword\">Java </span>HotSpot(TM) <span class=\"hljs-number\">64</span>-<span class=\"hljs-keyword\">Bit </span>Server VM (<span class=\"hljs-keyword\">build </span><span class=\"hljs-number\">25</span>.<span class=\"hljs-number\">212</span>-<span class=\"hljs-keyword\">b10, </span>mixed mode)<br><span class=\"hljs-comment\"># gcc版本信息查看</span><br>[wangting@hdt-dmcp-ops01 ~]$ gcc --version<br>gcc (GCC) <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">8</span>.<span class=\"hljs-number\">5</span> <span class=\"hljs-number\">20150623</span> (Red Hat <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">8</span>.<span class=\"hljs-number\">5</span><span class=\"hljs-number\">-44</span>)<br>Copyright (C) <span class=\"hljs-number\">2015</span> Free Software Foundation, Inc.<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-5-设置系统文件句柄数\"><a href=\"#2-2-5-设置系统文件句柄数\" class=\"headerlink\" title=\"2.2.5 设置系统文件句柄数\"></a>2.2.5 设置系统文件句柄数</h5><p>系统文件句柄</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gams\">[wangting@hdt-dmcp-ops01 doris]<span class=\"hljs-symbol\">$</span> sudo vim /etc/security/limits.conf<br># End of <span class=\"hljs-keyword\">file</span><br><br><span class=\"hljs-comment\">* soft nofile 65536</span><br><span class=\"hljs-comment\">* hard nofile 131072</span><br><span class=\"hljs-comment\">* soft nproc 2048</span><br><span class=\"hljs-comment\">* hard nproc 65536</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livecodeserver\">在操作系统中，每个进程都有一个打开文件句柄的限制，它限制了进程能够同时打开的文件数。这个限制对于一些需要同时处理大量文件的应用程序来说可能会成为瓶颈。因此，可以通过修改系统最大打开文件句柄数来提高应用程序的性能。<br><br>具体来说，增加最大打开文件句柄数可以：<br><br>  提高服务器的并发性能：如果你的服务器需要同时处理大量的网络连接和文件 I/O 操作，那么增加最大打开文件句柄数可以提高服务器的并发性能，从而降低响应时间和延迟。<br>  提高数据库性能：一些数据库软件如 MySQL，需要在处理大量的数据时打开大量的文件句柄，增加最大打开文件句柄数可以提高数据库的性能。<br>  解决程序打开文件失败的问题：如果你的程序在运行时出现 “too many <span class=\"hljs-built_in\">open</span> <span class=\"hljs-built_in\">files</span>” 的错误，那么增加最大打开文件句柄数可以解决这个问题。<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-6-关闭-swap-分区\"><a href=\"#2-2-6-关闭-swap-分区\" class=\"headerlink\" title=\"2.2.6 关闭 swap 分区\"></a>2.2.6 关闭 swap 分区</h5><p>在部署 Doris 时，建议关闭 swap 分区。swap 分区是内核发现内存紧张时，会按照自己的策略将部分内存数据移动到配置的 swap 分区，由于内核策略不能充分了解应用的行为，会对数据库性能造成较大影响。所以建议关闭。</p>\n<p>通过以下命令可以临时或者永久关闭。</p>\n<p><strong>临时关闭</strong>，下次机器启动时，swap 还会被打开。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">swapoff -<span class=\"hljs-selector-tag\">a</span> <br></code></pre></td></tr></table></figure>\n\n<p><strong>永久关闭</strong>，使用 Linux root 账户，注释掉 &#x2F;etc&#x2F;fstab 中的 swap 分区，然后重启即可彻底关闭 swap 分区。</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\"><span class=\"hljs-comment\"># /etc/fstab</span><br><span class=\"hljs-comment\"># &lt;file system&gt;        &lt;dir&gt;         &lt;type&gt;    &lt;options&gt;             &lt;dump&gt; &lt;pass&gt;</span><br>tmpfs                  <span class=\"hljs-symbol\">/tmp</span>          tmpfs     nodev,nosuid          <span class=\"hljs-number\">0</span>      <span class=\"hljs-number\">0</span><br><span class=\"hljs-symbol\">/dev/sda1</span>              <span class=\"hljs-symbol\">/</span>             ext4      defaults,noatime      <span class=\"hljs-number\">0</span>      <span class=\"hljs-number\">1</span><br><span class=\"hljs-comment\"># /dev/sda2              none          swap      defaults              0      0</span><br><span class=\"hljs-symbol\">/dev/sda3</span>              <span class=\"hljs-symbol\">/home</span>         ext4      defaults,noatime      <span class=\"hljs-number\">0</span>      <span class=\"hljs-number\">2</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-7-检测和关闭系统防火墙\"><a href=\"#2-2-7-检测和关闭系统防火墙\" class=\"headerlink\" title=\"2.2.7 检测和关闭系统防火墙\"></a>2.2.7 检测和关闭系统防火墙</h5><p>如果发现端口不同，可以试着关闭防火墙，确认是否是本机防火墙造成。如果是防火墙造成，可以根据配置的 Doris 各组件端口打开相应的端口通信。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">sudo systemctl stop firewalld.service<br>sudo systemctl disable firewalld.service<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-8-配置-NTP-服务\"><a href=\"#2-2-8-配置-NTP-服务\" class=\"headerlink\" title=\"2.2.8 配置 NTP 服务\"></a>2.2.8 配置 NTP 服务</h5><p>Doris 的元数据要求时间精度要小于 5000ms，所以所有集群所有机器要进行时钟同步，避免因为时钟问题引发的元数据不一致导致服务出现异常。</p>\n<p>通常情况下，可以通过配置 NTP 服务保证各节点时钟同步。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> systemctl start ntpd.service<br><span class=\"hljs-built_in\">sudo</span> systemctl <span class=\"hljs-built_in\">enable</span> ntpd.service<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-9-修改虚拟内存区域数量\"><a href=\"#2-2-9-修改虚拟内存区域数量\" class=\"headerlink\" title=\"2.2.9 修改虚拟内存区域数量\"></a>2.2.9 修改虚拟内存区域数量</h5><p>修改虚拟内存区域至少 2000000</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">sysctl -w vm.<span class=\"hljs-attribute\">max_map_count</span>=2000000<br></code></pre></td></tr></table></figure>\n\n<p>永久修改</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\"><span class=\"hljs-keyword\">vim</span> /etc/sysctl.<span class=\"hljs-keyword\">conf</span><br><span class=\"hljs-keyword\">vm</span>.max_map_count=<span class=\"hljs-number\">2000000</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-10关闭透明大页\"><a href=\"#2-2-10关闭透明大页\" class=\"headerlink\" title=\"2.2.10关闭透明大页\"></a>2.2.10关闭透明大页</h5><p>在部署 Doris 时，建议关闭透明大页。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">echo never &gt; <span class=\"hljs-regexp\">/sys/</span>kernel<span class=\"hljs-regexp\">/mm/</span>transparent_hugepage/enabled<br>echo never &gt; <span class=\"hljs-regexp\">/sys/</span>kernel<span class=\"hljs-regexp\">/mm/</span>transparent_hugepage/defrag<br><br><span class=\"hljs-comment\">#永久关闭</span><br>vim <span class=\"hljs-regexp\">/etc/</span>rc.local<br>echo never &gt; <span class=\"hljs-regexp\">/sys/</span>kernel<span class=\"hljs-regexp\">/mm/</span>transparent_hugepage/enabled<br>echo never &gt; <span class=\"hljs-regexp\">/sys/</span>kernel<span class=\"hljs-regexp\">/mm/</span>transparent_hugepage/defrag<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-11-解压安装\"><a href=\"#2-2-11-解压安装\" class=\"headerlink\" title=\"2.2.11 解压安装\"></a>2.2.11 解压安装</h5><figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs haskell\"><span class=\"hljs-title\">mkdir</span> -p /<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span></span><br><span class=\"hljs-title\">tar</span> -xf apache-doris-<span class=\"hljs-number\">2.1</span>.<span class=\"hljs-number\">4</span>-bin-x64.tar.gz -<span class=\"hljs-type\">C</span> /<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span></span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-12-配置FE\"><a href=\"#2-2-12-配置FE\" class=\"headerlink\" title=\"2.2.12 配置FE\"></a>2.2.12 配置FE</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cd</span> /data/apache-doris-2.1.4-bin-x64/fe<br><br><span class=\"hljs-built_in\">ln</span> -s /data/apache-doris-2.1.4-bin-x64/fe/doris-meta /data/doris-fe-meta<br><br>vim conf/fe.conf<br><span class=\"hljs-comment\">#修改 FE 元数据目录</span><br>meta_dir = <span class=\"hljs-variable\">$&#123;DORIS_HOME&#125;</span>/doris-meta<br><br><span class=\"hljs-comment\">#绑定集群 IP</span><br>priority_networks = 172.16.20.0/24<br><br><span class=\"hljs-comment\">#调整 FE 内存</span><br>JAVA_OPTS=<span class=\"hljs-string\">&quot;-Xmx16384m -XX:+UseMembar -XX:SurvivorRatio=8 -XX:MaxTenuringThreshold=7 -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSClassUnloadingEnabled -XX:-CMSParallelRemarkEnabled -XX:CMSInitiatingOccupancyFraction=80 -XX:SoftRefLRUPolicyMSPerMB=0 -Xloggc:<span class=\"hljs-variable\">$DORIS_HOME</span>/log/fe.gc.log.<span class=\"hljs-variable\">$DATE</span>&quot;</span><br><br><span class=\"hljs-comment\">#修改 Doris 大小写敏感参数 lower_case_table_names(可选)</span><br>在 Doris 中默认表名大小写敏感。如果有对大小写不敏感的需求，需要在集群初始化时进行设置。表名大小写敏感在集群初始化完成后就无法再进行修改<br>https://doris.apache.org/zh-CN/docs/query/query-variables/variables<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-13-启动-FE-进程\"><a href=\"#2-2-13-启动-FE-进程\" class=\"headerlink\" title=\"2.2.13 启动 FE 进程\"></a>2.2.13 启动 FE 进程</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cd</span> /data/apache-doris-2.1.4-bin-x64/fe<br><br>bin/start_fe.sh --daemon<br></code></pre></td></tr></table></figure>\n\n<p>FE 进程启动进入后台执行。日志默认存放在 <code>log/</code> 目录下。如启动失败，可以通过查看 <code>log/fe.log</code> 或者 log&#x2F;fe.out 查看错误信息</p>\n<h5 id=\"2-2-14-检查-FE-启动状态\"><a href=\"#2-2-14-检查-FE-启动状态\" class=\"headerlink\" title=\"2.2.14 检查 FE 启动状态\"></a>2.2.14 检查 FE 启动状态</h5><p>#检查是否启动成功</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">curl http:<span class=\"hljs-regexp\">//</span><span class=\"hljs-number\">127.0</span>.<span class=\"hljs-number\">0.1</span>:<span class=\"hljs-number\">8030</span><span class=\"hljs-regexp\">/api/</span>bootstrap<br><br>&#123;<span class=\"hljs-string\">&quot;msg&quot;</span>:<span class=\"hljs-string\">&quot;success&quot;</span>,<span class=\"hljs-string\">&quot;code&quot;</span>:<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">&quot;data&quot;</span>:&#123;<span class=\"hljs-string\">&quot;replayedJournalId&quot;</span>:<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">&quot;queryPort&quot;</span>:<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">&quot;rpcPort&quot;</span>:<span class=\"hljs-number\">0</span>,eng<span class=\"hljs-string\">&quot;version&quot;</span>:<span class=\"hljs-string\">&quot;&quot;</span>&#125;,<span class=\"hljs-string\">&quot;count&quot;</span>:<span class=\"hljs-number\">0</span>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>通过 MySQL Client 可以链接 Doris 集群。初始化用户为 <code>root</code>，密码为空。</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">mysql -uroot -P<span class=\"hljs-tag\">&lt;fe_query_port&gt;</span> -h<span class=\"hljs-tag\">&lt;fe_ip_address&gt;</span><br><br>show frontends <br><br>Alive 为 <span class=\"hljs-literal\">true</span> 表示节点存活<br>Join 为 <span class=\"hljs-literal\">true</span> 表示节点加入到集群中，但不代表当前还在集群内（可能已失联）<br>IsMaster 为 <span class=\"hljs-literal\">true</span> 表示当前节点为 <span class=\"hljs-keyword\">Master</span> <span class=\"hljs-title\">节点</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-15-FE-Web-登录页面\"><a href=\"#2-2-15-FE-Web-登录页面\" class=\"headerlink\" title=\"2.2.15 FE Web 登录页面\"></a>2.2.15 FE Web 登录页面</h5><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">访问地址: http://172.16.20.239:8030/login</span><br><span class=\"hljs-section\">初始用户: root</span><br><span class=\"hljs-section\">密码:无</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-web.png\"></p>\n<h5 id=\"2-2-16-配置-BE\"><a href=\"#2-2-16-配置-BE\" class=\"headerlink\" title=\"2.2.16 配置 BE\"></a>2.2.16 配置 BE</h5><figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs haskell\"><span class=\"hljs-meta\">#BE三节点都配置</span><br><span class=\"hljs-meta\"># 创建BE数据存放目录</span><br><span class=\"hljs-title\">mkdir</span> -p /<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>/doris-storage1</span><br> mkdir -p /<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>/doris-storage2.<span class=\"hljs-type\">SSD</span></span><br><br><span class=\"hljs-meta\"># 修改BE配置文件</span><br><span class=\"hljs-meta\">## 在 storage_root_path 中使用 medium 指定磁盘类型</span><br><span class=\"hljs-meta\">## /home/disk1/doris,medium:HDD： 表示该目录存储冷数据;</span><br><span class=\"hljs-meta\">## /home/disk2/doris,medium:SSD： 表示该目录存储热数据;</span><br><span class=\"hljs-title\">vim</span> /<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>/apache-doris-2.1.4-bin-x64/be/conf/be.conf</span><br><span class=\"hljs-title\">storage_root_path</span> = /<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>/doris-storage1;/<span class=\"hljs-keyword\">data</span>/doris-storage2.<span class=\"hljs-type\">SSD</span>,10</span><br><span class=\"hljs-title\">priority_networks</span> = <span class=\"hljs-number\">172.16</span>.<span class=\"hljs-number\">20.0</span>/<span class=\"hljs-number\">24</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs scss\">Doris 支持冷热数据分级存储，将冷数据存储在 HDD 或对象存储中，热数据存储在 SSD 中。<br><br>可以通过路径区别节点内的冷热数据存储目录，HDD（冷数据目录）或 SSD（热数据目录）。如果不需要 BE 节点内的冷热机制，那么只需要配置路径即可，无需指定 medium 类型；也不需要修改 FE 的默认存储介质配置。<br><br>在使用冷热数据分离功能时，需要在 storage_root_path 中使用 medium 选项。<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-17-添加-BE\"><a href=\"#2-2-17-添加-BE\" class=\"headerlink\" title=\"2.2.17 添加 BE\"></a>2.2.17 添加 BE</h5><p>BE节点需要先在FE中添加，才可加入集群。可以使用mysql-client连接到FE</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs axapta\">注意：<br><br>这里需要有MySQL客户端连接MySQL的<span class=\"hljs-keyword\">client</span>，安装忽略，yum安装mysqld或者mariadb均可<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>使用 Mysql 客户端连接到 FE</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">FE</span> 默认没有密码<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">[wangting@hdt-dmcp-ops01 ~]$ mysql -h hdt-dmcp-ops01 -uroot -P <span class=\"hljs-number\">9030</span><br><span class=\"hljs-comment\"># 设置密码</span><br>MySQL [(none)]&gt; SET PASSWORD FOR <span class=\"hljs-string\">&#x27;root&#x27;</span> = PASSWORD(<span class=\"hljs-string\">&#x27;Doris@123&#x27;</span>);<br>Query OK, <span class=\"hljs-number\">0</span> rows affected (<span class=\"hljs-number\">0.00</span> sec)<br>MySQL [(none)]&gt; <span class=\"hljs-keyword\">exit</span>;<br>Bye<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">注意：<br>这里密码改过以后，那FE的前端访问页面的ROOT密码，就是改后的，注意下次登录时需要输入对应的新密码<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>添加BE</li>\n</ul>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\">## 链接任一存活的 FE 节点<br>mysql -uroot -P&lt;fe_query_port&gt; -h&lt;fe_ip_address&gt;<br><br>## 注册 BE 节点<br>## be_heartbeat_service_port 可以从 be.conf 中查看，默认为 <span class=\"hljs-number\">9050</span><br>## 在 MySQL Client 中执行 ALTER SYSTEM 语句<br>ALTER SYSTEM ADD BACKEND <span class=\"hljs-string\">&quot;&lt;be_ip_address&gt;:&lt;be_heartbeat_service_port&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-18-启动-BE-进程\"><a href=\"#2-2-18-启动-BE-进程\" class=\"headerlink\" title=\"2.2.18 启动 BE 进程\"></a>2.2.18 <strong>启动 BE 进程</strong></h5><p>通过以下命令可以启动 BE 进程</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">bin/start_be<span class=\"hljs-selector-class\">.sh</span> <span class=\"hljs-attr\">--daemon</span><br></code></pre></td></tr></table></figure>\n\n<p>BE 进程启动进入后台执行。日志默认存放在 <code>log/</code> 目录下。如启动失败，可以通过查看 <code>log/be.log</code> 或者 <code>log/be.out</code> 查看错误信息</p>\n<h5 id=\"2-2-19-查看-BE-启动状态\"><a href=\"#2-2-19-查看-BE-启动状态\" class=\"headerlink\" title=\"2.2.19 查看 BE 启动状态\"></a>2.2.19 <strong>查看 BE 启动状态</strong></h5><p>在链接到 Doris 集群后，通过 show backends 命令查看 BE 的状态。</p>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\">## 链接 Doris 集群<br>mysql -uroot -P&lt;fe_query_port&gt; -h&lt;fe_ip_address&gt;<br><br>## 查看 BE 状态，在 MySQL Client 中执行 show 命令<br>show backends;<br></code></pre></td></tr></table></figure>\n\n<p>通常情况下需要注意以下几项状态：</p>\n<ul>\n<li>Alive 为 true 表示节点存活</li>\n<li>TabletNum 表示该节点上的分片数量，新加入的节点会进行数据均衡，TabletNum 逐渐趋于平均</li>\n</ul>\n<h5 id=\"2-2-20-验证集群正确性\"><a href=\"#2-2-20-验证集群正确性\" class=\"headerlink\" title=\"2.2.20 验证集群正确性\"></a>2.2.20 验证集群正确性</h5><p><strong>登录数据库</strong></p>\n<p>通过 MySQL Client 登录 Doris 集群。</p>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gherkin\"><span class=\"hljs-comment\">## 链接 Doris 集群</span><br>mysql -uroot -P<span class=\"hljs-variable\">&lt;fe_query_port&gt;</span> -h<span class=\"hljs-variable\">&lt;fe_ip_address&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>检查 Doris 安装版本</strong></p>\n<p>通过 show frontends 与 show backends 命令可以查看数据库版本情况。</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-comment\">## 查看 FE 各实例的版本，在 MySQL Client 中执行 show 命令</span><br><span class=\"hljs-keyword\">show </span>frontends \\G<br><br><span class=\"hljs-comment\">## 查看 BE 各实例的版本，在 MySQL Client 中执行 show 命令</span><br><span class=\"hljs-keyword\">show </span><span class=\"hljs-keyword\">backends </span>\\G<br></code></pre></td></tr></table></figure>\n\n<p><strong>修改 Doris 集群密码</strong></p>\n<p>在创建 Doris 集群后，系统会自动创建 <code>root</code> 用户，并默认密码为空。建议在创建集群后为 <code>root</code> 用户重置一个新密码。</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs asciidoc\">## 确认当前用户为 root，在 MySQL Client 中查看当前用户<br><span class=\"hljs-section\">select user();</span><br><span class=\"hljs-section\">+------------------------+</span><br><span class=\"hljs-section\">| user()                 |</span><br><span class=\"hljs-section\">+------------------------+</span><br><span class=\"hljs-section\">| &#x27;root&#x27;@&#x27;192.168.88.30&#x27; |</span><br><span class=\"hljs-section\">+------------------------+</span><br><br>## 修改 root 用户密码，在 MySQL Client 中执行 set password 命令<br>SET PASSWORD = PASSWORD(<span class=\"hljs-emphasis\">&#x27;doris_new_passwd&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<p><strong>创建测试表并插入数据</strong></p>\n<p>在新创建的集群中，可以创建表并插入数据以验证集群正确性。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">## 创建测试数据库，在 MySQL Client 中执行 <span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">database</span> 语句<br><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">database</span> testdb;<br><br>## 创建测试表，在 MySQL Client 中执行 <span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> 语句<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> testdb.table_hash<br>(<br>    k1 TINYINT,<br>    k2 <span class=\"hljs-type\">DECIMAL</span>(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">2</span>) <span class=\"hljs-keyword\">DEFAULT</span> &quot;10.5&quot;,<br>    k3 <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">10</span>) <span class=\"hljs-keyword\">COMMENT</span> &quot;string column&quot;,<br>    k4 <span class=\"hljs-type\">INT</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> <span class=\"hljs-keyword\">DEFAULT</span> &quot;1&quot; <span class=\"hljs-keyword\">COMMENT</span> &quot;int column&quot;<br>)<br><span class=\"hljs-keyword\">COMMENT</span> &quot;my first table&quot;<br>DISTRIBUTED <span class=\"hljs-keyword\">BY</span> HASH(k1) BUCKETS <span class=\"hljs-number\">32</span>;<br></code></pre></td></tr></table></figure>\n\n<p>Doris 兼容 MySQL 协议，可以使用 insert 语句插入数据。</p>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gherkin\"><span class=\"hljs-comment\">## 插入部分测试数据，在 MySQL Client 中执行 insert into 语句</span><br>INSERT INTO testdb.table_hash VALUES<br>(1, 10.1, &#x27;AAA&#x27;, 10),<br>(2, 10.2, &#x27;BBB&#x27;, 20),<br>(3, 10.3, &#x27;CCC&#x27;, 30),<br>(4, 10.4, &#x27;DDD&#x27;, 40),<br>(5, 10.5, &#x27;EEE&#x27;, 50);<br><br><span class=\"hljs-comment\">## 验证插入数据正确性，在 MySQL Client 中执行 select 语句</span><br>SELECT <span class=\"hljs-symbol\">*</span> from testdb.table_hash;<br>+------+-------+------+------+<br>|<span class=\"hljs-string\"> k1   </span>|<span class=\"hljs-string\"> k2    </span>|<span class=\"hljs-string\"> k3   </span>|<span class=\"hljs-string\"> k4   </span>|<br>+------+-------+------+------+<br>|<span class=\"hljs-string\">    3 </span>|<span class=\"hljs-string\"> 10.30 </span>|<span class=\"hljs-string\"> CCC  </span>|<span class=\"hljs-string\">   30 </span>|<br>|<span class=\"hljs-string\">    4 </span>|<span class=\"hljs-string\"> 10.40 </span>|<span class=\"hljs-string\"> DDD  </span>|<span class=\"hljs-string\">   40 </span>|<br>|<span class=\"hljs-string\">    5 </span>|<span class=\"hljs-string\"> 10.50 </span>|<span class=\"hljs-string\"> EEE  </span>|<span class=\"hljs-string\">   50 </span>|<br>|<span class=\"hljs-string\">    1 </span>|<span class=\"hljs-string\"> 10.10 </span>|<span class=\"hljs-string\"> AAA  </span>|<span class=\"hljs-string\">   10 </span>|<br>|<span class=\"hljs-string\">    2 </span>|<span class=\"hljs-string\"> 10.20 </span>|<span class=\"hljs-string\"> BBB  </span>|<span class=\"hljs-string\">   20 </span>|<br>+------+-------+------+------+<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"三、Doris扩容和缩容\"><a href=\"#三、Doris扩容和缩容\" class=\"headerlink\" title=\"三、Doris扩容和缩容\"></a>三、Doris扩容和缩容</h3><h4 id=\"3-1-FE-扩容和缩容\"><a href=\"#3-1-FE-扩容和缩容\" class=\"headerlink\" title=\"3.1 FE 扩容和缩容\"></a>3.1 FE 扩容和缩容</h4><p>可以通过将FE扩容至3个以上节点(必须是奇数)来实现FE的高可用</p>\n<h5 id=\"3-1-1-FE扩容\"><a href=\"#3-1-1-FE扩容\" class=\"headerlink\" title=\"3.1.1 FE扩容\"></a>3.1.1 FE扩容</h5><ul>\n<li>查看 FE 状态</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">MySQL</span> [<span class=\"hljs-string\">(none)</span>]<span class=\"hljs-string\">&gt;</span> <span class=\"hljs-string\">show</span> <span class=\"hljs-string\">proc</span> <span class=\"hljs-string\">&#x27;/frontends&#x27;</span><span class=\"hljs-string\">\\G;</span><br><span class=\"hljs-string\">***************************</span> <span class=\"hljs-number\">1</span><span class=\"hljs-string\">.</span> <span class=\"hljs-string\">row</span> <span class=\"hljs-string\">***************************</span><br>             <span class=\"hljs-attr\">Name:</span> <span class=\"hljs-number\">172.20</span><span class=\"hljs-number\">.8</span><span class=\"hljs-string\">.117_9010_1683623765731</span><br>               <span class=\"hljs-attr\">IP:</span> <span class=\"hljs-number\">172.20</span><span class=\"hljs-number\">.8</span><span class=\"hljs-number\">.117</span><br>         <span class=\"hljs-attr\">HostName:</span> <span class=\"hljs-string\">hdt-dmcp-ops01</span><br>      <span class=\"hljs-attr\">EditLogPort:</span> <span class=\"hljs-number\">9010</span><br>         <span class=\"hljs-attr\">HttpPort:</span> <span class=\"hljs-number\">8130</span><br>        <span class=\"hljs-attr\">QueryPort:</span> <span class=\"hljs-number\">9030</span><br>          <span class=\"hljs-attr\">RpcPort:</span> <span class=\"hljs-number\">9020</span><br>             <span class=\"hljs-attr\">Role:</span> <span class=\"hljs-string\">FOLLOWER</span><br>         <span class=\"hljs-attr\">IsMaster:</span> <span class=\"hljs-literal\">true</span><br>        <span class=\"hljs-attr\">ClusterId:</span> <span class=\"hljs-number\">2040453956</span><br>             <span class=\"hljs-attr\">Join:</span> <span class=\"hljs-literal\">true</span><br>            <span class=\"hljs-attr\">Alive:</span> <span class=\"hljs-literal\">true</span><br><span class=\"hljs-attr\">ReplayedJournalId:</span> <span class=\"hljs-number\">18054</span><br>    <span class=\"hljs-attr\">LastHeartbeat:</span> <span class=\"hljs-number\">2023-05-10 09:59:13</span><br>         <span class=\"hljs-attr\">IsHelper:</span> <span class=\"hljs-literal\">true</span><br>           <span class=\"hljs-attr\">ErrMsg:</span> <br>          <span class=\"hljs-attr\">Version:</span> <span class=\"hljs-number\">1.1</span><span class=\"hljs-number\">.5</span><span class=\"hljs-string\">-rc02-ef0635dae7</span><br> <span class=\"hljs-attr\">CurrentConnected:</span> <span class=\"hljs-literal\">Yes</span><br><span class=\"hljs-number\">1</span> <span class=\"hljs-string\">row</span> <span class=\"hljs-string\">in</span> <span class=\"hljs-string\">set</span> <span class=\"hljs-string\">(0.01</span> <span class=\"hljs-string\">sec)</span><br></code></pre></td></tr></table></figure>\n\n<p>从查询结果看，目前只有一个 FE，Role 为 FOLLOWER</p>\n<ul>\n<li>增加FE节点</li>\n</ul>\n<p> FE分为Leader，Follower和Observer三种角色。 默认一个集群只能有一个Leader，可以有多个Follower和Observer。其中Leader和Follower组成一个Paxos选择组，如果 Leader宕机，则剩下的Follower 会自动选出新的Leader，保证写入高可用。Observer 同步 Leader的数据，但是不参加选举。<br> 如果只部署一个FE，则FE 默认就是Leader。在此基础上，可以添加若干Follower和 Observer。</p>\n<pre><code># 增加FOLLOWER\nALTER SYSTEM ADD FOLLOWER &quot;follower_host:edit_log_port&quot;;\n# 增加OBSERVER\nALTER SYSTEM ADD OBSERVER &quot;observer_host:edit_log_port&quot;;\n</code></pre>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">此时只是加入角色，各 FE 节点服务还未部署<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>配置Follower和Observer</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">参考2.2.12<br></code></pre></td></tr></table></figure>\n\n<p>启动新的 FE 节点</p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs delphi\">注意：<br>扩容的节点第一次启动时，启动命令需要添加参 --<span class=\"hljs-keyword\">helper</span> leader的IP:port，第一次需要成功启动加入到集群后，后续就不需要<span class=\"hljs-keyword\">helper</span>参数了<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\"><span class=\"hljs-string\">./bin/start_fe.sh</span> <span class=\"hljs-params\">--helper</span> leader_fe_host<span class=\"hljs-function\">:edit_log_port</span> <span class=\"hljs-params\">--daemon</span><br></code></pre></td></tr></table></figure>\n\n<p>查看 FE 状态</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">show</span> proc <span class=\"hljs-string\">&#x27;/frontends&#x27;</span>\\G;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-1-2-FE缩容\"><a href=\"#3-1-2-FE缩容\" class=\"headerlink\" title=\"3.1.2 FE缩容\"></a>3.1.2 FE缩容</h5><p>删除只需执行如下命令即可：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">SYSTEM</span> <span class=\"hljs-keyword\">DROP</span> FOLLOWER[OBSERVER] &quot;fe_host:edit_log_port&quot;;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\">注意：<br>删除 Follower FE 时，确保最终剩余的 Follower（包括 <span class=\"hljs-built_in\">Leader</span>）节点为奇数的合理状态<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-BE扩容和缩容\"><a href=\"#3-2-BE扩容和缩容\" class=\"headerlink\" title=\"3.2 BE扩容和缩容\"></a>3.2 BE扩容和缩容</h4><h5 id=\"3-2-1-BE扩容\"><a href=\"#3-2-1-BE扩容\" class=\"headerlink\" title=\"3.2.1 BE扩容\"></a>3.2.1 BE扩容</h5><p>BE扩容和第一次部署添加 BE 方式一样</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">在MySQL命令行，通过 <span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">SYSTEM</span> <span class=\"hljs-keyword\">ADD</span> BACKEND 命令增加BE节点<br><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">SYSTEM</span> <span class=\"hljs-keyword\">ADD</span> BACKEND &quot;hdt-dmcp-ops04:9050&quot;;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-2-2-BE缩容\"><a href=\"#3-2-2-BE缩容\" class=\"headerlink\" title=\"3.2.2 BE缩容\"></a>3.2.2 BE缩容</h5><p>使用 <code>DECOMMISSION</code> 方式删除BE节点</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">语法：<span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">SYSTEM</span> DECOMMISSION BACKEND &quot;be_host:be_heartbeat_service_port&quot;;<br><br>示例：<span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">SYSTEM</span> DECOMMISSION BACKEND &quot;hdt-dmcp-ops05:9050&quot;;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">注意：<br><br>该命令用于安全删除BE节点。命令下发后，Doris 会尝试将该BE上的数据向其他BE节点迁移，当所有数据都迁移完成后，Doris会自动删除该节点。<br><br>该命令是一个异步操作。执行后，可以通过 <span class=\"hljs-keyword\">SHOW</span> PROC ‘<span class=\"hljs-operator\">/</span>backends’; 看到该 BE 节点的isDecommission状态为<span class=\"hljs-literal\">true</span>。表示该节点正在进行下线。<br><br>该命令不一定执行成功。比如剩余BE存储空间不足以容纳下线BE上的数据，或者剩余机器数量不满足最小副本数时，该命令都无法完成，并且BE会一直处于 isDecommission为<span class=\"hljs-literal\">true</span>的状态。<br><br>DECOMMISSION的进度，可以通过<span class=\"hljs-keyword\">SHOW</span> PROC ‘<span class=\"hljs-operator\">/</span>backends’; 中的TabletNum查看，如果正在进行，TabletNum将不断减少。<br><br>该操作可以通过如下命令取消：<br><br>CANCEL DECOMMISSION BACKEND &quot;be_host:be_heartbeat_service_port&quot;;<br><br>如执行取消命令后，该BE上的数据将维持当前剩余的数据量。后续Doris重新进行负载均衡<br>除了使用DECOMMISSION方式，还可以直接使用 <span class=\"hljs-keyword\">DROP</span> 方式删除 BE 节点，但生产环境不建议使用<br><br>示例：<span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">SYSTEM</span> <span class=\"hljs-keyword\">DROP</span> BACKEND &quot;be_host:be_heartbeat_service_port&quot;;<br><br><span class=\"hljs-keyword\">DROP</span> BACKEND 会直接删除该BE，并且其上的数据将不能再恢复。方式比较暴力，所以不推荐使用 <span class=\"hljs-keyword\">DROP</span> BACKEND 这种方式删除BE节点。当执行这个语句时，也会有对应的防误操作提示信息<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"四、Doris-基本概念与介绍\"><a href=\"#四、Doris-基本概念与介绍\" class=\"headerlink\" title=\"四、Doris 基本概念与介绍\"></a>四、Doris 基本概念与介绍</h3><h4 id=\"4-1-Doris基本概念\"><a href=\"#4-1-Doris基本概念\" class=\"headerlink\" title=\"4.1 Doris基本概念\"></a>4.1 Doris基本概念</h4><h5 id=\"4-1-1-Row-Column\"><a href=\"#4-1-1-Row-Column\" class=\"headerlink\" title=\"4.1.1 Row &amp; Column\"></a>4.1.1 Row &amp; Column</h5><p> 一张表包括行（Row）和列（Column）：</p>\n<figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autohotkey\"><span class=\"hljs-built_in\">Row ,</span> 即用户的一行数据<span class=\"hljs-comment\">;</span><br><span class=\"hljs-built_in\"></span><br><span class=\"hljs-built_in\">Column ,</span> 用于描述一行数据中不同的字段。<br></code></pre></td></tr></table></figure>\n\n<p>Column 可以分为两大类：Key 和 Value。从业务角度看，Key 和 Value 可以分别对应维度列和指标列</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">Doris数据库是一个分布式的列式存储引擎，它的数据模型是基于列式存储的。在Doris数据库中，一个<span class=\"hljs-built_in\">Row</span>就是一个数据行，它由多个<span class=\"hljs-built_in\">Column</span>组成。每个<span class=\"hljs-built_in\">Column</span>则代表这个数据行中的一个属性或者字段。因此，我们也可以将一个<span class=\"hljs-built_in\">Row</span>看做是一个数据表中的一行数据，而<span class=\"hljs-built_in\">Column</span>则对应数据表中的列。<br><br>在Doris数据库中，由于数据是以列式存储的，因此在查询时可以只读取需要的<span class=\"hljs-built_in\">Column</span>数据，而不用读取整个<span class=\"hljs-built_in\">Row</span>数据，这就大大提高了查询性能。同时，Doris还支持<span class=\"hljs-built_in\">Column</span>的压缩和编码，可以进一步减小存储空间，提高数据的存储和查询效率。<br><br>总之，在Doris数据库中，<span class=\"hljs-built_in\">Row</span>和<span class=\"hljs-built_in\">Column</span>是基本的数据结构，<span class=\"hljs-built_in\">Row</span>代表一个数据行，<span class=\"hljs-built_in\">Column</span>代表一个属性或字段，这种设计使得Doris能够高效地存储和查询海量数据。<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-1-2-Tablet-Partition\"><a href=\"#4-1-2-Tablet-Partition\" class=\"headerlink\" title=\"4.1.2 Tablet &amp; Partition\"></a>4.1.2 Tablet &amp; Partition</h5><figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mathematica\">在<span class=\"hljs-variable\">Doris</span>的存储引擎中，用户数据首先被划分成若干个分区（<span class=\"hljs-built_in\">Partition</span>），划分的规则通常是按照用户指定的分区列进行范围划分，比如按时间划分。而在每个分区内，数据被进一步的按照<span class=\"hljs-built_in\">Hash</span>的方式分桶，分桶的规则是要找用户指定的分桶列的值进行<span class=\"hljs-built_in\">Hash</span>后分桶。每个分桶就是一个数据分片（<span class=\"hljs-variable\">Tablet</span>），也是数据划分的最小逻辑单元。<br><br><span class=\"hljs-variable\">Tablet</span>之间的数据是没有交集的，独立存储的。<span class=\"hljs-variable\">Tablet</span>也是数据移动、复制等操作的最小物理存储单元。<br><br><span class=\"hljs-built_in\">Partition</span>可以视为是逻辑上最小的管理单元。数据的导入与删除，都可以或仅能针对一个 <span class=\"hljs-built_in\">Partition</span> 进行<span class=\"hljs-operator\">,</span>例如，可以按照数据的时间戳、地理位置、业务类型等进行分区，以保证数据的高效存储和查询。每个<span class=\"hljs-built_in\">Partition</span>都包含一定数量的数据块（<span class=\"hljs-variable\">Data</span> <span class=\"hljs-built_in\">Block</span>），一个数据块包含一段连续的数据和对应的元数据信息，用于支持查询和数据的压缩存储等功能。<br><br>总之，<span class=\"hljs-variable\">Doris</span>的<span class=\"hljs-variable\">Tablet</span>和<span class=\"hljs-built_in\">Partition</span>是实现高性能、高可用的分布式存储和计算的关键组件，通过合理的划分和分配，可以充分利用计算和存储资源，提高数据的利用率和系统的性能<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-Doris字段类型\"><a href=\"#4-2-Doris字段类型\" class=\"headerlink\" title=\"4.2 Doris字段类型\"></a>4.2 Doris字段类型</h4><table>\n<thead>\n<tr>\n<th>TINYINT</th>\n<th>1字节</th>\n<th>范围：-2^7 + 1 ~ 2^7 - 1</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SMALLINT</td>\n<td>2字节</td>\n<td>范围：-2^15 + 1 ~ 2^15 - 1</td>\n</tr>\n<tr>\n<td>INT</td>\n<td>4字节</td>\n<td>范围：-2^31 + 1 ~ 2^31 - 1</td>\n</tr>\n<tr>\n<td>BIGINT</td>\n<td>8字节</td>\n<td>范围：-2^63 + 1 ~ 2^63 - 1</td>\n</tr>\n<tr>\n<td>LARGEINT</td>\n<td>16字节</td>\n<td>范围：-2^127 + 1 ~ 2^127 - 1</td>\n</tr>\n<tr>\n<td>FLOAT</td>\n<td>4字节</td>\n<td>支持科学计数法</td>\n</tr>\n<tr>\n<td>DOUBLE</td>\n<td>12字节</td>\n<td>支持科学计数法</td>\n</tr>\n<tr>\n<td>DECIMAL[(precision, scale)]</td>\n<td>16字节</td>\n<td>保证精度的小数类型。默认是 DECIMAL(10, 0)precision: 1 ~ 27scale: 0 ~ 9其中整数部分为 1 ~ 18不支持科学计数法</td>\n</tr>\n<tr>\n<td>DATE</td>\n<td>3字节</td>\n<td>范围：0000-01-01 ~ 9999-12-31</td>\n</tr>\n<tr>\n<td>DATETIME</td>\n<td>8字节</td>\n<td>范围：0000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td>\n</tr>\n<tr>\n<td>CHAR[(length)]</td>\n<td></td>\n<td>定长字符串。长度范围：1 ~ 255。默认为1</td>\n</tr>\n<tr>\n<td>VARCHAR[(length)]</td>\n<td></td>\n<td>变长字符串。长度范围：1 ~ 65533</td>\n</tr>\n<tr>\n<td>BOOLEAN</td>\n<td></td>\n<td>与TINYINT一样，0代表false，1代表true</td>\n</tr>\n<tr>\n<td>HLL</td>\n<td>1~16385个字节</td>\n<td>hll列类型，不需要指定长度和默认值、长度根据数据的聚合程度系统内控制，并且HLL列只能通过配套的hll_union_agg、Hll_cardinality、hll_hash进行查询或使用</td>\n</tr>\n<tr>\n<td>BITMAP</td>\n<td></td>\n<td>bitmap列类型，不需要指定长度和默认值。表示整型的集合，元素最大支持到2^64 - 1</td>\n</tr>\n<tr>\n<td>STRING</td>\n<td></td>\n<td>变长字符串，0.15版本支持，最大支持2147483643 字节（2GB-4），长度还受be 配置<code>string_type_soft_limit</code>, 实际能存储的最大长度取两者最小值。只能用在value 列，不能用在 key 列和分区、分桶列</td>\n</tr>\n</tbody></table>\n<h4 id=\"4-3-Doris数据模型\"><a href=\"#4-3-Doris数据模型\" class=\"headerlink\" title=\"4.3 Doris数据模型\"></a>4.3 Doris数据模型</h4><p>Doris 的数据模型主要分为3类</p>\n<p>Aggregate - 实现聚合查询</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">Doris的<span class=\"hljs-built_in\">Aggregate</span>模型是Doris中的一种数据模型，用于支持快速的聚合查询。该模型将数据按照一定的规则进行分组，并对每个分组内的数据进行聚合计算，得到一个汇总的结果。在Doris中，<span class=\"hljs-built_in\">Aggregate</span>模型是通过一个存储在内存中的数据结构进行计算的，这个数据结构被称为“HyperLogLog”（简称HLL）。HLL可以快速地统计一个数据集的基数（不同元素的个数），并且可以进行基于聚合的计算，例如计算不同的元素的个数、求和、平均值等。在Doris中，用户可以通过定义聚合键、聚合函数等参数来创建<span class=\"hljs-built_in\">Aggregate</span>模型，从而支持更高效的查询操作。<br></code></pre></td></tr></table></figure>\n\n<p>Unique - 实现唯一性约束</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">Doris数据库的<span class=\"hljs-built_in\">Unique</span>模型是指在Doris中使用了一种特殊的索引结构，称为<span class=\"hljs-built_in\">Unique</span>索引，来实现唯一性约束。这种索引结构允许在表的某个列上创建唯一性约束，保证该列的值在表中是唯一的，并且可以快速地检查重复值。<br><br>在Doris中，<span class=\"hljs-built_in\">Unique</span>索引使用B+树数据结构来实现，通过将唯一性列的值作为索引的键值，将其它列的值作为索引的数据值，来构建索引。当插入或更新数据时，Doris会自动检查唯一性列的值是否已经存在，如果不存在则插入数据，否则更新数据。这样就可以避免重复数据的插入，保证数据的唯一性。<br><br><span class=\"hljs-built_in\">Unique</span>模型主要用于实现单列唯一性约束，如果需要实现多列唯一性约束，则需要使用Doris的联合索引。<br></code></pre></td></tr></table></figure>\n\n<p>Duplicate - 实现自动检测和删除重复数据</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">Doris数据库的Duplicate模型是用于处理数据冗余问题的模型，它可以自动检测和删除重复数据。在Doris数据库中，数据是以分布式表的形式存储的，分布式表由多个分片组成，每个分片都有自己的数据副本。当用户执行插入操作时，Duplicate模型会首先检测分片中是否已经存在相同的数据，如果存在，则会自动删除重复数据，从而保证数据的唯一性。Duplicate模型还支持对唯一性约束进行自定义设置，用户可以根据自己的业务需求来定义唯一性约束。<br></code></pre></td></tr></table></figure>\n\n<p>建测试库</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">MySQL [(<span class=\"hljs-keyword\">none</span>)]&gt; <span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">database</span> test_db;<br>Query OK, <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">rows</span> affected (<span class=\"hljs-number\">0.02</span> sec)<br><br>MySQL [(<span class=\"hljs-keyword\">none</span>)]&gt; use test_db;<br><span class=\"hljs-keyword\">Database</span> changed<br>MySQL [test_db]&gt; <br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-3-1-Aggregate使用示例\"><a href=\"#4-3-1-Aggregate使用示例\" class=\"headerlink\" title=\"4.3.1 Aggregate使用示例\"></a>4.3.1 Aggregate使用示例</h5><ul>\n<li>建表</li>\n</ul>\n<figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autohotkey\">CREATE TABLE IF <span class=\"hljs-literal\">NOT</span> EXISTS test_db.example_site_visit<br>(<br>    `user_id` LARGEINT <span class=\"hljs-literal\">NOT</span> NULL COMMENT <span class=\"hljs-string\">&quot;用户id&quot;</span>,<br>    `date` DATE <span class=\"hljs-literal\">NOT</span> NULL COMMENT <span class=\"hljs-string\">&quot;数据灌入日期时间&quot;</span>,<br>    `city` VARCHAR(<span class=\"hljs-number\">20</span>) COMMENT <span class=\"hljs-string\">&quot;用户所在城市&quot;</span>,<br>    `age` SMALLINT COMMENT <span class=\"hljs-string\">&quot;用户年龄&quot;</span>,<br>    `sex` TINYINT COMMENT <span class=\"hljs-string\">&quot;用户性别&quot;</span>,<br>`last_visit_date` DATETIME REPLACE DEFAULT <span class=\"hljs-string\">&quot;1970-01-01 00:00:00&quot;</span> COMMENT <span class=\"hljs-string\">&quot;用户最后一次访问时间&quot;</span>,<br>    `cost` BIGINT SUM DEFAULT <span class=\"hljs-string\">&quot;0&quot;</span> COMMENT <span class=\"hljs-string\">&quot;用户总消费&quot;</span>,<br>    `max_dwell_time` INT MAX DEFAULT <span class=\"hljs-string\">&quot;0&quot;</span> COMMENT <span class=\"hljs-string\">&quot;用户最大停留时间&quot;</span>,<br>    `min_dwell_time` INT MIN DEFAULT <span class=\"hljs-string\">&quot;99999&quot;</span> COMMENT <span class=\"hljs-string\">&quot;用户最小停留时间&quot;</span><br>)<br>AGGREGATE KEY(`user_id`, `date`, `city`, `age`, `sex`)<br>DISTRIBUTED BY HASH(`user_id`) BUCKETS <span class=\"hljs-number\">10</span><span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>插入样例数据</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">insert</span> into test_db.example_site_visit values<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10000</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span>&#x27;,&#x27;北京&#x27;,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">0</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">06</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>&#x27; ,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">10</span>),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10000</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span>&#x27;,&#x27;北京&#x27;,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">0</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">07</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>&#x27;,<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10001</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span>&#x27;,&#x27;北京&#x27;,<span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">1</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">17</span>:<span class=\"hljs-number\">05</span>:<span class=\"hljs-number\">45</span>&#x27;,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">22</span>,<span class=\"hljs-number\">22</span>),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10002</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">02</span>&#x27;,&#x27;上海&#x27;,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">1</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">02</span> <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">59</span>:<span class=\"hljs-number\">12</span>&#x27; ,<span class=\"hljs-number\">200</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">5</span>),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10003</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">02</span>&#x27;,&#x27;广州&#x27;,<span class=\"hljs-number\">32</span>,<span class=\"hljs-number\">0</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">02</span> <span class=\"hljs-number\">11</span>:<span class=\"hljs-number\">20</span>:<span class=\"hljs-number\">00</span>&#x27;,<span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">11</span>),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10004</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span>&#x27;,&#x27;深圳&#x27;,<span class=\"hljs-number\">35</span>,<span class=\"hljs-number\">0</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">10</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">15</span>&#x27;,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10004</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">03</span>&#x27;,&#x27;深圳&#x27;,<span class=\"hljs-number\">35</span>,<span class=\"hljs-number\">0</span>,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">03</span> <span class=\"hljs-number\">10</span>:<span class=\"hljs-number\">20</span>:<span class=\"hljs-number\">22</span>&#x27;,<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">6</span>);<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>查看数据验证</li>\n</ul>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vbnet\">可以观察结果针对同一个user_id进行的聚合结果<br><br>根据建表语句中<span class=\"hljs-keyword\">AGGREGATE</span> <span class=\"hljs-keyword\">KEY</span>(user_id, <span class=\"hljs-type\">date</span>, city, age, sex),涉及的字段信息都相同进行聚合，如有不同不触发聚合<br><br><span class=\"hljs-number\">10000</span>信息相同进行聚合，而<span class=\"hljs-number\">10004</span>灌入日期时间就已经不同，不进行聚合<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-Aggregate.png\"></p>\n<h5 id=\"4-3-2-Unique-使用示例\"><a href=\"#4-3-2-Unique-使用示例\" class=\"headerlink\" title=\"4.3.2 Unique 使用示例\"></a>4.3.2 Unique 使用示例</h5><ul>\n<li>建表</li>\n</ul>\n<figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autohotkey\">CREATE TABLE IF <span class=\"hljs-literal\">NOT</span> EXISTS test_db.user<br>(<br>    `user_id` LARGEINT <span class=\"hljs-literal\">NOT</span> NULL COMMENT <span class=\"hljs-string\">&quot;用户id&quot;</span>,<br>    `username` VARCHAR(<span class=\"hljs-number\">50</span>) <span class=\"hljs-literal\">NOT</span> NULL COMMENT <span class=\"hljs-string\">&quot;用户昵称&quot;</span>,<br>    `city` VARCHAR(<span class=\"hljs-number\">20</span>) COMMENT <span class=\"hljs-string\">&quot;用户所在城市&quot;</span>,<br>    `age` SMALLINT COMMENT <span class=\"hljs-string\">&quot;用户年龄&quot;</span>,<br>    `sex` TINYINT COMMENT <span class=\"hljs-string\">&quot;用户性别&quot;</span>,<br>    `phone` LARGEINT COMMENT <span class=\"hljs-string\">&quot;用户电话&quot;</span>,<br>    `address` VARCHAR(<span class=\"hljs-number\">500</span>) COMMENT <span class=\"hljs-string\">&quot;用户地址&quot;</span>,<br>    `register_time` DATETIME COMMENT <span class=\"hljs-string\">&quot;用户注册时间&quot;</span><br>)<br>UNIQUE KEY(`user_id`, `username`)<br>DISTRIBUTED BY HASH(`user_id`) BUCKETS <span class=\"hljs-number\">10</span><span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>插入样例数据</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">insert</span> into test_db.user values<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10000</span>,&#x27;wuyanzu&#x27;,&#x27;北京&#x27;,<span class=\"hljs-number\">18</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">12345678910</span>,&#x27;北京朝阳区&#x27;,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">07</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>&#x27;),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10000</span>,&#x27;wuyanzu&#x27;,&#x27;北京&#x27;,<span class=\"hljs-number\">19</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">12345678910</span>,&#x27;北京朝阳区&#x27;,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">07</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>&#x27;),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(<span class=\"hljs-number\">10000</span>,&#x27;zhangsan&#x27;,&#x27;北京&#x27;,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">12345678910</span>,&#x27;北京海淀区&#x27;,&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">11</span>-<span class=\"hljs-number\">15</span> <span class=\"hljs-number\">06</span>:<span class=\"hljs-number\">10</span>:<span class=\"hljs-number\">20</span>&#x27;);<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>查看数据验证</li>\n</ul>\n<p>可以观察结果针对同一个<code>user_id</code>进行的聚合结果</p>\n<p>根据建表语句中<code>UNIQUE KEY(user_id, username)</code>,涉及的字段信息都相同进行去重，如有不同不触发去重</p>\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-Unique.png\"></p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">注意：<br><br><span class=\"hljs-built_in\">Unique</span> 模型完全可以用聚合模型中的 <span class=\"hljs-built_in\">REPLACE</span> 方式替代。其内部的实现方式和数据存储方式也完全一样<br><br>简单的理解就是 <span class=\"hljs-built_in\">Unique</span> 能实现的功能都可以用 <span class=\"hljs-built_in\">Aggregate</span> 实现<br></code></pre></td></tr></table></figure>\n\n<p>补充示例：</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\"># 建表<br><span class=\"hljs-keyword\">CREATE</span> TABLE <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">EXISTS</span> test_db.user_2 <br>(<br>    <span class=\"hljs-symbol\">`user_id`</span> LARGEINT <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> COMMENT <span class=\"hljs-string\">&quot;用户id&quot;</span>,<br>    <span class=\"hljs-symbol\">`username`</span> VARCHAR(<span class=\"hljs-number\">50</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> COMMENT <span class=\"hljs-string\">&quot;用户昵称&quot;</span>,<br>    <span class=\"hljs-symbol\">`city`</span> VARCHAR(<span class=\"hljs-number\">20</span>) <span class=\"hljs-built_in\">REPLACE</span> COMMENT <span class=\"hljs-string\">&quot;用户所在城市&quot;</span>,<br>    <span class=\"hljs-symbol\">`age`</span> SMALLINT <span class=\"hljs-built_in\">REPLACE</span> COMMENT <span class=\"hljs-string\">&quot;用户年龄&quot;</span>,<br>    <span class=\"hljs-symbol\">`sex`</span> TINYINT <span class=\"hljs-built_in\">REPLACE</span> COMMENT <span class=\"hljs-string\">&quot;用户性别&quot;</span>,<br>    <span class=\"hljs-symbol\">`phone`</span> LARGEINT <span class=\"hljs-built_in\">REPLACE</span> COMMENT <span class=\"hljs-string\">&quot;用户电话&quot;</span>,<br>    <span class=\"hljs-symbol\">`address`</span> VARCHAR(<span class=\"hljs-number\">500</span>) <span class=\"hljs-built_in\">REPLACE</span> COMMENT <span class=\"hljs-string\">&quot;用户地址&quot;</span>,<br>    <span class=\"hljs-symbol\">`register_time`</span> DATETIME <span class=\"hljs-built_in\">REPLACE</span> COMMENT <span class=\"hljs-string\">&quot;用户注册时间&quot;</span><br>)<br>AGGREGATE <span class=\"hljs-keyword\">KEY</span>(<span class=\"hljs-symbol\">`user_id`</span>, <span class=\"hljs-symbol\">`username`</span>)<br>DISTRIBUTED <span class=\"hljs-keyword\">BY</span> HASH(<span class=\"hljs-symbol\">`user_id`</span>) BUCKETS <span class=\"hljs-number\">10</span>;<br><br># 插入样例数据<br><span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> test_db.user_2 <span class=\"hljs-keyword\">values</span>\\<br>(<span class=\"hljs-number\">10000</span>,<span class=\"hljs-string\">&#x27;wuyanzu&#x27;</span>,<span class=\"hljs-string\">&#x27;北京&#x27;</span>,<span class=\"hljs-number\">18</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">12345678910</span>,<span class=\"hljs-string\">&#x27;北京朝阳区&#x27;</span>,<span class=\"hljs-string\">&#x27;2017-10-01 07:00:00&#x27;</span>),\\<br>(<span class=\"hljs-number\">10000</span>,<span class=\"hljs-string\">&#x27;wuyanzu&#x27;</span>,<span class=\"hljs-string\">&#x27;北京&#x27;</span>,<span class=\"hljs-number\">19</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">12345678910</span>,<span class=\"hljs-string\">&#x27;北京朝阳区&#x27;</span>,<span class=\"hljs-string\">&#x27;2017-10-01 07:00:00&#x27;</span>),\\<br>(<span class=\"hljs-number\">10000</span>,<span class=\"hljs-string\">&#x27;zhangsan&#x27;</span>,<span class=\"hljs-string\">&#x27;北京&#x27;</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">12345678910</span>,<span class=\"hljs-string\">&#x27;北京海淀区&#x27;</span>,<span class=\"hljs-string\">&#x27;2017-11-15 06:10:20&#x27;</span>);<br><br># 查询验证 发现也是只有2条，成功去重<br>MySQL [test_db]&gt; <span class=\"hljs-keyword\">select</span> user_id,username,city,age <span class=\"hljs-keyword\">from</span> user_2;<br>+---------+----------+--------+------+<br>| user_id | username | city   | age  |<br>+---------+----------+--------+------+<br>| 10000   | wuyanzu  | 北京   |   19 |<br>| 10000   | zhangsan | 北京   |   20 |<br>+---------+----------+--------+------+<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-3-3-Duplicate-使用示例\"><a href=\"#4-3-3-Duplicate-使用示例\" class=\"headerlink\" title=\"4.3.3 Duplicate 使用示例\"></a>4.3.3 Duplicate 使用示例</h5><ul>\n<li>建表</li>\n</ul>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">EXISTS</span> test_db.example_log<br>(<br>    `<span class=\"hljs-type\">timestamp</span>` DATETIME <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> &quot;日志时间&quot;,<br>    `<span class=\"hljs-keyword\">type</span>` <span class=\"hljs-type\">INT</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> &quot;日志类型&quot;,<br>    `error_code` <span class=\"hljs-type\">INT</span> <span class=\"hljs-keyword\">COMMENT</span> &quot;错误码&quot;,<br>    `error_msg` <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">1024</span>) <span class=\"hljs-keyword\">COMMENT</span> &quot;错误详细信息&quot;,<br>    `op_id` <span class=\"hljs-type\">BIGINT</span> <span class=\"hljs-keyword\">COMMENT</span> &quot;负责人id&quot;,<br>    `op_time` DATETIME <span class=\"hljs-keyword\">COMMENT</span> &quot;处理时间&quot;<br>)<br>DUPLICATE KEY(`<span class=\"hljs-type\">timestamp</span>`, `<span class=\"hljs-keyword\">type</span>`)<br>DISTRIBUTED <span class=\"hljs-keyword\">BY</span> HASH(`<span class=\"hljs-type\">timestamp</span>`) BUCKETS <span class=\"hljs-number\">10</span>;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>插入样例数据</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">insert</span> into test_db.example_log values<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">05</span>&#x27;,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">404</span>,&#x27;not found page&#x27;, <span class=\"hljs-number\">101</span>, &#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">05</span>&#x27;),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">05</span>&#x27;,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">404</span>,&#x27;not found page&#x27;, <span class=\"hljs-number\">101</span>, &#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">05</span>&#x27;),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">05</span>&#x27;,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">404</span>,&#x27;not found page&#x27;, <span class=\"hljs-number\">101</span>, &#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">06</span>&#x27;),<span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>(&#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">06</span>&#x27;,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">404</span>,&#x27;not found page&#x27;, <span class=\"hljs-number\">101</span>, &#x27;<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">01</span> <span class=\"hljs-number\">08</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">07</span>&#x27;);<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>查看数据验证</li>\n</ul>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gherkin\">MySQL [test_db]&gt; select <span class=\"hljs-symbol\">*</span> from example_log;<br>+---------------------+------+------------+----------------+-------+---------------------+<br>|<span class=\"hljs-string\"> timestamp           </span>|<span class=\"hljs-string\"> type </span>|<span class=\"hljs-string\"> error_code </span>|<span class=\"hljs-string\"> error_msg      </span>|<span class=\"hljs-string\"> op_id </span>|<span class=\"hljs-string\"> op_time             </span>|<br>+---------------------+------+------------+----------------+-------+---------------------+<br>|<span class=\"hljs-string\"> 2017-10-01 08:00:05 </span>|<span class=\"hljs-string\">    1 </span>|<span class=\"hljs-string\">        404 </span>|<span class=\"hljs-string\"> not found page </span>|<span class=\"hljs-string\">   101 </span>|<span class=\"hljs-string\"> 2017-10-01 08:00:05 </span>|<br>|<span class=\"hljs-string\"> 2017-10-01 08:00:05 </span>|<span class=\"hljs-string\">    1 </span>|<span class=\"hljs-string\">        404 </span>|<span class=\"hljs-string\"> not found page </span>|<span class=\"hljs-string\">   101 </span>|<span class=\"hljs-string\"> 2017-10-01 08:00:05 </span>|<br>|<span class=\"hljs-string\"> 2017-10-01 08:00:05 </span>|<span class=\"hljs-string\">    2 </span>|<span class=\"hljs-string\">        404 </span>|<span class=\"hljs-string\"> not found page </span>|<span class=\"hljs-string\">   101 </span>|<span class=\"hljs-string\"> 2017-10-01 08:00:06 </span>|<br>|<span class=\"hljs-string\"> 2017-10-01 08:00:06 </span>|<span class=\"hljs-string\">    2 </span>|<span class=\"hljs-string\">        404 </span>|<span class=\"hljs-string\"> not found page </span>|<span class=\"hljs-string\">   101 </span>|<span class=\"hljs-string\"> 2017-10-01 08:00:07 </span>|<br>+---------------------+------+------------+----------------+-------+---------------------+<br></code></pre></td></tr></table></figure>\n\n<p>Duplicate 这种数据模型区别于 Aggregate 和 Unique 模型。数据完全按照导入文件中的数据进行存储，不会有任何聚合。即使两行数据完全相同，也都会保留。 而在建表语句中指定的 DUPLICATE KEY，只是用来指明底层数据按照那些列进行排序。</p>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">在 DUPLICATE <span class=\"hljs-keyword\">KEY</span> 的选择上，建议适当的选择前 <span class=\"hljs-number\">2</span>-<span class=\"hljs-number\">4</span> 列就可以，这种数据模型适用于既没有聚合需求，又没有主键唯一性约束的原始数据的存储。<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-4-Doris-web-ui使用\"><a href=\"#4-4-Doris-web-ui使用\" class=\"headerlink\" title=\"4.4 Doris web-ui使用\"></a>4.4 Doris web-ui使用</h4><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">首页可以查看Doris应用部署的版本信息`<span class=\"hljs-keyword\">Version</span>`和对应服务器的硬件信息`Hardware <span class=\"hljs-keyword\">Info</span>`<br><br>页面`Playground`可以进行<span class=\"hljs-keyword\">SQL</span>查询<br><br>页面<span class=\"hljs-keyword\">System</span>可以查看集群的基本信息，例如用户、节点、状态等等情况<br><br>页面<span class=\"hljs-keyword\">Log</span>可以直接查看部署应用的<span class=\"hljs-keyword\">log</span>日志，十分便捷<br><br>页面<span class=\"hljs-keyword\">Session</span> <span class=\"hljs-keyword\">Info</span>可以实时监控当前Doris数据库实时会话信息，例如使用命令行连接数据库，再使用Navicat工具连一个会话，则可以在页面看到当前<span class=\"hljs-number\">2</span>个连接<span class=\"hljs-keyword\">session</span>信息<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-5-Doris丰富的建表示例\"><a href=\"#4-5-Doris丰富的建表示例\" class=\"headerlink\" title=\"4.5 Doris丰富的建表示例\"></a>4.5 Doris丰富的建表示例</h4><p>查看建表帮助</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">HELP <span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span>;<br></code></pre></td></tr></table></figure>\n\n<p>可以查看建表的各类示例</p>\n<figure class=\"highlight inform7\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">Description:<br><br>该语句用于创建 table。<br>语法：<br>​```<br>    CREATE <span class=\"hljs-comment\">[EXTERNAL]</span> TABLE <span class=\"hljs-comment\">[IF NOT EXISTS]</span> <span class=\"hljs-comment\">[database.]</span>table_name<br>    (column_definition1<span class=\"hljs-comment\">[, column_definition2, ...]</span><br>    <span class=\"hljs-comment\">[, index_definition1<span class=\"hljs-comment\">[, index_definition2, ...]</span>]</span>)<br>    <span class=\"hljs-comment\">[ENGINE = <span class=\"hljs-comment\">[olap|mysql|broker|hive|iceberg]</span>]</span><br>    <span class=\"hljs-comment\">[key_desc]</span><br>    <span class=\"hljs-comment\">[COMMENT &quot;table comment&quot;]</span>;<br>    <span class=\"hljs-comment\">[partition_desc]</span><br>    <span class=\"hljs-comment\">[distribution_desc]</span><br>    <span class=\"hljs-comment\">[rollup_index]</span><br>    <span class=\"hljs-comment\">[PROPERTIES (&quot;key&quot;=&quot;value&quot;, ...)]</span><br>    <span class=\"hljs-comment\">[BROKER PROPERTIES (&quot;key&quot;=&quot;value&quot;, ...)]</span><br>​```<br></code></pre></td></tr></table></figure>\n\n<p>例如帮助中有非常丰富的不同场景的建表示例( 都可以通过<code>HELP CREATE TABLE;</code>直接查看获取 )：</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mathematica\">创建一个 <span class=\"hljs-variable\">olap</span> 表，使用 <span class=\"hljs-variable\">HASH</span> 分桶，使用列存，相同<span class=\"hljs-variable\">key</span>的记录进行聚合<br>创建一个 <span class=\"hljs-variable\">olap</span> 表，使用 <span class=\"hljs-built_in\">Hash</span> 分桶，使用列存，相同<span class=\"hljs-variable\">key</span>的记录进行覆盖，<br>创建一个 <span class=\"hljs-variable\">olap</span> 表，使用 <span class=\"hljs-built_in\">Range</span> 分区，使用<span class=\"hljs-built_in\">Hash</span>分桶，默认使用列存，<br>创建一个 <span class=\"hljs-variable\">olap</span> 表，使用 <span class=\"hljs-built_in\">List</span> 分区，使用<span class=\"hljs-built_in\">Hash</span>分桶，默认使用列存，<br>创建一个 <span class=\"hljs-variable\">mysql</span> 表<br>创建一个数据文件存储在<span class=\"hljs-variable\">HDFS</span>上的 <span class=\"hljs-variable\">broker</span> 外部表<span class=\"hljs-operator\">,</span> 数据使用 “<span class=\"hljs-operator\">|</span>” 分割，“\\<span class=\"hljs-variable\">n</span>” 换行<br>创建一张含有<span class=\"hljs-variable\">HLL</span>列的表<br>创建一张含有<span class=\"hljs-type\">BITMAP_UNION</span>聚合类型的表（<span class=\"hljs-variable\">v1</span>和<span class=\"hljs-variable\">v2</span>列的原始数据类型必须是<span class=\"hljs-variable\">TINYINT</span><span class=\"hljs-operator\">,</span><span class=\"hljs-variable\">SMALLINT</span><span class=\"hljs-operator\">,</span><span class=\"hljs-variable\">INT</span>）<br>创建两张支持<span class=\"hljs-variable\">Colocate</span> <span class=\"hljs-built_in\">Join</span>的表<span class=\"hljs-variable\">t1</span> 和<span class=\"hljs-variable\">t2</span><br>创建一个数据文件存储在<span class=\"hljs-variable\">BOS</span>上的 <span class=\"hljs-variable\">broker</span> 外部表<br>创建一个带有<span class=\"hljs-variable\">bitmap</span> 索引的表<br>创建一个动态分区表<span class=\"hljs-punctuation\">(</span>需要在<span class=\"hljs-variable\">FE</span>配置中开启动态分区功能<span class=\"hljs-punctuation\">)</span>，该表每天提前创建<span class=\"hljs-number\">3</span>天的分区，并删除<span class=\"hljs-number\">3</span>天前的分区。例如今天为<span class=\"hljs-number\">2020</span><span class=\"hljs-operator\">-</span><span class=\"hljs-number\">01</span><span class=\"hljs-operator\">-</span><span class=\"hljs-number\">08</span>，则会创建分区名为<span class=\"hljs-variable\">p20200108</span><span class=\"hljs-operator\">,</span> <span class=\"hljs-variable\">p20200109</span><span class=\"hljs-operator\">,</span><br>创建一个带有<span class=\"hljs-variable\">rollup</span>索引的表<br>创建一个内存表<br>创建一个<span class=\"hljs-variable\">hive</span>外部表<br>通过 <span class=\"hljs-type\">replication_allocation</span> 指定表的副本分布<br>创建一个 <span class=\"hljs-variable\">Iceberg</span> 外表<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"五、Doris集群管理\"><a href=\"#五、Doris集群管理\" class=\"headerlink\" title=\"五、Doris集群管理\"></a>五、Doris集群管理</h3><h4 id=\"5-1-配置管理\"><a href=\"#5-1-配置管理\" class=\"headerlink\" title=\"5.1 配置管理\"></a>5.1 配置管理</h4><h5 id=\"5-1-1-FE配置项\"><a href=\"#5-1-1-FE配置项\" class=\"headerlink\" title=\"5.1.1 FE配置项\"></a>5.1.1 FE配置项</h5><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/config/fe-config<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"5-1-2-BE配置项\"><a href=\"#5-1-2-BE配置项\" class=\"headerlink\" title=\"5.1.2 BE配置项\"></a>5.1.2 BE配置项</h5><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/config/be-config<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-2-运维监控\"><a href=\"#5-2-运维监控\" class=\"headerlink\" title=\"5.2 运维监控\"></a>5.2 运维监控</h4><p><strong>监控指标</strong></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">https:<span class=\"hljs-regexp\">//</span>doris.apache.org<span class=\"hljs-regexp\">/zh-CN/</span>docs<span class=\"hljs-regexp\">/admin-manual/m</span>aint-monitor<span class=\"hljs-regexp\">/monitor-metrics/m</span>etrics<br></code></pre></td></tr></table></figure>\n\n<p><strong>磁盘空间管理</strong></p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/maint-monitor/disk-capacity<br></code></pre></td></tr></table></figure>\n\n<p><strong>数据副本管理</strong></p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/maint-monitor/tablet-repair-<span class=\"hljs-keyword\">and</span>-balance<br></code></pre></td></tr></table></figure>\n\n<p><strong>元数据运维</strong></p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/maint-monitor/tablet-repair-<span class=\"hljs-keyword\">and</span>-balance<br><br><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/community/design/metadata-design<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-3-工作负载分析\"><a href=\"#5-3-工作负载分析\" class=\"headerlink\" title=\"5.3 工作负载分析\"></a>5.3 工作负载分析</h4><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/resource-admin/workload-analysis<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-4-SQL拦截\"><a href=\"#5-4-SQL拦截\" class=\"headerlink\" title=\"5.4 SQL拦截\"></a>5.4 SQL拦截</h4><p>sql查询数据超过一定大小拦截，或直接拦截对应sql语句</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/query-admin/sql-interception<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-5-服务自动拉起\"><a href=\"#5-5-服务自动拉起\" class=\"headerlink\" title=\"5.5 服务自动拉起\"></a>5.5 服务自动拉起</h4><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/maint-monitor/automatic-service-start<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-6-OPEN-API使用\"><a href=\"#5-6-OPEN-API使用\" class=\"headerlink\" title=\"5.6 OPEN API使用\"></a>5.6 OPEN API使用</h4><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/open-api/overview<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-7-安全管理\"><a href=\"#5-7-安全管理\" class=\"headerlink\" title=\"5.7 安全管理\"></a>5.7 安全管理</h4><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/auth/authentication-<span class=\"hljs-keyword\">and</span>-authorization<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">#示例<br><span class=\"hljs-keyword\">SHOW</span> <span class=\"hljs-keyword\">ALL</span> GRANTS;<br><span class=\"hljs-keyword\">SHOW</span> GRANTS <span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-string\">&#x27;admin&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span>;<br><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> mysql.<span class=\"hljs-keyword\">user</span>;<br><br>#创建数据库<br><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">DATABASE</span> vota;<br>#创建角色<br><span class=\"hljs-keyword\">show</span> roles;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">ROLE</span> vota_rd <span class=\"hljs-keyword\">COMMENT</span> &quot;vota Read&quot;;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">ROLE</span> vota_rw <span class=\"hljs-keyword\">COMMENT</span> &quot;vota Read and Write Role&quot;;<br>#授予角色权限<br><span class=\"hljs-keyword\">GRANT</span> Select_priv,Load_priv <span class=\"hljs-keyword\">on</span> vota.* <span class=\"hljs-keyword\">to</span> <span class=\"hljs-keyword\">Role</span> <span class=\"hljs-string\">&#x27;vota_rd&#x27;</span>;<br><span class=\"hljs-keyword\">GRANT</span> Select_priv,Load_priv,Alter_priv,Create_priv,Drop_priv <span class=\"hljs-keyword\">on</span> vota.* <span class=\"hljs-keyword\">to</span> <span class=\"hljs-keyword\">Role</span> <span class=\"hljs-string\">&#x27;vota_rw&#x27;</span>;<br>#创建用户<br><span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">user</span> vota;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;vota&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;Vota@126&#x27;</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">ROLE</span> <span class=\"hljs-string\">&#x27;vota_rd&#x27;</span>;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;vota_admin&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;Vota_admin@126&#x27;</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">ROLE</span> <span class=\"hljs-string\">&#x27;vota_rw&#x27;</span>;<br>#密码修改<br><span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">PASSWORD</span> <span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-string\">&#x27;jack&#x27;</span>@<span class=\"hljs-string\">&#x27;192.%&#x27;</span> = <span class=\"hljs-keyword\">PASSWORD</span>(<span class=\"hljs-string\">&#x27;123456&#x27;</span>)<br>#授予用户角色<br><span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-string\">&#x27;vota_rd&#x27;</span> <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">&#x27;vota&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span>;<br><span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-string\">&#x27;vota_rw&#x27;</span> <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">&#x27;vota_admin&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span>;<br>#登录验证<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-8-数据备份恢复\"><a href=\"#5-8-数据备份恢复\" class=\"headerlink\" title=\"5.8 数据备份恢复\"></a>5.8 数据备份恢复</h4><p>表级备份恢复，恢复时需手动创建database，仅支持S3和HDFS备份</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">数据备份：https:<span class=\"hljs-regexp\">//</span>doris.apache.org<span class=\"hljs-regexp\">/zh-CN/</span>docs<span class=\"hljs-regexp\">/admin-manual/</span>data-admin<span class=\"hljs-regexp\">/backup-restore/</span>backup<br>数据恢复：https:<span class=\"hljs-regexp\">//</span>doris.apache.org<span class=\"hljs-regexp\">/zh-CN/</span>docs<span class=\"hljs-regexp\">/admin-manual/</span>data-admin<span class=\"hljs-regexp\">/backup-restore/</span>restore<br>回收站恢复：https:<span class=\"hljs-regexp\">//</span>doris.apache.org<span class=\"hljs-regexp\">/zh-CN/</span>docs<span class=\"hljs-regexp\">/admin-manual/</span>data-admin/recyclebin<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nsis\"><span class=\"hljs-comment\">#查看当前仓库</span><br><span class=\"hljs-literal\">SHOW</span> REPOSITORIES<span class=\"hljs-comment\">;</span><br><span class=\"hljs-comment\">#查看仓库创建语句</span><br><span class=\"hljs-literal\">SHOW</span> CREATE REPOSITORY for &lt;repo_name&gt;<span class=\"hljs-comment\">;</span><br><br><span class=\"hljs-comment\">#创建备份仓库</span><br>CREATE REPOSITORY <span class=\"hljs-string\">`minio_repo`</span><br>WITH S3<br><span class=\"hljs-literal\">ON</span> LOCATION <span class=\"hljs-string\">&quot;s3://doris-backup-bucket/bak&quot;</span><br>PROPERTIES<br>(<br>    <span class=\"hljs-string\">&quot;AWS_ENDPOINT&quot;</span> = <span class=\"hljs-string\">&quot;http://172.16.20.233:9001&quot;</span>,<br>    <span class=\"hljs-string\">&quot;AWS_ACCESS_KEY&quot;</span> = <span class=\"hljs-string\">&quot;admin&quot;</span>,<br>    <span class=\"hljs-string\">&quot;AWS_SECRET_KEY&quot;</span>=<span class=\"hljs-string\">&quot;jzzx123456&quot;</span>,<br>    <span class=\"hljs-string\">&quot;AWS_REGION&quot;</span> = <span class=\"hljs-string\">&quot;REGION&quot;</span>,<br>\t<span class=\"hljs-string\">&quot;use_path_style&quot;</span> = <span class=\"hljs-string\">&quot;true&quot;</span><br>)<span class=\"hljs-comment\">; </span><br><br><br><span class=\"hljs-comment\">#database全量备份</span><br>BACKUP SNAPSHOT destdb.<span class=\"hljs-string\">`destdb_20241225`</span><br>TO example_repo<span class=\"hljs-comment\">;</span><br><br><span class=\"hljs-comment\">#表级恢复</span><br>RESTORE SNAPSHOT testdb.<span class=\"hljs-string\">`snapshot_testdb_20250506`</span><br>FROM <span class=\"hljs-string\">`minio_repo`</span><br><span class=\"hljs-literal\">ON</span><br>(<br>    <span class=\"hljs-string\">`institutional_person_info`</span> AS <span class=\"hljs-string\">`institutional_person_info_bak`</span><br>)<br>PROPERTIES<br>(<br>    <span class=\"hljs-string\">&quot;backup_timestamp&quot;</span>=<span class=\"hljs-string\">&quot;2025-05-06-17-12-40&quot;</span><br>)<span class=\"hljs-comment\">;</span><br><br><br><span class=\"hljs-comment\">#库级恢复</span><br>RESTORE SNAPSHOT destdb.<span class=\"hljs-string\">`restore_label1`</span><br>FROM <span class=\"hljs-string\">`example_repo`</span><br>PROPERTIES<br>(<br>    <span class=\"hljs-string\">&quot;backup_timestamp&quot;</span>=<span class=\"hljs-string\">&quot;2022-04-08-15-52-29&quot;</span><br>)<span class=\"hljs-comment\">;</span><br><br><br><span class=\"hljs-comment\">#单表全量备份</span><br>BACKUP SNAPSHOT testdb.snapshot_sa_code<br>TO minio_repo<br><span class=\"hljs-literal\">ON</span> (sa_code)<br>PROPERTIES (<span class=\"hljs-string\">&quot;type&quot;</span> = <span class=\"hljs-string\">&quot;full&quot;</span>)<span class=\"hljs-comment\">;</span><br><br><span class=\"hljs-comment\">#已存在备份</span><br><span class=\"hljs-literal\">SHOW</span> SNAPSHOT <span class=\"hljs-literal\">ON</span> minio_repo WHERE SNAPSHOT = <span class=\"hljs-string\">&quot;snapshot_sa_code&quot;</span><span class=\"hljs-comment\">;</span><br><br><span class=\"hljs-comment\">#单表恢复</span><br>RESTORE SNAPSHOT test.snapshot_test<br>FROM <span class=\"hljs-string\">`minio_repo`</span><br>PROPERTIES<br>(<br>    <span class=\"hljs-string\">&quot;backup_timestamp&quot;</span>=<span class=\"hljs-string\">&quot;2024-11-14-09-59-33&quot;</span> <br>)<span class=\"hljs-comment\">;</span><br><br><span class=\"hljs-comment\">#查看备份状态</span><br><span class=\"hljs-literal\">show</span> BACKUP\\G<span class=\"hljs-comment\">;</span><br><br><span class=\"hljs-comment\">#取消备份</span><br>CANCEL BACKUP FROM db_name<span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-9-集群升级\"><a href=\"#5-9-集群升级\" class=\"headerlink\" title=\"5.9 集群升级\"></a>5.9 集群升级</h4><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">https:</span>//doris.apache<span class=\"hljs-meta\">.org</span>/<span class=\"hljs-built_in\">zh</span>-CN/docs/admin-manual/cluster-management/upgrade<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"六、Doris断电异常问题处理\"><a href=\"#六、Doris断电异常问题处理\" class=\"headerlink\" title=\"六、Doris断电异常问题处理\"></a>六、Doris断电异常问题处理</h3><figure class=\"highlight mizar\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mizar\">doris fe和<span class=\"hljs-keyword\">be</span>节点因物理机断电，异常关闭，无法正常启动。fe节点元数据文件损坏，<span class=\"hljs-keyword\">be</span>节点tablet副本数据损坏且表数据为单副本。<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"6-1-Doris-fe修复\"><a href=\"#6-1-Doris-fe修复\" class=\"headerlink\" title=\"6.1 Doris fe修复\"></a>6.1 Doris fe修复</h4><p>fe节点启动报错，fe meta数据损坏，错误如下图：</p>\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-fe%E6%95%85%E9%9A%9C.png\"></p>\n<h5 id=\"6-1-1-检查fe集群状态\"><a href=\"#6-1-1-检查fe集群状态\" class=\"headerlink\" title=\"6.1.1 检查fe集群状态\"></a>6.1.1 检查fe集群状态</h5><p>确认fe 集群节点正常，确认master节点正常及损坏节点状态</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">show</span> proc <span class=\"hljs-string\">&#x27;/frontends&#x27;</span>\\G;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"6-1-2-fe损坏节点元数据同步\"><a href=\"#6-1-2-fe损坏节点元数据同步\" class=\"headerlink\" title=\"6.1.2 fe损坏节点元数据同步\"></a>6.1.2 fe损坏节点元数据同步</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 停止 FE</span><br>sh bin/stop_fe.sh<br><br><span class=\"hljs-comment\"># 备份 meta 元数据</span><br><span class=\"hljs-built_in\">cp</span> -r doris-meta doris-meta.bak.$(<span class=\"hljs-built_in\">date</span> +%F)<br><br><span class=\"hljs-comment\"># 删除 BDB 持久化目录</span><br><span class=\"hljs-built_in\">rm</span> -rf doris-meta<br><br><span class=\"hljs-comment\"># 重启 FE，节点会重新与 leader 元数据同步</span><br>./bin/start_fe.sh --helper leader_fe_host:edit_log_port --daemon<br><br><span class=\"hljs-comment\">#查看当前FE状态</span><br>show proc <span class=\"hljs-string\">&#x27;/frontends&#x27;</span>\\G;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"6-1-3-FE-正常恢复启动\"><a href=\"#6-1-3-FE-正常恢复启动\" class=\"headerlink\" title=\"6.1.3 FE 正常恢复启动\"></a>6.1.3 FE 正常恢复启动</h5><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\"><span class=\"hljs-string\">./bin/start_fe.sh</span> <span class=\"hljs-params\">--daemon</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"6-2-Doris-be修复\"><a href=\"#6-2-Doris-be修复\" class=\"headerlink\" title=\"6.2 Doris be修复\"></a>6.2 Doris be修复</h4><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">数据副本管理：https:<span class=\"hljs-regexp\">//</span>doris.apache.org<span class=\"hljs-regexp\">/zh-CN/</span>docs<span class=\"hljs-regexp\">/admin-manual/m</span>aint-monitor/tablet-repair-and-balance<br>参考文档：<br>https:<span class=\"hljs-regexp\">//m</span>p.weixin.qq.com<span class=\"hljs-regexp\">/s/</span>bslbn51o4oltV2ATnuABPA<br>https:<span class=\"hljs-regexp\">//</span>doris-forum.org.cn<span class=\"hljs-regexp\">/questions/</span>D1Pw1/zui-jia-shi-jian-shu-ju-fu-ben-wen-ti-pai-cha-zhi-nan<br>https:<span class=\"hljs-regexp\">//</span>blog.csdn.net<span class=\"hljs-regexp\">/S1124654/</span>article<span class=\"hljs-regexp\">/details/</span><span class=\"hljs-number\">133943714</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"6-2-1-问题现象\"><a href=\"#6-2-1-问题现象\" class=\"headerlink\" title=\"6.2.1 问题现象\"></a>6.2.1 问题现象</h5><p><strong>问题日志</strong></p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">Execution failed: <span class=\"hljs-built_in\">Error</span> Failed <span class=\"hljs-keyword\">to</span> execute sql: java.sql.SQLException: (<span class=\"hljs-attribute\">conn</span>=440550) errCode = 2, detailMessage = Failed <span class=\"hljs-keyword\">to</span> <span class=\"hljs-built_in\">get</span> scan range, <span class=\"hljs-literal\">no</span> queryable replica found <span class=\"hljs-keyword\">in</span> tablet: 89273. Reason: Visible Replicas:Visible version: 2, Replicas: [<span class=\"hljs-attribute\">replicaId</span>=89274, <span class=\"hljs-attribute\">backendId</span>=10452, <span class=\"hljs-attribute\">backendAlive</span>=<span class=\"hljs-literal\">true</span>, <span class=\"hljs-attribute\">version</span>=3, <span class=\"hljs-attribute\">lastFailedVersion</span>=4, <span class=\"hljs-attribute\">lastSuccessVersion</span>=3, <span class=\"hljs-attribute\">lastFailedTimestamp</span>=1723617079544, <span class=\"hljs-attribute\">state</span>=NORMAL].<br><br><br>failed <span class=\"hljs-keyword\">to</span> make snapshot|<span class=\"hljs-attribute\">tablet_id</span>=20176804|schema_hash=1673275255|error=[INTERNAL_ERROR]fail <span class=\"hljs-keyword\">to</span> <span class=\"hljs-built_in\">find</span> path <span class=\"hljs-keyword\">in</span> version_graph. spec_version: 0-81741<br></code></pre></td></tr></table></figure>\n\n<p><strong>问题说明</strong></p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\">查询时，FE让BE返回spec_<span class=\"hljs-keyword\">version</span>范围的数据，但是BE缺部分<span class=\"hljs-keyword\">version</span>了，就会报这个错误；<br></code></pre></td></tr></table></figure>\n\n<p><strong>问题原因</strong></p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">迁移副本过程可能丢<span class=\"hljs-keyword\">version</span>，在<span class=\"hljs-number\">2.0</span>.<span class=\"hljs-number\">3</span>修复了，或者在数据导入过程中<span class=\"hljs-keyword\">be</span>宕机。 <br></code></pre></td></tr></table></figure>\n\n<p><strong>注意:</strong> 如果版本是2.0.1及以前，且它的所有副本last failed version &gt; 0，通常需要重新建表进行导数。</p>\n<h5 id=\"6-2-2-问题定位\"><a href=\"#6-2-2-问题定位\" class=\"headerlink\" title=\"6.2.2 问题定位\"></a><strong>6.2.2 问题定位</strong></h5><p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-be%E6%95%85%E9%9A%9C.webp\"></p>\n<p>如上图所示，查询报错的 tablet_id 是 606202， BE ip是 10.xxx， BE 需要包含version 区间 [0 - 35]。 </p>\n<p>当确定异常tablet_id时，参考如下步骤先进行问题信息收集：</p>\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-be%E6%95%85%E9%9A%9C-1.webp\"></p>\n<p><strong>1. 获取异常tablet的详细信息</strong></p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-comment\">-- 这里是606202，拿到detail cmd</span><br><span class=\"hljs-keyword\">show</span> tablet &#123;tablet_id&#125; <br></code></pre></td></tr></table></figure>\n\n<p><strong>2. 执行DetailCmd</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">SHOW</span> PROC &#x27; /dbs/<span class=\"hljs-number\">10113</span>/<span class=\"hljs-number\">591325</span>/partitions/<span class=\"hljs-number\">606195</span>/<span class=\"hljs-number\">591326</span>/<span class=\"hljs-number\">606202</span><span class=\"hljs-string\">&quot;;</span><br></code></pre></td></tr></table></figure>\n\n<p>找出该BE所在的副本（CompactionStatus url中包含有该BE的ip），如果BackendId等字段显示为-1，说明该tabelt可能已经自动修复或迁移了。</p>\n<p><strong>3. 执行curl&lt;步骤2的CompactionStatus url&gt;(或在浏览器打开该url)</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span>  http://<span class=\"hljs-number\">10</span>.xxx:<span class=\"hljs-number\">8040</span>/api/compaction/show?tablet_id=<span class=\"hljs-number\">606202</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-be%E6%95%85%E9%9A%9C-2.webp\"></p>\n<p>查看该副本的rowset 和 missing_rowset，重点看rowset 的最大版本（这里是34）和 missing_rowsets。从上图可以看出该副本的rowset 为 0 ~ 34， 且中间不缺version(missing_rowsets为空)。而查询语句中是 special  version 是 [0, 35]， 但该BE不含version 35。所以需要给该BE补上version 35。 </p>\n<p><strong>注意</strong>：这里的special version实际就是partition的visible version。它也可以通过如下指令查看。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">show</span> partitions <span class=\"hljs-keyword\">from</span> &lt;<span class=\"hljs-keyword\">table</span>-<span class=\"hljs-type\">name</span> xxx&gt; <span class=\"hljs-keyword\">where</span> PartitionName = <span class=\"hljs-string\">&#x27;&lt;partition name xxx&gt;&#x27;</span> <br></code></pre></td></tr></table></figure>\n\n<h5 id=\"6-2-3-问题处理\"><a href=\"#6-2-3-问题处理\" class=\"headerlink\" title=\"6.2.3 问题处理\"></a>6.2.3 问题处理</h5><p><strong>临时规避方案</strong></p>\n<p>执行下面命令可恢复查询，如果需要全局设置，可以加上 <strong>global</strong> 关键字</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">show variables like <span class=\"hljs-string\">&#x27;%skip%&#x27;</span>;<br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-attribute\">skip_missing_version</span>=<span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-attribute\">skip_bad_tablet</span>=<span class=\"hljs-literal\">true</span>;<br></code></pre></td></tr></table></figure>\n\n<p><strong>1. 确认是否自动修复</strong></p>\n<p>由于doris内部会自动做数据均衡和修复，所以当出现数据副本异常时，先确认异常数据副本能否自动修复：</p>\n<p><img src=\"/%E5%9B%BE%E7%89%87%5Cdoris-be%E6%95%85%E9%9A%9C-3.webp\"></p>\n<p>如果是多副本，查看是否存在健康副本。健康副本是指副本version &gt;&#x3D; special version &amp;&amp; last failed version &#x3D; -1 &amp;&amp; isBad &#x3D; false， 且curl 它的 CompactionStatus， missing rowsets 为空。 </p>\n<p>如果存在这样的副本，把查询报错的副本set bad，如上图所示BackendId为10003上版本远落后于其他两个副本的version，可以通过设置为bad来自动修复。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">ADMIN</span> <span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">REPLICA</span> STATUS PROPERTIES(&quot;tablet_id&quot; = &quot;7552021&quot;, &quot;backend_id&quot; = &quot;10003&quot;, &quot;status&quot; = &quot;bad&quot;);<br></code></pre></td></tr></table></figure>\n\n<p>等待一会（可能需要一两分钟），再执行步骤2中的DetailCmd，如果副本都健康了：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\"><span class=\"hljs-built_in\">version</span> &gt;= special <span class=\"hljs-built_in\">version</span> &amp;&amp; <span class=\"hljs-keyword\">last</span> failed <span class=\"hljs-built_in\">version</span> = <span class=\"hljs-number\">-1</span> &amp;&amp; isBad = <span class=\"hljs-literal\">false</span><br></code></pre></td></tr></table></figure>\n\n<p>且curl它的CompactionStatus,  missing rowsets为空，说明修补OK了。且执行select count (*) from table_xx 是否OK。 </p>\n<p>如果没问题，就自动修复完成了，不用往下看。如果还是有问题，接着往下看。</p>\n<p><strong>2. 重新导数手动修复</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">如果是多个副本都损坏，并且是分区表的情况下，可以删除这个分区，然后手动重建这个分区，重新导入数据即可。<br><br>如果是多个副本都损坏，并且是非分区表的情况下，只能删除这个表重新导入数据。<br></code></pre></td></tr></table></figure>\n\n<p><strong>3. 填充空副本进行修复</strong></p>\n<p><strong>注意</strong>：以上两个方法可以恢复丢失的数据，而填充空副本方法，是插入若干个空rowset，它能恢复读写。但如果丢失的rowset是包含数据的，这种方法实质是丢数据的。单副本修复方法</p>\n<p>空副本修复方式如下：</p>\n<p>1️⃣ <strong>自动修复</strong></p>\n<p>可以先通过 <code>SHOW FRONTEND CONFIG;</code> 命令查看当前版本是否支持该参数。</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">ADMIN <span class=\"hljs-built_in\">SET</span> FRONTEND<span class=\"hljs-built_in\"> CONFIG </span>(<span class=\"hljs-string\">&quot;recover_with_empty_tablet&quot;</span> = <span class=\"hljs-string\">&quot;true&quot;</span>);<br></code></pre></td></tr></table></figure>\n\n<p>2️⃣ <strong>手动修复</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span>  http://<span class=\"hljs-number\">10</span>.xxx:<span class=\"hljs-number\">8040</span>/api/compaction/show?tablet_id=<span class=\"hljs-number\">606202</span><br><span class=\"hljs-attribute\">curl</span> -X POST <span class=\"hljs-string\">&quot;http://10.xxx:8040/api/pad_rowset?tablet_id=606202&amp;start_version=35&amp;end_version=35&quot;</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>异常tablet_id</li>\n<li>start_version 起始版本</li>\n<li>end_version 终止版本</li>\n</ul>\n<p>该功能用于使用一个空的 rowset 填充损坏的副本。这个例子中修补的url中 start_version &#x3D; 35,  end_version &#x3D; 35。 </p>\n<p>这个例子只是缺一个rowset， 实际中可能缺多个（missing rowset，最大version + 1 ~ special version），例如查询中的max_version是9527，但是步骤3查询中数据的最后一行rowsets是[45-9520] 1 DATA …，需要修补的就是9521～9527。 </p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">curl</span> -X POST <span class=\"hljs-string\">&quot;http://10.151.2.29:8040/api/pad_rowset?tablet_id=606202&amp;start_version=9521&amp;end_version=9527&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>修补完之后，再执行下show tablet xxx，该副本last fail version 是否等于 -1，如果它的version都补上了，但是last fail version &#x3D; version + 1， 还需要手工执行把last fail version 改成 -1：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">ADMIN</span> <span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">REPLICA</span> <span class=\"hljs-keyword\">VERSION</span> PROPERTIES(&quot;tablet_id&quot; = &quot;10003&quot;, &quot;backend_id&quot; = &quot;10001&quot;, &quot;last_failed_version&quot; = &quot;-1&quot;); <br></code></pre></td></tr></table></figure>\n\n<p>低版本的doris可能不含这个SQL， 如果不支持这个SQL且是单副本的，通常需要重新建表进行导数。 </p>\n<p>如果没问题，使用：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">select</span> count(*) <span class=\"hljs-keyword\">from</span> &#123;<span class=\"hljs-keyword\">table</span>&#125;;<br><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> &#123;<span class=\"hljs-keyword\">table</span>&#125;;<br></code></pre></td></tr></table></figure>\n\n<p>查看是否可读，可读则说明数据副本问题已处理。</p>\n<p><strong>FAQ</strong></p>\n<p>如果有用户不小心把end_version调大了一轮，spec_version比max_version小，查询可能会出现如下报错</p>\n<figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xquery\">[CANCELLED]missed versions <span class=\"hljs-literal\">is</span><span class=\"hljs-built_in\"> empty</span>, spec_version <span class=\"hljs-number\">307566</span>, max_version <span class=\"hljs-number\">307567</span> tablet<span class=\"hljs-built_in\"> id</span> <span class=\"hljs-number\">11423</span><br></code></pre></td></tr></table></figure>\n\n<p>可以通过指定副本为bad，或者往这个分区导入数据，如果还不行的话可以使用ADMIN-SET-PARTITION-VERSION来指定version。先通过下面这个命令来查看对应分区的<strong>PartitionId</strong>和<strong>VisibleVersion</strong>版本是多少</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">show</span> partitions <span class=\"hljs-keyword\">from</span> &lt;<span class=\"hljs-keyword\">table</span>-<span class=\"hljs-type\">name</span> xxx&gt; <br></code></pre></td></tr></table></figure>\n\n<p>然后使用<strong>ADMIN-SET-PARTITION-VERSION</strong>来指定version为当前的<strong>max_version</strong>。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">ADMIN</span> <span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">TABLE</span> tbl1 <span class=\"hljs-keyword\">PARTITION</span> <span class=\"hljs-keyword\">VERSION</span> PROPERTIES(&quot;partition_id&quot; = &quot;1769152&quot;, &quot;visible_version&quot; = &quot;307567&quot;); <br></code></pre></td></tr></table></figure>\n\n<h5 id=\"6-2-4-数据验证\"><a href=\"#6-2-4-数据验证\" class=\"headerlink\" title=\"6.2.4 数据验证\"></a>6.2.4 数据验证</h5><p>查看副本健康</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\"><span class=\"hljs-keyword\">SHOW</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">PROC</span> &#x27;/<span class=\"hljs-title\">cluster_health</span>/<span class=\"hljs-title\">tablet_health</span>&#x27;</span>;<br></code></pre></td></tr></table></figure>\n\n<p>若数据可以查询，但依旧存在坏副本，可以备份数据，重新进行表数据初始化</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> test_bak <span class=\"hljs-keyword\">as</span> <span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> test;<br><span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">table</span> test;<br><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> test_bak <span class=\"hljs-keyword\">rename</span> test;<br></code></pre></td></tr></table></figure>\n\n<p>验证副本健康</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\"><span class=\"hljs-keyword\">SHOW</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">PROC</span> &#x27;/<span class=\"hljs-title\">cluster_health</span>/<span class=\"hljs-title\">tablet_health</span>&#x27;</span>;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"七、常见问题\"><a href=\"#七、常见问题\" class=\"headerlink\" title=\"七、常见问题\"></a>七、常见问题</h3><h4 id=\"7-1-什么是-priority-networks\"><a href=\"#7-1-什么是-priority-networks\" class=\"headerlink\" title=\"7.1 什么是 priority_networks?\"></a>7.1 什么是 priority_networks?</h4><p>Doris 进程监听 IP 的 CIDR 格式表示的网段。如果部署的机器只有一个网段，可以不用配置。如果有两个或多个网段，务必做配置。</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs armasm\">这个参数主要用于帮助系统选择正确的网卡 <span class=\"hljs-built_in\">IP</span> 作为自己的监听 <span class=\"hljs-built_in\">IP</span>。比如需要监听的 <span class=\"hljs-built_in\">IP</span> 为 <span class=\"hljs-number\">192</span>.<span class=\"hljs-number\">168</span>.<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">1</span>，则可以设置 priority_networks<span class=\"hljs-number\">=192</span>.<span class=\"hljs-number\">168</span>.<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">0</span>/<span class=\"hljs-number\">24</span>，系统会自动扫描机器上的所有 <span class=\"hljs-built_in\">IP</span>，只有匹配上 <span class=\"hljs-number\">192</span>.<span class=\"hljs-number\">168</span>.<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">0</span>/<span class=\"hljs-number\">24</span> 这个网段的才会去作为服务监听地址。这个参数也可以配置多个 CIDR 网段，比如 priority_networks = <span class=\"hljs-number\">10</span>.<span class=\"hljs-number\">10</span>.<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">0</span>/<span class=\"hljs-number\">16</span><span class=\"hljs-comment\">; 192.168.0.0/24。</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"7-2-通过-Web-UI-无法修改-root-密码\"><a href=\"#7-2-通过-Web-UI-无法修改-root-密码\" class=\"headerlink\" title=\"7.2 通过 Web UI 无法修改 root 密码\"></a>7.2 通过 Web UI 无法修改 root 密码</h4><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">当前内置的 Web 控制台，还不能执行 <span class=\"hljs-keyword\">SET</span> 类型的 <span class=\"hljs-keyword\">SQL</span> 语句，所以，在 Web 控制台，当前还不能通过执行 <span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">PASSWORD</span> <span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-string\">&#x27;root&#x27;</span> = <span class=\"hljs-keyword\">PASSWORD</span>(<span class=\"hljs-string\">&#x27;your_password&#x27;</span>) `类似语句来修改 root 的密码，可以通过 MySQL Client 来修改 root 账户的密码。<br></code></pre></td></tr></table></figure>\n\n"},{"title":"Qdrant详解","_content":"\n### 一、介绍\n\n#### 1、 Qdrant 是什么？\n\nQdrant（读作：quadrant）是一个矢量相似性[搜索引擎](https://so.csdn.net/so/search?q=搜索引擎&spm=1001.2101.3001.7020)和矢量数据库。它提供了一个方便的API来存储、搜索和管理点向量的生产就绪服务，并提供了额外的有效负载专门用于扩展过滤支持。这使得在各种神经网络或基于语义的匹配、多面搜索和其他应用方面更加有用。\n\n```\nGithub地址:https://github.com/qdrant/qdrant\n\n官网:https://qdrant.tech/\n\n官方文档:https://qdrant.tech/documentation/\n\n详细的实例参考:https://qdrant.tech/documentation/tutorials/search-beginners/\n```\n\n#### 2、 什么是矢量数据库？\n\n#### ![](图片/矢量数据库.png)\n\n```\n向量数据库是一种旨在高效存储和查询高维向量的数据库。在传统的OLTP和OLAP 数据库中（如上图所示），数据按行和列组织（称为表），并根据这些列中的值执行查询。然而，在某些应用中，包括图像识别、自然语言处理和推荐系统，数据通常表示为高维空间中的向量，这些向量加上 id 和有效负载就是我们在 Qdrant 等向量数据库内存储在称为集合的东西中的元素。\n\n在此上下文中，向量是对象或数据点的数学表示，其中向量的元素隐式或显式地对应于对象的特定特征或属性。例如，在图像识别系统中，向量可以表示图像，向量的每个元素表示像素值或该像素的描述符/特性。在音乐推荐系统中，每个向量可以表示一首歌曲，向量的元素将捕获歌曲的特征，例如节奏、流派、歌词等。\n\n向量数据库针对高效存储和查询这些高维向量进行了优化，它们通常使用专门的数据结构和索引技术，例如用于实现近似最近邻的分层可导航小世界 (HNSW) 和乘积量化等。这些数据库支持快速相似性和语义搜索，同时允许用户根据某种距离度量找到与给定查询向量最接近的向量。最常用的距离度量是欧几里得距离、余弦相似度和点积，Qdrant 完全支持这三种度量。\n```\n\n以下是这三者的简要概述：\n\n```\n余弦相似度- 余弦相似度是一种衡量两个向量相似度的方法。简单来说，它反映的是两个向量是具有相同方向（相似）还是完全不同。余弦相似度通常与文本表示一起使用，以比较两个文档或句子之间的相似度。余弦相似度的输出范围从 -1 到 1，其中 -1 表示两个向量完全不相似，1 表示最大相似度。\n\n点积- 点积相似度度量是测量两个向量相似度的另一种方法。与余弦相似度不同，它还考虑向量的长度。例如，当基于术语（单词）频率构建文档的向量表示时，这可能很重要。点积相似度是通过将两个向量中的相应值相乘，然后对这些乘积求和来计算的。总和越高，两个向量就越相似。如果对向量进行归一化（使它们中的数字总和为 1），则点积相似度将变为余弦相似度。\n\n欧几里得距离- 欧几里得距离是一种测量空间中两点之间距离的方法，类似于我们测量地图上两点之间距离的方法。它的计算方法是求两点坐标平方差之和的平方根。这种距离度量也常用于机器学习，以测量两个向量的相似度或相异度。\n```\n\n#### 3、为什么我们需要矢量数据库\n\n向量数据库在需要相似性搜索的各种应用中起着至关重要的作用，例如推荐系统、基于内容的图像检索和个性化搜索。通过利用其高效的索引和搜索技术，向量数据库可以更快、更准确地检索已表示为向量的非结构化数据，从而帮助向用户展示与其查询最相关的结果。\n\n```\n高维数据的有效存储和索引。\n能够处理具有数十亿数据点的大规模数据集。\n支持实时分析和查询。\n能够处理来自复杂数据类型（例如图像、视频和自然语言文本）的向量。\n提高机器学习和人工智能应用的性能并减少延迟。\n与构建定制解决方案相比，减少了开发和部署的时间和成本。\n```\n\n####  4、Qdrant 架构的高层概述\n\n![](图片/qdrant架构.png)\n\n```\n集合：集合是一组命名的点（带有有效载荷的向量），您可以在其中进行搜索。同一个集合中每个点的向量必须具有相同的维数，并按单个指标进行比较。命名向量可用于在单个点中拥有多个向量，每个向量可以有自己的维数和指标要求。\n\n距离度量：这些度量用于测量向量之间的相似性，必须在创建集合时选择它们。度量的选择取决于获取向量的方式，特别是用于编码新查询的神经网络。\n\n点：点是 Qdrant 操作的中心实体，由一个向量和一个可选的 id 和有效载荷组成。\n   id：向量的唯一标识符。\n   向量：数据的高维表示，例如图像、声音、文档、视频等。\n   有效载荷：有效载荷是一个 JSON 对象，其中包含可添加到向量的附加数据。\n\n存储：Qdrant 可以使用两种存储选项之一，内存存储（将所有向量存储在 RAM 中，由于仅在持久性时才需要磁盘访问，因此速度最快），或Memmap存储（创建与磁盘上的文件关联的虚拟地址空间）。\n\n客户端：您可以用来连接 Qdrant 的编程语言。\n```\n\n### 二、分布式集群部署\n\n```\ndocker-compose方式进行分布式集群部署。\n官方文档：https://qdrant.tech/documentation/guides/distributed_deployment/\n基本要求：\n分片的数量必须是集群中当前运行的节点数量的倍数，最好为2倍\n集合的复制因子至少为2，否则集群功能无法正常使用\n```\n\n#### 1、节点规划\n\n| HOST                  | PORT      | 数据目录 | config                       | snapshots   | logs   | bin   |\n| --------------------- | --------- | -------- | ---------------------------- | ----------- | ------ | ----- |\n| 172.16.20.65/ledger   | 6333-6335 | ./data   | ./config/cluster_config.yaml | ./snapshots | ./logs | ./bin |\n| 172.16.20.46/follower | 6333-6335 | ./data   | ./config/cluster_config.yaml | ./snapshots | ./logs | ./bin |\n| 172.16.20.90/follower | 6333-6335 | ./data   | ./config/cluster_config.yaml | ./snapshots | ./logs | ./bin |\n\n#### 2、qdrant集群部署\n\n##### 2.1 镜像下载对应版本\n\n```\ndocker pull qdrant/qdrant：v1.13.3\n```\n\n##### 2.2 创建部署目录\n\n```\nmkdir -p /data/program/qdrant/{data,config,sanpshots,logs,bin}\n```\n\n##### 2.3 配置文件\n\n```\n官方配置参考：https://github.com/qdrant/qdrant/tree/master/config/\n```\n\n下载v1.13.3版本config.yaml进行配置，集群三节点配置内容相同，参考配置：\n\nvim /data/program/qdrant/config/cluster_config.yaml\n\n```\nlog_level: INFO\n\n# Logging configuration\n# Qdrant logs to stdout. You may configure to also write logs to a file on disk.\n# Be aware that this file may grow indefinitely.\nlogger:\n  on_disk:\n    enabled: true\n    log_file: /qdrant/logs/qdrant.log\n    log_level: INFO\n    # Logging format, supports `text` and `json`\n    format: json\n\nstorage:\n  # Where to store all the data\n  storage_path: ./storage\n\n  # Where to store snapshots\n  snapshots_path: ./qdrant_snapshots\n\n  snapshots_config:\n    # \"local\" or \"s3\" - where to store snapshots\n    snapshots_storage: s3\n    s3_config:\n      bucket: \"qdrant-bucket\"\n      region: \"REGION\"\n      access_key: \"admin\"\n      secret_key: \"123456\"\n      endpoint_url: \"http://112.16.20.1:9001\"\n\n  # Where to store temporary files\n  # If null, temporary snapshots are stored in: storage/snapshots_temp/\n  temp_path: null\n\n  # If true - point payloads will not be stored in memory.\n  # It will be read from the disk every time it is requested.\n  # This setting saves RAM by (slightly) increasing the response time.\n  # Note: those payload values that are involved in filtering and are indexed - remain in RAM.\n  # \n  # Default: true\n  on_disk_payload: true\n\n  # Maximum number of concurrent updates to shard replicas\n  # If `null` - maximum concurrency is used.\n  update_concurrency: null\n\n  # Write-ahead-log related configuration\n  wal:\n    # Size of a single WAL segment\n    wal_capacity_mb: 32\n\n    # Number of WAL segments to create ahead of actual data requirement\n    wal_segments_ahead: 0\n\n  # Normal node - receives all updates and answers all queries\n  node_type: \"Normal\"\n\n  # Listener node - receives all updates, but does not answer search/read queries\n  # Useful for setting up a dedicated backup node\n  # node_type: \"Listener\"\n\n  performance:\n    # Number of parallel threads used for search operations. If 0 - auto selection.\n    max_search_threads: 0\n\n    # Max number of threads (jobs) for running optimizations across all collections, each thread runs one job.\n    # If 0 - have no limit and choose dynamically to saturate CPU.\n    # Note: each optimization job will also use `max_indexing_threads` threads by itself for index building.\n    max_optimization_threads: 0\n\n    # CPU budget, how many CPUs (threads) to allocate for an optimization job.\n    # If 0 - auto selection, keep 1 or more CPUs unallocated depending on CPU size\n    # If negative - subtract this number of CPUs from the available CPUs.\n    # If positive - use this exact number of CPUs.\n    optimizer_cpu_budget: 0\n\n    # Prevent DDoS of too many concurrent updates in distributed mode.\n    # One external update usually triggers multiple internal updates, which breaks internal\n    # timings. For example, the health check timing and consensus timing.\n    # If null - auto selection.\n    update_rate_limit: null\n\n    # Limit for number of incoming automatic shard transfers per collection on this node, does not affect user-requested transfers.\n    # The same value should be used on all nodes in a cluster.\n    # Default is to allow 1 transfer.\n    # If null - allow unlimited transfers.\n    #incoming_shard_transfers_limit: 1\n\n    # Limit for number of outgoing automatic shard transfers per collection on this node, does not affect user-requested transfers.\n    # The same value should be used on all nodes in a cluster.\n    # Default is to allow 1 transfer.\n    # If null - allow unlimited transfers.\n    #outgoing_shard_transfers_limit: 1\n\n    # Enable async scorer which uses io_uring when rescoring.\n    # Only supported on Linux, must be enabled in your kernel.\n    # See: <https://qdrant.tech/articles/io_uring/#and-what-about-qdrant>\n    #async_scorer: false\n\n  optimizers:\n    # The minimal fraction of deleted vectors in a segment, required to perform segment optimization\n    deleted_threshold: 0.2\n\n    # The minimal number of vectors in a segment, required to perform segment optimization\n    vacuum_min_vector_number: 1000\n\n    # Target amount of segments optimizer will try to keep.\n    # Real amount of segments may vary depending on multiple parameters:\n    #  - Amount of stored points\n    #  - Current write RPS\n    #\n    # It is recommended to select default number of segments as a factor of the number of search threads,\n    # so that each segment would be handled evenly by one of the threads.\n    # If `default_segment_number = 0`, will be automatically selected by the number of available CPUs\n    default_segment_number: 0\n\n    # Do not create segments larger this size (in KiloBytes).\n    # Large segments might require disproportionately long indexation times,\n    # therefore it makes sense to limit the size of segments.\n    #\n    # If indexation speed have more priority for your - make this parameter lower.\n    # If search speed is more important - make this parameter higher.\n    # Note: 1Kb = 1 vector of size 256\n    # If not set, will be automatically selected considering the number of available CPUs.\n    max_segment_size_kb: null\n\n    # Maximum size (in KiloBytes) of vectors to store in-memory per segment.\n    # Segments larger than this threshold will be stored as read-only memmapped file.\n    # To enable memmap storage, lower the threshold\n    # Note: 1Kb = 1 vector of size 256\n    # To explicitly disable mmap optimization, set to `0`.\n    # If not set, will be disabled by default.\n    memmap_threshold_kb: null\n\n    # Maximum size (in KiloBytes) of vectors allowed for plain index.\n    # Default value based on https://github.com/google-research/google-research/blob/master/scann/docs/algorithms.md\n    # Note: 1Kb = 1 vector of size 256\n    # To explicitly disable vector indexing, set to `0`.\n    # If not set, the default value will be used.\n    indexing_threshold_kb: 20000\n\n    # Interval between forced flushes.\n    flush_interval_sec: 5\n\n    # Max number of threads (jobs) for running optimizations per shard.\n    # Note: each optimization job will also use `max_indexing_threads` threads by itself for index building.\n    # If null - have no limit and choose dynamically to saturate CPU.\n    # If 0 - no optimization threads, optimizations will be disabled.\n    max_optimization_threads: null\n\n  # This section has the same options as 'optimizers' above. All values specified here will overwrite the collections\n  # optimizers configs regardless of the config above and the options specified at collection creation.\n  #optimizers_overwrite:\n  #  deleted_threshold: 0.2\n  #  vacuum_min_vector_number: 1000\n  #  default_segment_number: 0\n  #  max_segment_size_kb: null\n  #  memmap_threshold_kb: null\n  #  indexing_threshold_kb: 20000\n  #  flush_interval_sec: 5\n  #  max_optimization_threads: null\n\n  # Default parameters of HNSW Index. Could be overridden for each collection or named vector individually\n  hnsw_index:\n    # Number of edges per node in the index graph. Larger the value - more accurate the search, more space required.\n    m: 16\n\n    # Number of neighbours to consider during the index building. Larger the value - more accurate the search, more time required to build index.\n    ef_construct: 100\n\n    # Minimal size (in KiloBytes) of vectors for additional payload-based indexing.\n    # If payload chunk is smaller than `full_scan_threshold_kb` additional indexing won't be used -\n    # in this case full-scan search should be preferred by query planner and additional indexing is not required.\n    # Note: 1Kb = 1 vector of size 256\n    full_scan_threshold_kb: 10000\n\n    # Number of parallel threads used for background index building.\n    # If 0 - automatically select.\n    # Best to keep between 8 and 16 to prevent likelihood of building broken/inefficient HNSW graphs.\n    # On small CPUs, less threads are used.\n    max_indexing_threads: 0\n\n    # Store HNSW index on disk. If set to false, index will be stored in RAM. Default: false\n    on_disk: false\n\n    # Custom M param for hnsw graph built for payload index. If not set, default M will be used.\n    payload_m: null\n\n  # Default shard transfer method to use if none is defined.\n  # If null - don't have a shard transfer preference, choose automatically.\n  # If stream_records, snapshot or wal_delta - prefer this specific method.\n  # More info: https://qdrant.tech/documentation/guides/distributed_deployment/#shard-transfer-method\n  shard_transfer_method: null\n\n  # Default parameters for collections\n  collection:\n    # Number of replicas of each shard that network tries to maintain\n    replication_factor: 2\n\n    # How many replicas should apply the operation for us to consider it successful\n    write_consistency_factor: 1\n\n    # Default parameters for vectors.\n    vectors:\n      # Whether vectors should be stored in memory or on disk.\n      on_disk: null\n\n    # shard_number_per_node: 1\n\n    # Default quantization configuration.\n    # More info: https://qdrant.tech/documentation/guides/quantization\n    quantization: null\n\n    # Default strict mode parameters for newly created collections.\n    strict_mode:\n      # Whether strict mode is enabled for a collection or not.\n      enabled: false\n\n      # Max allowed `limit` parameter for all APIs that don't have their own max limit.\n      max_query_limit: null\n\n      # Max allowed `timeout` parameter.\n      max_timeout: null\n\n      # Allow usage of unindexed fields in retrieval based (eg. search) filters.\n      unindexed_filtering_retrieve: null\n\n      # Allow usage of unindexed fields in filtered updates (eg. delete by payload).\n      unindexed_filtering_update: null\n\n      # Max HNSW value allowed in search parameters.\n      search_max_hnsw_ef: null\n\n      # Whether exact search is allowed or not.\n      search_allow_exact: null\n\n      # Max oversampling value allowed in search.\n      search_max_oversampling: null\n\nservice:\n  # Maximum size of POST data in a single request in megabytes\n  max_request_size_mb: 32\n\n  # Number of parallel workers used for serving the api. If 0 - equal to the number of available cores.\n  # If missing - Same as storage.max_search_threads\n  max_workers: 0\n\n  # Host to bind the service on\n  host: 0.0.0.0\n\n  # HTTP(S) port to bind the service on\n  http_port: 6333\n\n  # gRPC port to bind the service on.\n  # If `null` - gRPC is disabled. Default: null\n  # Comment to disable gRPC:\n  grpc_port: 6334\n\n  # Enable CORS headers in REST API.\n  # If enabled, browsers would be allowed to query REST endpoints regardless of query origin.\n  # More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\n  # Default: true\n  enable_cors: true\n\n  # Enable HTTPS for the REST and gRPC API\n  enable_tls: false\n\n  # Check user HTTPS client certificate against CA file specified in tls config\n  verify_https_client_certificate: false\n\n  # Set an api-key.\n  # If set, all requests must include a header with the api-key.\n  # example header: `api-key: <API-KEY>`\n  #\n  # If you enable this you should also enable TLS.\n  # (Either above or via an external service like nginx.)\n  # Sending an api-key over an unencrypted channel is insecure.\n  #\n  # Uncomment to enable.\n  api_key: '123456'\n\n  # Set an api-key for read-only operations.\n  # If set, all requests must include a header with the api-key.\n  # example header: `api-key: <API-KEY>`\n  #\n  # If you enable this you should also enable TLS.\n  # (Either above or via an external service like nginx.)\n  # Sending an api-key over an unencrypted channel is insecure.\n  #\n  # Uncomment to enable.\n  read_only_api_key: '123'\n\n  # Uncomment to enable JWT Role Based Access Control (RBAC).\n  # If enabled, you can generate JWT tokens with fine-grained rules for access control.\n  # Use generated token instead of API key.\n  #\n  jwt_rbac: true\n\n  # Hardware reporting adds information to the API responses with a\n  # hint on how many resources were used to execute the request.\n  #\n  # Uncomment to enable.\n  # hardware_reporting: true\ncluster:\n  # Use `enabled: true` to run Qdrant in distributed deployment mode\n  enabled: true\n\n  # Configuration of the inter-cluster communication\n  p2p:\n    # Port for internal communication between peers\n    port: 6335\n\n    # Use TLS for communication between peers\n    enable_tls: false\n\n  # Configuration related to distributed consensus algorithm\n  consensus:\n    # How frequently peers should ping each other.\n    # Setting this parameter to lower value will allow consensus\n    # to detect disconnected nodes earlier, but too frequent\n    # tick period may create significant network and CPU overhead.\n    # We encourage you NOT to change this parameter unless you know what you are doing.\n    tick_period_ms: 100\n    # Compact consensus operations once we have this amount of applied\n    # operations. Allows peers to join quickly with a consensus snapshot without\n    # replaying a huge amount of operations.\n    # If 0 - disable compaction\n    #compact_wal_entries: 128\n\n# Set to true to prevent service from sending usage statistics to the developers.\n# Read more: https://qdrant.tech/documentation/guides/telemetry\ntelemetry_disabled: false\n\n# TLS configuration.\n# Required if either service.enable_tls or cluster.p2p.enable_tls is true.\ntls:\n  # Server certificate chain file\n  cert: ./tls/cert.pem\n\n  # Server private key file\n  key: ./tls/key.pem\n\n  # Certificate authority certificate file.\n  # This certificate will be used to validate the certificates\n  # presented by other nodes during inter-cluster communication.\n  #\n  # If verify_https_client_certificate is true, it will verify\n  # HTTPS client certificate\n  #\n  # Required if cluster.p2p.enable_tls is true.\n  ca_cert: ./tls/cacert.pem\n\n  # TTL in seconds to reload certificate from disk, useful for certificate rotations.\n  # Only works for HTTPS endpoints. Does not support gRPC (and intra-cluster communication).\n  # If `null` - TTL is disabled.\n  cert_ttl: 3600\n```\n\n##### 2.4 初始化qdrant集群\n\n```\n参考文档：https://qdrant.tech/documentation/guides/distributed_deployment/\n```\n\n配置初始化ledger节点（172.16.20.65）：\n\nvim /data/program/qdrant/qdrant.yaml\n\n```\nservices:\n  qdrant:\n    image: qdrant/qdrant:v1.13.3\n    restart: always\n    container_name: qdrant\n    #ledger node  \n    command: ./qdrant --uri 'http://172.16.20.65:6335'\n    ports:\n      - 6333:6333\n      - 6334:6334\n      - 6335:6335\n    volumes:\n      - ./data:/qdrant/storage\n      - ./snapshots:/qdrant/snapshots\n      - ./logs:/qdrant/logs\n      - ./config/cluster_config.yaml:/qdrant/config/production.yaml\n```\n\n配置初始化follower节点（172.16.20.46,172.16.20.90）：\n\nvim /data/program/qdrant/qdrant.yaml\n\n```\nservices:\n  qdrant:\n    image: qdrant/qdrant:v1.13.3\n    restart: always\n    container_name: qdrant\n    #join node\n    command: ./qdrant --bootstrap 'http://172.16.20.65:6335'\n    ports:\n      - 6333:6333\n      - 6334:6334\n      - 6335:6335\n    volumes:\n      - ./data:/qdrant/storage\n      - ./snapshots:/qdrant/snapshots\n      - ./logs:/qdrant/logs\n      - ./config/cluster_config.yaml:/qdrant/config/production.yaml\n```\n\n三节点依次启动集群\n\n```\ncd /data/program/qdrant/\ndocker-compose -f qdrant.yaml up -d\n```\n\n启动完成，登录前台http://172.16.20.46:6333/dashboard，验证集群状态\n\nGET _cluster\n\n```\n{\n  \"result\": {\n    \"status\": \"enabled\",\n    \"peer_id\": 4080902811012997,\n    \"peers\": {\n      \"1993017374776241\": {\n        \"uri\": \"http://172.16.20.90:6335/\"\n      },\n      \"5880012902421225\": {\n        \"uri\": \"http://172.16.20.65:6335/\"\n      },\n      \"4080902811012997\": {\n        \"uri\": \"http://172.16.20.46:6335/\"\n      }\n    },\n    \"raft_info\": {\n      \"term\": 83,\n      \"commit\": 304,\n      \"pending_operations\": 0,\n      \"leader\": 5880012902421225,\n      \"role\": \"Follower\",\n      \"is_voter\": true\n    },\n    \"consensus_thread_status\": {\n      \"consensus_thread_status\": \"working\",\n      \"last_update\": \"2025-03-21T10:02:37.289807369Z\"\n    },\n    \"message_send_failures\": {}\n  },\n  \"status\": \"ok\",\n  \"time\": 0.000019005\n}\n```\n\n##### 2.5 恢复集群正常启动配置\n\n配置三节点启动docker-compose文件，修改分布式集群启动方式\n\nvim /data/program/qdrant/qdrant.yaml\n\n```\nservices:\n  qdrant:\n    image: qdrant/qdrant:v1.13.3\n    restart: always\n    container_name: qdrant\n    #cluster node\n    command: ./qdrant\n    ports:\n      - 6333:6333\n      - 6334:6334\n      - 6335:6335\n    volumes:\n      - ./data:/qdrant/storage\n      - ./snapshots:/qdrant/snapshots\n      - ./logs:/qdrant/logs\n      - ./config/cluster_config.yaml:/qdrant/config/production.yaml\n```\n\n启动完成，登录前台http://172.16.20.46:6333/dashboard，验证集群状态\n\nGET _cluster\n\n```\n{\n  \"result\": {\n    \"status\": \"enabled\",\n    \"peer_id\": 4080902811012997,\n    \"peers\": {\n      \"1993017374776241\": {\n        \"uri\": \"http://172.16.20.90:6335/\"\n      },\n      \"5880012902421225\": {\n        \"uri\": \"http://172.16.20.65:6335/\"\n      },\n      \"4080902811012997\": {\n        \"uri\": \"http://172.16.20.46:6335/\"\n      }\n    },\n    \"raft_info\": {\n      \"term\": 83,\n      \"commit\": 304,\n      \"pending_operations\": 0,\n      \"leader\": 5880012902421225,\n      \"role\": \"Follower\",\n      \"is_voter\": true\n    },\n    \"consensus_thread_status\": {\n      \"consensus_thread_status\": \"working\",\n      \"last_update\": \"2025-03-21T10:02:37.289807369Z\"\n    },\n    \"message_send_failures\": {}\n  },\n  \"status\": \"ok\",\n  \"time\": 0.000019005\n}\n```\n\n#### 3、qdrant集群升级\n\n```\n前提条件：\n拥有多节点集群，并且您的集合的复制因子至少为2，则升级过程将零停机时间并以滚动方式完成。您将能够正常使用您的数据库集群。\n有一个单节点集群或复制因子为1的集合，则升级过程将需要短暂的停机时间来使用新版本重新启动集群。\n集群启动方式不能已初始化方式启动，否则升级过程将选举失败,且无法回退。\n```\n\n##### 3.1 集群集合备份\n\n```\n集群集合备份，并确认快照可用,可正常恢复\n```\n\n##### 3.2 检查集群状态\n\n验证集群是否为green,且确认每个节点role，默认ledger最后升级\n\n```\nGET _cluster\n```\n\n##### 3.3 下载新版本镜像\n\n1.13.3 -> 1.13.5\n\n```\ndocker pull qdrant/qdrant：v1.13.5\n```\n\n##### 3.4 下载新版本配置文件\n\n```\n官方配置参考：https://github.com/qdrant/qdrant/tree/master/config/\n\n选择config.yml，并与旧配置内容进行比对，进行调整，上传至配置文件目录\n```\n\n##### 3.5 停止旧节点\n\n```\ncd /data/program/qdrant/\ndocker-compose -f qdrant.yaml down\n```\n\n##### 3.6 修改镜像版本\n\n```\ncat qdrant.yaml | grep image\nimage: qdrant/qdrant:v1.13.5\n```\n\n##### 3.7 重新启动节点\n\n```\ncd /data/program/qdrant/\ndocker-compose -f qdrant.yaml up -d\n```\n\n##### 3.8 验证集群状态\n\n```\nGET _cluster\n```\n\n验证集群状态是否为green,等待集群选举完成，其他节点进行如上操作升级集群。\n\n#### 4、集群扩缩容\n\n##### 4.1 扩容\n\n参考集群部署2.1-2.4，同步其他节点cluster_config.yaml\n\n初始化连接集群ledger\n\nvim /data/program/qdrant/qdrant.yaml\n\n```\nservices:\n  qdrant:\n    image: qdrant/qdrant:v1.13.3\n    restart: always\n    container_name: qdrant\n    #join node\n    command: ./qdrant --bootstrap 'http://${ledger_ip}:6335'\n    ports:\n      - 6333:6333\n      - 6334:6334\n      - 6335:6335\n    volumes:\n      - ./data:/qdrant/storage\n      - ./snapshots:/qdrant/snapshots\n      - ./logs:/qdrant/logs\n      - ./config/cluster_config.yaml:/qdrant/config/production.yaml\n```\n\n启动完成，登录前台http://172.16.20.46:6333/dashboard，验证集群状态\n\n```\nGET _cluster\n```\n\n恢复新节点正常启动配置\n\n```\nservices:\n  qdrant:\n    image: qdrant/qdrant:v1.13.3\n    restart: always\n    container_name: qdrant\n    #cluster node\n    command: ./qdrant\n    ports:\n      - 6333:6333\n      - 6334:6334\n      - 6335:6335\n    volumes:\n      - ./data:/qdrant/storage\n      - ./snapshots:/qdrant/snapshots\n      - ./logs:/qdrant/logs\n      - ./config/cluster_config.yaml:/qdrant/config/production.yaml\n```\n\n启动完成，验证集群状态\n\n##### 4.2 缩容\n\n移动缩容节点分片至其他节点\n\n```\ncurl -X POST http://localhost:6333/collections/collection_name/cluster \\\n     -H \"api-key: qdrant@1133\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"move_shard\": {\n    \"shard_id\": 0,\n    \"to_peer_id\": 2120809141859359,\n    \"from_peer_id\": 3306291262481813\n  }\n}'\n```\n\n删除旧节点\n\n```\ncurl -X DELETE \"http://localhost:6333/cluster/peer/2120809141859359\" \\\n     -H \"api-key: qdrant@1133\"\n```\n\n验证集群状态\n\n```\nGET _cluster\n```\n\n### 三、qdrant权限管理\n\n```\n官方文档：https://qdrant.tech/documentation/guides/security\n```\n\njwt_token配置，需要python3环境，PyJwt模块\n\nvim /data/program/qdrant/bin/token.py\n\n```\nimport jwt\n\n#key为配置文件中api_key的值\nkey = \"123456\n    \nencoded = jwt.encode({\n    \"access\": [\n        {\n        \"collection\": \"test1\",\n        \"access\": \"r\"\n        },\n        {\n        \"collection\": \"test2\",\n        \"access\": \"rw\"\n        }\n    ]\n}, key, algorithm=\"HS256\")\nprint(encoded)\n```\n\n生成token\n\n```\n在access中编写对应collections和access，编写完成后，执行脚本生成token\n\ncd /data/program/qdrant/\npython3 bin/token.py\n```\n\n### 四、集群备份与恢复\n\n```\n官方文档：https://qdrant.tech/documentation/concepts/snapshots/\n```\n\n```\n在分布式设置中，当集群中有多个节点时，处理单个集合时必须为每个节点分别创建快照，单个快照将仅包含创建快照的节点上存储的数据。恢复时，恢复当前节点的快照数据\n```\n\n#### 1、备份恢复管理脚本\n\nqdbak.sh需要配置S3备份数据路径和备份工具，以及集群api_key，并将脚本上传至集群每个节点\n\n```\nvim /data/program/qdrant/bin/qdbak.sh\n\nexport tools=\"/usr/local/bin/mc\"\n\nexport snapshots_path=\"qdrant_snapshots\"\n\nexport S3_dir=\"minio-server/qdrant-bucket/${snapshots_path}\"\n\nexport api_key=\"F24CF34BBC63901A5C401A25F51C1339\"\n```\n\n常用命令：\n\n```\n./qdbak.sh \nUsage: qdbak [options] [args]\n  option:\n    -L         show qdrant backup\n    -A         backup all collection\n    -B         backup collection\n    -R         Restore collection\n    -b <ver>   set collection name, default is null\n    -s <ver>   set restore snapshots name, default is null\n```\n\n#### 2、备份\n\n备份只备份当前节点数据\n\n##### 2.1 创建单个集合快照\n\n```\n./qdbak.sh -b test -B\n\n2025-03-23 14:09:42 INFO Start backup collection: test\n2025-03-23 14:18:39 INFO Snapshot creation successful for test.\n2025-03-23 14:18:39 INFO Remove overdue snapshots in docker successful for test.\n2025-03-23 14:18:39 INFO End backup collection: test.\n```\n\n##### 2.2 创建所有集合快照\n\n```\n./qdbak.sh -A\n\n2025-03-24 10:30:01 INFO Action begin: backup_all_collection\n2025-03-24 10:30:01 INFO Starting ...\n2025-03-24 10:30:01 INFO Start backup collection: zy_test_bq_s8\n2025-03-24 10:45:09 INFO Snapshot creation successful for zy_test_bq_s8.\n2025-03-24 10:45:09 INFO Remove overdue snapshots in docker successful for zy_test_bq_s8.\n2025-03-24 10:45:09 INFO End backup collection: zy_test_bq_s8.\n2025-03-24 10:45:09 INFO Start backup collection: opinion_history_test\n2025-03-24 10:45:49 INFO Snapshot creation successful for opinion_history_test.\n2025-03-24 10:45:49 INFO Remove overdue snapshots in docker successful for opinion_history_test.\n2025-03-24 10:45:49 INFO End backup collection: opinion_history_test.\n2025-03-24 11:03:01 INFO  All collections has been backuped.\n2025-03-24 11:03:01 INFO Action successed: backup_all_collection\n```\n\n#### 3、恢复\n\n查看恢复快照名称和节点\n\n```\n./qdbak.sh -L\n```\n\n恢复单个集合当前节点的快照（快照恢复两个节点数据完成恢复且可以正常使用）\n\n```\n./qdbak.sh -s test-1993017374776241-2025-03-21-05-41-23.snapshot -R\n```\n\n恢复完成后，查看集合数据是否正常\n\n```\nGET collections/test\n```\n\n### 五、集群监控与遥测\n\n```\n官方文档：https://qdrant.tech/documentation/guides/monitoring/\njson_export文档: https://github.com/prometheus-community/json_exporter\nprometheus文档：https://prometheus.io/docs/prometheus/latest/configuration/configuration/#http_config\n```\n\n#### 1、 节点指标`/metrics`\n\n```\n指标端点：http://localhost:6333/metrics\n```\n\nqdrant开启api_key和read_only_key时，采集配置需要配置authorization.credentials值\n\n```\n  - job_name: 'qdrant-exporter'\n    metrics_path: /metrics\n    scheme: \"http\"\n    authorization:\n      credentials: \"123\"\n```\n\n#### **2、遥测端点`/telemetry`**\n\n输出结果为json格式，通过json_export进行采集配置,json_export只需要部署单节点即可\n\n```\nhttp://172.16.20.46:6333/telemetry?details_level=3\n```\n\njson_export的config.yml\n\n```\nmodules:\n  qdrant:\n    headers:\n      X-Dummy: my-test-header\n    http_client_config:\n      authorization:\n        credentials: '123'\n    metrics:\n    - name: qdrant_collection_vectors\n      type: object\n      path: \"{.result.collections.collections[*]}\"\n      labels:\n        collection_id: \"{.id}\"\n        distance: \"{.config.params.vectors.distance}\"\n      values:\n        size: '{.config.params.vectors.size}'\n        on_disk_enable: '{.config.params.vectors.on_disk}'\n      help: \"vaule of vectors per collection\"\n```\n\nprometheus.yml\n\n```\n  - job_name: json_exporter\n    static_configs:\n    - targets:\n      - 172.16.20.65:7979\n\n  - job_name: 'qdrant_telemetry'\n    metrics_path: /probe\n    params:\n      module: [qdrant]\n    static_configs:\n    - targets:\n      - \"http://172.16.20.65:6333/telemetry?details_level=3\"\n      labels:\n        ident: qdrant-20-65-test-shenzhen-office\n    - targets:\n      - \"http://172.16.20.46:6333/telemetry?details_level=3\"\n      labels:\n        ident: qdrant-20-46-test-shenzhen-office\n    - targets:\n      - \"http://172.16.20.90:6333/telemetry?details_level=3\"\n      labels:\n        ident: qdrant-20-90-test-shenzhen-office\n    relabel_configs:\n      - source_labels: [__address__]\n        target_label: __param_target\n      - source_labels: [__param_target]\n        target_label: instance\n      - target_label: __address__\n        replacement: 172.16.20.65:7979\n```\n\n#### 3、集合分片信息采集\n\n编写数据采集脚本，collection.sh。通过categraf执行脚本进行数据采集\n\n```\n#!/bin/bash\n\nexport api_key=\"qdrant@1133\"\nexport IP=$(for device in $(ls -l /sys/class/net/ | sed 1d | awk '!/virtual/{print $9}'); do ip -4 -o addr show $device primary | awk -F'[/ ]' '{print $7}'; done | head -n1)\n\n# 获取 collections 并转换为数组\nmapfile -t collections < <(curl -s -H \"Authorization: Bearer ${api_key}\" http://${IP}:6333/collections | jq -r '.result.collections[].name')\n\n# 遍历每个 collection 并获取其状态\nfor collection_name in \"${collections[@]}\"; do\n    response=$(curl -s -H \"Authorization: Bearer ${api_key}\" http://${IP}:6333/collections/${collection_name})\n    collection_status=$(echo \"$response\" | jq -r '.result.status')\n    case \"$collection_status\" in\n        green)\n            echo \"qdrant_collection_status{collection_id=\\\"${collection_name}\\\", job=\\\"qdrant_telemetry\\\"} 1\"\n            ;;\n        yellow)\n            echo \"qdrant_collection_status{collection_id=\\\"${collection_name}\\\", job=\\\"qdrant_telemetry\\\"} 2\"\n            ;;\n        red)\n            echo \"qdrant_collection_status{collection_id=\\\"${collection_name}\\\", job=\\\"qdrant_telemetry\\\"} 3\"\n            ;;\n        *)\n            echo \"qdrant_collection_status{collection_id=\\\"${collection_name}\\\", job=\\\"qdrant_telemetry\\\"} 0\"\n            ;;\n    esac\n\n    ACTIVE_SHARDS=$(curl -s -XGET \"http://${IP}:6333/collections/${collection_name}/cluster\" \\\n  --header \"api-key: ${api_key}\" | jq '.result.local_shards[] | select(.state == \"Active\") | .shard_id')\n\n    Partial_SHARDS=$(curl -s -XGET \"http://${IP}:6333/collections/${collection_name}/cluster\" \\\n  --header \"api-key: ${api_key}\" | jq '.result.local_shards[] | select(.state == \"Partial\") | .shard_id')\n\n    Dead_SHARDS=$(curl -s -XGET \"http://${IP}:6333/collections/${collection_name}/cluster\" \\\n  --header \"api-key: ${api_key}\" | jq '.result.local_shards[] | select(.state == \"Dead\") | .shard_id')\n\n    for shard in $ACTIVE_SHARDS; do\n        echo \"qdrant_shard_status{collection_id=\\\"${collection_name}\\\", shard_id=\\\"${shard}\\\", job=\\\"qdrant_telemetry\\\"} 1\"\n    done\n\n    for shard in $Partial_SHARDS; do\n        echo \"qdrant_shard_status{collection_id=\\\"${collection_name}\\\", shard_id=\\\"${shard}\\\", job=\\\"qdrant_telemetry\\\"} 1\"\n    done\n\n    for shard in $Dead_SHARDS; do\n        echo \"qdrant_shard_status{collection_id=\\\"${collection_name}\\\", shard_id=\\\"${shard}\\\", job=\\\"qdrant_telemetry\\\"} 1\"\n    done\ndone\n```\n\n### 六、常用运维API\n\n```\n# api参考文档\nhttps://api.qdrant.tech/api-reference\n```\n\n#### 1、集合\n\n##### 1.1 获取集合详细信息\n\n```\ncurl  -X GET \\\n  'http://localhost:6333/collections/collection_name' \\\n  --header 'api-key: <api-key-value>'\n```\n\n##### 1.2 更新集合参数\n\n```\ncurl  -X PATCH \\\n  'http://localhost:6333/collections/collection_name' \\\n  --header 'api-key: <api-key-value>' \\\n  --header 'Content-Type: application/json' \\\n  --data-raw '{\n  \"optimizers_config\": {\n    \"indexing_threshold\": 10000\n  }\n}'\n```\n\n##### 1.3 列出所有集合\n\n```\ncurl  -X GET \\\n  'http://localhost:6333/collections' \\\n  --header 'api-key: <api-key-value>'\n```\n\n##### 1.4 检查集合是否存在\n\n```\ncurl  -X GET \\\n  'http://localhost:6333/collections/collection_name/exists' \\\n  --header 'api-key: <api-key-value>'\n```\n\n#### 2、快照（基于集合）\n\n##### 2.1 列出所有快照\n\n```\ncurl  -X GET \\\n  'http://localhost:6333/collections/collection_name/snapshots' \\\n  --header 'api-key: <api-key-value>'\n```\n\n##### 2.2 创建快照\n\n```\ncurl  -X POST \\\n  'http://localhost:6333/collections/collection_name/snapshots' \\\n  --header 'api-key: <api-key-value>'\n```\n\n##### 2.3 上传的快照中恢复\n\n```\ncurl  -X POST \\\n  'http://localhost:6333/collections/collection_name/snapshots/upload' \\\n  --header 'api-key: <api-key-value>' \\\n  -F 'snapshot=@/path/to/snapshot.shapshot'\n```\n\n##### 2.4 从快照中恢复\n\nsnapshot路径为容器中qdrant实际路径\n\n```\ncurl  -X PUT \\\n  'http://localhost:6333/collections/collection_name/snapshots/recover' \\\n  --header 'api-key: <api-key-value>' \\\n  --header 'Content-Type: application/json' \\\n  -d '{\n  \"location\": \"file:///qdrant/qdrant_snapshots/colletion_name/snapshot.shapshot\"\n}'\n```\n\n##### 2.5 下载快照\n\n```\ncurl http://localhost:6333/collections/:collection_name/snapshots/:snapshot_name \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 2.6 删除快照\n\n```\ncurl  -X DELETE \\\n  'http://localhost:6333/collections/collection_name/snapshots/snapshot_name' \\\n  --header 'api-key: <api-key-value>'\n```\n\n#### 3、分布式\n\n##### 3.1 检查集群状态\n\n```\ncurl http://localhost:6333/cluster \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 3.2 创建分片键\n\n```\ncurl  -X PUT \\\n  'http://localhost:6333/collections/collection_name/shards' \\\n  --header 'api-key: <api-key-value>' \\\n  --header 'Content-Type: application/json' \\\n  --data-raw '{\n  \"shard_key\": \"{shard_key}\"\n}'\n```\n\n##### 3.3 删除分片键\n\n```\ncurl  -X POST \\\n  'http://localhost:6333/collections/collection_name/shards/delete' \\\n  --header 'api-key: <api-key-value>' \\\n  --header 'Content-Type: application/json' \\\n  --data-raw '{\n  \"shard_key\": \"{shard_key}\"\n}'\n```\n\n##### 3.4 恢复集群状态\n\n```\ncurl -X POST http://localhost:6333/cluster/recover \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 3.5 集群中删除对等体\n\n```\ncurl -X DELETE http://localhost:6333/cluster/peer/1 \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 3.6 检索集群详细信息\n\n```\ncurl http://localhost:6333/collections/collection_name/cluster \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 3.7 更新集群设置\n\n```\ncurl -X POST http://localhost:6333/collections/collection_name/cluster \\\n     -H \"api-key: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"move_shard\": {\n    \"shard_id\": 1,\n    \"to_peer_id\": 1,\n    \"from_peer_id\": 1\n  }\n}'\n```\n\n#### 4、监控\n\n##### 4.1 检索实例详细信息\n\n```\ncurl http://localhost:6333/ \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 4.2 收集遥测数据\n\n```\ncurl http://localhost:6333/telemetry \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 4.3 收集 Prometheus 指标数据\n\n```\ncurl -G http://localhost:6333/metrics \\\n     -H \"api-key: <apiKey>\" \\\n     -d anonymize=true\n```\n\n##### 4.4 检查写保护\n\n```\ncurl http://localhost:6333/locks \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 4.5 设置写保护\n\n```\ncurl -X POST http://localhost:6333/locks \\\n     -H \"api-key: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"write\": true\n}'\n```\n\n##### 4.6 单实例健康检查\n\n```\ncurl http://localhost:6333/healthz \\\n     -H \"api-key: <apiKey>\"\n```\n\n### 七、集群故障恢复\n\n##### 1、使用复制的集合进行恢复\n\n```\n如果失败的节点数量少于集合的复制因子，那么您的集群应该仍然能够执行读取、搜索和更新查询。\n\n现在，如果故障节点重新启动，共识机制将触发复制过程，以使用最新的更新来更新恢复节点，这些更新是它错过的。\n\n如果故障节点永远不会重新启动，您可以在拥有3个或更多节点的集群中恢复丢失的分片。在较小的集群中，您无法恢复丢失的分片，因为恢复操作需要通过raft，这要求超过50%的节点是健康的。\n```\n\n##### 2、使用复制的集合重新创建节点\n\n如果一个节点失败且无法恢复，您应该将该失效节点从共识中排除，并创建一个空节点，确保数据目录为空。\n\n要从集群中排除失败的节点， 如有必要，应用`force`标志。\n\n```\ncurl -X DELETE \"http://localhost:6333/cluster/peer/2120809141859359?force=true\" \\\n     -H \"api-key: qdrant@1133\"\n```\n\n当你创建一个新节点时，确保通过指定`--bootstrap` CLI参数并将其设置为任何正在运行的集群节点的URL，将其附加到现有集群。\n\n一旦新节点准备就绪并与集群同步，手动平衡分片\n\n```\ncurl -X POST http://localhost:6333/collections/test/cluster \\\n     -H \"api-key: qdrant@1133\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"replicate_shard\": {\n    \"shard_id\": 0,\n    \"to_peer_id\": 2120809141859359,\n    \"from_peer_id\": 3306291262481813\n  }\n}'\n```\n\n##### 3、从快照恢复\n\n如果集群中没有数据的副本，仍然可以从快照中恢复，确保数据目录为空。\n\n按照相同的步骤分离失败的节点并在集群中创建一个新节点：\n\n```\n要从集群中排除失败的节点，请使用移除节点。如有必要，应用`force`标志。\n创建一个新节点，确保通过指定`--bootstrap` CLI参数并附上任何正在运行的集群节点的URL，将其附加到现有集群。\n```\n\n","source":"_posts/Qdrant详解.md","raw":"---\ntitle: Qdrant详解\ntags: [Qdrant]\ncategories: [数据库]\n---\n\n### 一、介绍\n\n#### 1、 Qdrant 是什么？\n\nQdrant（读作：quadrant）是一个矢量相似性[搜索引擎](https://so.csdn.net/so/search?q=搜索引擎&spm=1001.2101.3001.7020)和矢量数据库。它提供了一个方便的API来存储、搜索和管理点向量的生产就绪服务，并提供了额外的有效负载专门用于扩展过滤支持。这使得在各种神经网络或基于语义的匹配、多面搜索和其他应用方面更加有用。\n\n```\nGithub地址:https://github.com/qdrant/qdrant\n\n官网:https://qdrant.tech/\n\n官方文档:https://qdrant.tech/documentation/\n\n详细的实例参考:https://qdrant.tech/documentation/tutorials/search-beginners/\n```\n\n#### 2、 什么是矢量数据库？\n\n#### ![](图片/矢量数据库.png)\n\n```\n向量数据库是一种旨在高效存储和查询高维向量的数据库。在传统的OLTP和OLAP 数据库中（如上图所示），数据按行和列组织（称为表），并根据这些列中的值执行查询。然而，在某些应用中，包括图像识别、自然语言处理和推荐系统，数据通常表示为高维空间中的向量，这些向量加上 id 和有效负载就是我们在 Qdrant 等向量数据库内存储在称为集合的东西中的元素。\n\n在此上下文中，向量是对象或数据点的数学表示，其中向量的元素隐式或显式地对应于对象的特定特征或属性。例如，在图像识别系统中，向量可以表示图像，向量的每个元素表示像素值或该像素的描述符/特性。在音乐推荐系统中，每个向量可以表示一首歌曲，向量的元素将捕获歌曲的特征，例如节奏、流派、歌词等。\n\n向量数据库针对高效存储和查询这些高维向量进行了优化，它们通常使用专门的数据结构和索引技术，例如用于实现近似最近邻的分层可导航小世界 (HNSW) 和乘积量化等。这些数据库支持快速相似性和语义搜索，同时允许用户根据某种距离度量找到与给定查询向量最接近的向量。最常用的距离度量是欧几里得距离、余弦相似度和点积，Qdrant 完全支持这三种度量。\n```\n\n以下是这三者的简要概述：\n\n```\n余弦相似度- 余弦相似度是一种衡量两个向量相似度的方法。简单来说，它反映的是两个向量是具有相同方向（相似）还是完全不同。余弦相似度通常与文本表示一起使用，以比较两个文档或句子之间的相似度。余弦相似度的输出范围从 -1 到 1，其中 -1 表示两个向量完全不相似，1 表示最大相似度。\n\n点积- 点积相似度度量是测量两个向量相似度的另一种方法。与余弦相似度不同，它还考虑向量的长度。例如，当基于术语（单词）频率构建文档的向量表示时，这可能很重要。点积相似度是通过将两个向量中的相应值相乘，然后对这些乘积求和来计算的。总和越高，两个向量就越相似。如果对向量进行归一化（使它们中的数字总和为 1），则点积相似度将变为余弦相似度。\n\n欧几里得距离- 欧几里得距离是一种测量空间中两点之间距离的方法，类似于我们测量地图上两点之间距离的方法。它的计算方法是求两点坐标平方差之和的平方根。这种距离度量也常用于机器学习，以测量两个向量的相似度或相异度。\n```\n\n#### 3、为什么我们需要矢量数据库\n\n向量数据库在需要相似性搜索的各种应用中起着至关重要的作用，例如推荐系统、基于内容的图像检索和个性化搜索。通过利用其高效的索引和搜索技术，向量数据库可以更快、更准确地检索已表示为向量的非结构化数据，从而帮助向用户展示与其查询最相关的结果。\n\n```\n高维数据的有效存储和索引。\n能够处理具有数十亿数据点的大规模数据集。\n支持实时分析和查询。\n能够处理来自复杂数据类型（例如图像、视频和自然语言文本）的向量。\n提高机器学习和人工智能应用的性能并减少延迟。\n与构建定制解决方案相比，减少了开发和部署的时间和成本。\n```\n\n####  4、Qdrant 架构的高层概述\n\n![](图片/qdrant架构.png)\n\n```\n集合：集合是一组命名的点（带有有效载荷的向量），您可以在其中进行搜索。同一个集合中每个点的向量必须具有相同的维数，并按单个指标进行比较。命名向量可用于在单个点中拥有多个向量，每个向量可以有自己的维数和指标要求。\n\n距离度量：这些度量用于测量向量之间的相似性，必须在创建集合时选择它们。度量的选择取决于获取向量的方式，特别是用于编码新查询的神经网络。\n\n点：点是 Qdrant 操作的中心实体，由一个向量和一个可选的 id 和有效载荷组成。\n   id：向量的唯一标识符。\n   向量：数据的高维表示，例如图像、声音、文档、视频等。\n   有效载荷：有效载荷是一个 JSON 对象，其中包含可添加到向量的附加数据。\n\n存储：Qdrant 可以使用两种存储选项之一，内存存储（将所有向量存储在 RAM 中，由于仅在持久性时才需要磁盘访问，因此速度最快），或Memmap存储（创建与磁盘上的文件关联的虚拟地址空间）。\n\n客户端：您可以用来连接 Qdrant 的编程语言。\n```\n\n### 二、分布式集群部署\n\n```\ndocker-compose方式进行分布式集群部署。\n官方文档：https://qdrant.tech/documentation/guides/distributed_deployment/\n基本要求：\n分片的数量必须是集群中当前运行的节点数量的倍数，最好为2倍\n集合的复制因子至少为2，否则集群功能无法正常使用\n```\n\n#### 1、节点规划\n\n| HOST                  | PORT      | 数据目录 | config                       | snapshots   | logs   | bin   |\n| --------------------- | --------- | -------- | ---------------------------- | ----------- | ------ | ----- |\n| 172.16.20.65/ledger   | 6333-6335 | ./data   | ./config/cluster_config.yaml | ./snapshots | ./logs | ./bin |\n| 172.16.20.46/follower | 6333-6335 | ./data   | ./config/cluster_config.yaml | ./snapshots | ./logs | ./bin |\n| 172.16.20.90/follower | 6333-6335 | ./data   | ./config/cluster_config.yaml | ./snapshots | ./logs | ./bin |\n\n#### 2、qdrant集群部署\n\n##### 2.1 镜像下载对应版本\n\n```\ndocker pull qdrant/qdrant：v1.13.3\n```\n\n##### 2.2 创建部署目录\n\n```\nmkdir -p /data/program/qdrant/{data,config,sanpshots,logs,bin}\n```\n\n##### 2.3 配置文件\n\n```\n官方配置参考：https://github.com/qdrant/qdrant/tree/master/config/\n```\n\n下载v1.13.3版本config.yaml进行配置，集群三节点配置内容相同，参考配置：\n\nvim /data/program/qdrant/config/cluster_config.yaml\n\n```\nlog_level: INFO\n\n# Logging configuration\n# Qdrant logs to stdout. You may configure to also write logs to a file on disk.\n# Be aware that this file may grow indefinitely.\nlogger:\n  on_disk:\n    enabled: true\n    log_file: /qdrant/logs/qdrant.log\n    log_level: INFO\n    # Logging format, supports `text` and `json`\n    format: json\n\nstorage:\n  # Where to store all the data\n  storage_path: ./storage\n\n  # Where to store snapshots\n  snapshots_path: ./qdrant_snapshots\n\n  snapshots_config:\n    # \"local\" or \"s3\" - where to store snapshots\n    snapshots_storage: s3\n    s3_config:\n      bucket: \"qdrant-bucket\"\n      region: \"REGION\"\n      access_key: \"admin\"\n      secret_key: \"123456\"\n      endpoint_url: \"http://112.16.20.1:9001\"\n\n  # Where to store temporary files\n  # If null, temporary snapshots are stored in: storage/snapshots_temp/\n  temp_path: null\n\n  # If true - point payloads will not be stored in memory.\n  # It will be read from the disk every time it is requested.\n  # This setting saves RAM by (slightly) increasing the response time.\n  # Note: those payload values that are involved in filtering and are indexed - remain in RAM.\n  # \n  # Default: true\n  on_disk_payload: true\n\n  # Maximum number of concurrent updates to shard replicas\n  # If `null` - maximum concurrency is used.\n  update_concurrency: null\n\n  # Write-ahead-log related configuration\n  wal:\n    # Size of a single WAL segment\n    wal_capacity_mb: 32\n\n    # Number of WAL segments to create ahead of actual data requirement\n    wal_segments_ahead: 0\n\n  # Normal node - receives all updates and answers all queries\n  node_type: \"Normal\"\n\n  # Listener node - receives all updates, but does not answer search/read queries\n  # Useful for setting up a dedicated backup node\n  # node_type: \"Listener\"\n\n  performance:\n    # Number of parallel threads used for search operations. If 0 - auto selection.\n    max_search_threads: 0\n\n    # Max number of threads (jobs) for running optimizations across all collections, each thread runs one job.\n    # If 0 - have no limit and choose dynamically to saturate CPU.\n    # Note: each optimization job will also use `max_indexing_threads` threads by itself for index building.\n    max_optimization_threads: 0\n\n    # CPU budget, how many CPUs (threads) to allocate for an optimization job.\n    # If 0 - auto selection, keep 1 or more CPUs unallocated depending on CPU size\n    # If negative - subtract this number of CPUs from the available CPUs.\n    # If positive - use this exact number of CPUs.\n    optimizer_cpu_budget: 0\n\n    # Prevent DDoS of too many concurrent updates in distributed mode.\n    # One external update usually triggers multiple internal updates, which breaks internal\n    # timings. For example, the health check timing and consensus timing.\n    # If null - auto selection.\n    update_rate_limit: null\n\n    # Limit for number of incoming automatic shard transfers per collection on this node, does not affect user-requested transfers.\n    # The same value should be used on all nodes in a cluster.\n    # Default is to allow 1 transfer.\n    # If null - allow unlimited transfers.\n    #incoming_shard_transfers_limit: 1\n\n    # Limit for number of outgoing automatic shard transfers per collection on this node, does not affect user-requested transfers.\n    # The same value should be used on all nodes in a cluster.\n    # Default is to allow 1 transfer.\n    # If null - allow unlimited transfers.\n    #outgoing_shard_transfers_limit: 1\n\n    # Enable async scorer which uses io_uring when rescoring.\n    # Only supported on Linux, must be enabled in your kernel.\n    # See: <https://qdrant.tech/articles/io_uring/#and-what-about-qdrant>\n    #async_scorer: false\n\n  optimizers:\n    # The minimal fraction of deleted vectors in a segment, required to perform segment optimization\n    deleted_threshold: 0.2\n\n    # The minimal number of vectors in a segment, required to perform segment optimization\n    vacuum_min_vector_number: 1000\n\n    # Target amount of segments optimizer will try to keep.\n    # Real amount of segments may vary depending on multiple parameters:\n    #  - Amount of stored points\n    #  - Current write RPS\n    #\n    # It is recommended to select default number of segments as a factor of the number of search threads,\n    # so that each segment would be handled evenly by one of the threads.\n    # If `default_segment_number = 0`, will be automatically selected by the number of available CPUs\n    default_segment_number: 0\n\n    # Do not create segments larger this size (in KiloBytes).\n    # Large segments might require disproportionately long indexation times,\n    # therefore it makes sense to limit the size of segments.\n    #\n    # If indexation speed have more priority for your - make this parameter lower.\n    # If search speed is more important - make this parameter higher.\n    # Note: 1Kb = 1 vector of size 256\n    # If not set, will be automatically selected considering the number of available CPUs.\n    max_segment_size_kb: null\n\n    # Maximum size (in KiloBytes) of vectors to store in-memory per segment.\n    # Segments larger than this threshold will be stored as read-only memmapped file.\n    # To enable memmap storage, lower the threshold\n    # Note: 1Kb = 1 vector of size 256\n    # To explicitly disable mmap optimization, set to `0`.\n    # If not set, will be disabled by default.\n    memmap_threshold_kb: null\n\n    # Maximum size (in KiloBytes) of vectors allowed for plain index.\n    # Default value based on https://github.com/google-research/google-research/blob/master/scann/docs/algorithms.md\n    # Note: 1Kb = 1 vector of size 256\n    # To explicitly disable vector indexing, set to `0`.\n    # If not set, the default value will be used.\n    indexing_threshold_kb: 20000\n\n    # Interval between forced flushes.\n    flush_interval_sec: 5\n\n    # Max number of threads (jobs) for running optimizations per shard.\n    # Note: each optimization job will also use `max_indexing_threads` threads by itself for index building.\n    # If null - have no limit and choose dynamically to saturate CPU.\n    # If 0 - no optimization threads, optimizations will be disabled.\n    max_optimization_threads: null\n\n  # This section has the same options as 'optimizers' above. All values specified here will overwrite the collections\n  # optimizers configs regardless of the config above and the options specified at collection creation.\n  #optimizers_overwrite:\n  #  deleted_threshold: 0.2\n  #  vacuum_min_vector_number: 1000\n  #  default_segment_number: 0\n  #  max_segment_size_kb: null\n  #  memmap_threshold_kb: null\n  #  indexing_threshold_kb: 20000\n  #  flush_interval_sec: 5\n  #  max_optimization_threads: null\n\n  # Default parameters of HNSW Index. Could be overridden for each collection or named vector individually\n  hnsw_index:\n    # Number of edges per node in the index graph. Larger the value - more accurate the search, more space required.\n    m: 16\n\n    # Number of neighbours to consider during the index building. Larger the value - more accurate the search, more time required to build index.\n    ef_construct: 100\n\n    # Minimal size (in KiloBytes) of vectors for additional payload-based indexing.\n    # If payload chunk is smaller than `full_scan_threshold_kb` additional indexing won't be used -\n    # in this case full-scan search should be preferred by query planner and additional indexing is not required.\n    # Note: 1Kb = 1 vector of size 256\n    full_scan_threshold_kb: 10000\n\n    # Number of parallel threads used for background index building.\n    # If 0 - automatically select.\n    # Best to keep between 8 and 16 to prevent likelihood of building broken/inefficient HNSW graphs.\n    # On small CPUs, less threads are used.\n    max_indexing_threads: 0\n\n    # Store HNSW index on disk. If set to false, index will be stored in RAM. Default: false\n    on_disk: false\n\n    # Custom M param for hnsw graph built for payload index. If not set, default M will be used.\n    payload_m: null\n\n  # Default shard transfer method to use if none is defined.\n  # If null - don't have a shard transfer preference, choose automatically.\n  # If stream_records, snapshot or wal_delta - prefer this specific method.\n  # More info: https://qdrant.tech/documentation/guides/distributed_deployment/#shard-transfer-method\n  shard_transfer_method: null\n\n  # Default parameters for collections\n  collection:\n    # Number of replicas of each shard that network tries to maintain\n    replication_factor: 2\n\n    # How many replicas should apply the operation for us to consider it successful\n    write_consistency_factor: 1\n\n    # Default parameters for vectors.\n    vectors:\n      # Whether vectors should be stored in memory or on disk.\n      on_disk: null\n\n    # shard_number_per_node: 1\n\n    # Default quantization configuration.\n    # More info: https://qdrant.tech/documentation/guides/quantization\n    quantization: null\n\n    # Default strict mode parameters for newly created collections.\n    strict_mode:\n      # Whether strict mode is enabled for a collection or not.\n      enabled: false\n\n      # Max allowed `limit` parameter for all APIs that don't have their own max limit.\n      max_query_limit: null\n\n      # Max allowed `timeout` parameter.\n      max_timeout: null\n\n      # Allow usage of unindexed fields in retrieval based (eg. search) filters.\n      unindexed_filtering_retrieve: null\n\n      # Allow usage of unindexed fields in filtered updates (eg. delete by payload).\n      unindexed_filtering_update: null\n\n      # Max HNSW value allowed in search parameters.\n      search_max_hnsw_ef: null\n\n      # Whether exact search is allowed or not.\n      search_allow_exact: null\n\n      # Max oversampling value allowed in search.\n      search_max_oversampling: null\n\nservice:\n  # Maximum size of POST data in a single request in megabytes\n  max_request_size_mb: 32\n\n  # Number of parallel workers used for serving the api. If 0 - equal to the number of available cores.\n  # If missing - Same as storage.max_search_threads\n  max_workers: 0\n\n  # Host to bind the service on\n  host: 0.0.0.0\n\n  # HTTP(S) port to bind the service on\n  http_port: 6333\n\n  # gRPC port to bind the service on.\n  # If `null` - gRPC is disabled. Default: null\n  # Comment to disable gRPC:\n  grpc_port: 6334\n\n  # Enable CORS headers in REST API.\n  # If enabled, browsers would be allowed to query REST endpoints regardless of query origin.\n  # More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\n  # Default: true\n  enable_cors: true\n\n  # Enable HTTPS for the REST and gRPC API\n  enable_tls: false\n\n  # Check user HTTPS client certificate against CA file specified in tls config\n  verify_https_client_certificate: false\n\n  # Set an api-key.\n  # If set, all requests must include a header with the api-key.\n  # example header: `api-key: <API-KEY>`\n  #\n  # If you enable this you should also enable TLS.\n  # (Either above or via an external service like nginx.)\n  # Sending an api-key over an unencrypted channel is insecure.\n  #\n  # Uncomment to enable.\n  api_key: '123456'\n\n  # Set an api-key for read-only operations.\n  # If set, all requests must include a header with the api-key.\n  # example header: `api-key: <API-KEY>`\n  #\n  # If you enable this you should also enable TLS.\n  # (Either above or via an external service like nginx.)\n  # Sending an api-key over an unencrypted channel is insecure.\n  #\n  # Uncomment to enable.\n  read_only_api_key: '123'\n\n  # Uncomment to enable JWT Role Based Access Control (RBAC).\n  # If enabled, you can generate JWT tokens with fine-grained rules for access control.\n  # Use generated token instead of API key.\n  #\n  jwt_rbac: true\n\n  # Hardware reporting adds information to the API responses with a\n  # hint on how many resources were used to execute the request.\n  #\n  # Uncomment to enable.\n  # hardware_reporting: true\ncluster:\n  # Use `enabled: true` to run Qdrant in distributed deployment mode\n  enabled: true\n\n  # Configuration of the inter-cluster communication\n  p2p:\n    # Port for internal communication between peers\n    port: 6335\n\n    # Use TLS for communication between peers\n    enable_tls: false\n\n  # Configuration related to distributed consensus algorithm\n  consensus:\n    # How frequently peers should ping each other.\n    # Setting this parameter to lower value will allow consensus\n    # to detect disconnected nodes earlier, but too frequent\n    # tick period may create significant network and CPU overhead.\n    # We encourage you NOT to change this parameter unless you know what you are doing.\n    tick_period_ms: 100\n    # Compact consensus operations once we have this amount of applied\n    # operations. Allows peers to join quickly with a consensus snapshot without\n    # replaying a huge amount of operations.\n    # If 0 - disable compaction\n    #compact_wal_entries: 128\n\n# Set to true to prevent service from sending usage statistics to the developers.\n# Read more: https://qdrant.tech/documentation/guides/telemetry\ntelemetry_disabled: false\n\n# TLS configuration.\n# Required if either service.enable_tls or cluster.p2p.enable_tls is true.\ntls:\n  # Server certificate chain file\n  cert: ./tls/cert.pem\n\n  # Server private key file\n  key: ./tls/key.pem\n\n  # Certificate authority certificate file.\n  # This certificate will be used to validate the certificates\n  # presented by other nodes during inter-cluster communication.\n  #\n  # If verify_https_client_certificate is true, it will verify\n  # HTTPS client certificate\n  #\n  # Required if cluster.p2p.enable_tls is true.\n  ca_cert: ./tls/cacert.pem\n\n  # TTL in seconds to reload certificate from disk, useful for certificate rotations.\n  # Only works for HTTPS endpoints. Does not support gRPC (and intra-cluster communication).\n  # If `null` - TTL is disabled.\n  cert_ttl: 3600\n```\n\n##### 2.4 初始化qdrant集群\n\n```\n参考文档：https://qdrant.tech/documentation/guides/distributed_deployment/\n```\n\n配置初始化ledger节点（172.16.20.65）：\n\nvim /data/program/qdrant/qdrant.yaml\n\n```\nservices:\n  qdrant:\n    image: qdrant/qdrant:v1.13.3\n    restart: always\n    container_name: qdrant\n    #ledger node  \n    command: ./qdrant --uri 'http://172.16.20.65:6335'\n    ports:\n      - 6333:6333\n      - 6334:6334\n      - 6335:6335\n    volumes:\n      - ./data:/qdrant/storage\n      - ./snapshots:/qdrant/snapshots\n      - ./logs:/qdrant/logs\n      - ./config/cluster_config.yaml:/qdrant/config/production.yaml\n```\n\n配置初始化follower节点（172.16.20.46,172.16.20.90）：\n\nvim /data/program/qdrant/qdrant.yaml\n\n```\nservices:\n  qdrant:\n    image: qdrant/qdrant:v1.13.3\n    restart: always\n    container_name: qdrant\n    #join node\n    command: ./qdrant --bootstrap 'http://172.16.20.65:6335'\n    ports:\n      - 6333:6333\n      - 6334:6334\n      - 6335:6335\n    volumes:\n      - ./data:/qdrant/storage\n      - ./snapshots:/qdrant/snapshots\n      - ./logs:/qdrant/logs\n      - ./config/cluster_config.yaml:/qdrant/config/production.yaml\n```\n\n三节点依次启动集群\n\n```\ncd /data/program/qdrant/\ndocker-compose -f qdrant.yaml up -d\n```\n\n启动完成，登录前台http://172.16.20.46:6333/dashboard，验证集群状态\n\nGET _cluster\n\n```\n{\n  \"result\": {\n    \"status\": \"enabled\",\n    \"peer_id\": 4080902811012997,\n    \"peers\": {\n      \"1993017374776241\": {\n        \"uri\": \"http://172.16.20.90:6335/\"\n      },\n      \"5880012902421225\": {\n        \"uri\": \"http://172.16.20.65:6335/\"\n      },\n      \"4080902811012997\": {\n        \"uri\": \"http://172.16.20.46:6335/\"\n      }\n    },\n    \"raft_info\": {\n      \"term\": 83,\n      \"commit\": 304,\n      \"pending_operations\": 0,\n      \"leader\": 5880012902421225,\n      \"role\": \"Follower\",\n      \"is_voter\": true\n    },\n    \"consensus_thread_status\": {\n      \"consensus_thread_status\": \"working\",\n      \"last_update\": \"2025-03-21T10:02:37.289807369Z\"\n    },\n    \"message_send_failures\": {}\n  },\n  \"status\": \"ok\",\n  \"time\": 0.000019005\n}\n```\n\n##### 2.5 恢复集群正常启动配置\n\n配置三节点启动docker-compose文件，修改分布式集群启动方式\n\nvim /data/program/qdrant/qdrant.yaml\n\n```\nservices:\n  qdrant:\n    image: qdrant/qdrant:v1.13.3\n    restart: always\n    container_name: qdrant\n    #cluster node\n    command: ./qdrant\n    ports:\n      - 6333:6333\n      - 6334:6334\n      - 6335:6335\n    volumes:\n      - ./data:/qdrant/storage\n      - ./snapshots:/qdrant/snapshots\n      - ./logs:/qdrant/logs\n      - ./config/cluster_config.yaml:/qdrant/config/production.yaml\n```\n\n启动完成，登录前台http://172.16.20.46:6333/dashboard，验证集群状态\n\nGET _cluster\n\n```\n{\n  \"result\": {\n    \"status\": \"enabled\",\n    \"peer_id\": 4080902811012997,\n    \"peers\": {\n      \"1993017374776241\": {\n        \"uri\": \"http://172.16.20.90:6335/\"\n      },\n      \"5880012902421225\": {\n        \"uri\": \"http://172.16.20.65:6335/\"\n      },\n      \"4080902811012997\": {\n        \"uri\": \"http://172.16.20.46:6335/\"\n      }\n    },\n    \"raft_info\": {\n      \"term\": 83,\n      \"commit\": 304,\n      \"pending_operations\": 0,\n      \"leader\": 5880012902421225,\n      \"role\": \"Follower\",\n      \"is_voter\": true\n    },\n    \"consensus_thread_status\": {\n      \"consensus_thread_status\": \"working\",\n      \"last_update\": \"2025-03-21T10:02:37.289807369Z\"\n    },\n    \"message_send_failures\": {}\n  },\n  \"status\": \"ok\",\n  \"time\": 0.000019005\n}\n```\n\n#### 3、qdrant集群升级\n\n```\n前提条件：\n拥有多节点集群，并且您的集合的复制因子至少为2，则升级过程将零停机时间并以滚动方式完成。您将能够正常使用您的数据库集群。\n有一个单节点集群或复制因子为1的集合，则升级过程将需要短暂的停机时间来使用新版本重新启动集群。\n集群启动方式不能已初始化方式启动，否则升级过程将选举失败,且无法回退。\n```\n\n##### 3.1 集群集合备份\n\n```\n集群集合备份，并确认快照可用,可正常恢复\n```\n\n##### 3.2 检查集群状态\n\n验证集群是否为green,且确认每个节点role，默认ledger最后升级\n\n```\nGET _cluster\n```\n\n##### 3.3 下载新版本镜像\n\n1.13.3 -> 1.13.5\n\n```\ndocker pull qdrant/qdrant：v1.13.5\n```\n\n##### 3.4 下载新版本配置文件\n\n```\n官方配置参考：https://github.com/qdrant/qdrant/tree/master/config/\n\n选择config.yml，并与旧配置内容进行比对，进行调整，上传至配置文件目录\n```\n\n##### 3.5 停止旧节点\n\n```\ncd /data/program/qdrant/\ndocker-compose -f qdrant.yaml down\n```\n\n##### 3.6 修改镜像版本\n\n```\ncat qdrant.yaml | grep image\nimage: qdrant/qdrant:v1.13.5\n```\n\n##### 3.7 重新启动节点\n\n```\ncd /data/program/qdrant/\ndocker-compose -f qdrant.yaml up -d\n```\n\n##### 3.8 验证集群状态\n\n```\nGET _cluster\n```\n\n验证集群状态是否为green,等待集群选举完成，其他节点进行如上操作升级集群。\n\n#### 4、集群扩缩容\n\n##### 4.1 扩容\n\n参考集群部署2.1-2.4，同步其他节点cluster_config.yaml\n\n初始化连接集群ledger\n\nvim /data/program/qdrant/qdrant.yaml\n\n```\nservices:\n  qdrant:\n    image: qdrant/qdrant:v1.13.3\n    restart: always\n    container_name: qdrant\n    #join node\n    command: ./qdrant --bootstrap 'http://${ledger_ip}:6335'\n    ports:\n      - 6333:6333\n      - 6334:6334\n      - 6335:6335\n    volumes:\n      - ./data:/qdrant/storage\n      - ./snapshots:/qdrant/snapshots\n      - ./logs:/qdrant/logs\n      - ./config/cluster_config.yaml:/qdrant/config/production.yaml\n```\n\n启动完成，登录前台http://172.16.20.46:6333/dashboard，验证集群状态\n\n```\nGET _cluster\n```\n\n恢复新节点正常启动配置\n\n```\nservices:\n  qdrant:\n    image: qdrant/qdrant:v1.13.3\n    restart: always\n    container_name: qdrant\n    #cluster node\n    command: ./qdrant\n    ports:\n      - 6333:6333\n      - 6334:6334\n      - 6335:6335\n    volumes:\n      - ./data:/qdrant/storage\n      - ./snapshots:/qdrant/snapshots\n      - ./logs:/qdrant/logs\n      - ./config/cluster_config.yaml:/qdrant/config/production.yaml\n```\n\n启动完成，验证集群状态\n\n##### 4.2 缩容\n\n移动缩容节点分片至其他节点\n\n```\ncurl -X POST http://localhost:6333/collections/collection_name/cluster \\\n     -H \"api-key: qdrant@1133\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"move_shard\": {\n    \"shard_id\": 0,\n    \"to_peer_id\": 2120809141859359,\n    \"from_peer_id\": 3306291262481813\n  }\n}'\n```\n\n删除旧节点\n\n```\ncurl -X DELETE \"http://localhost:6333/cluster/peer/2120809141859359\" \\\n     -H \"api-key: qdrant@1133\"\n```\n\n验证集群状态\n\n```\nGET _cluster\n```\n\n### 三、qdrant权限管理\n\n```\n官方文档：https://qdrant.tech/documentation/guides/security\n```\n\njwt_token配置，需要python3环境，PyJwt模块\n\nvim /data/program/qdrant/bin/token.py\n\n```\nimport jwt\n\n#key为配置文件中api_key的值\nkey = \"123456\n    \nencoded = jwt.encode({\n    \"access\": [\n        {\n        \"collection\": \"test1\",\n        \"access\": \"r\"\n        },\n        {\n        \"collection\": \"test2\",\n        \"access\": \"rw\"\n        }\n    ]\n}, key, algorithm=\"HS256\")\nprint(encoded)\n```\n\n生成token\n\n```\n在access中编写对应collections和access，编写完成后，执行脚本生成token\n\ncd /data/program/qdrant/\npython3 bin/token.py\n```\n\n### 四、集群备份与恢复\n\n```\n官方文档：https://qdrant.tech/documentation/concepts/snapshots/\n```\n\n```\n在分布式设置中，当集群中有多个节点时，处理单个集合时必须为每个节点分别创建快照，单个快照将仅包含创建快照的节点上存储的数据。恢复时，恢复当前节点的快照数据\n```\n\n#### 1、备份恢复管理脚本\n\nqdbak.sh需要配置S3备份数据路径和备份工具，以及集群api_key，并将脚本上传至集群每个节点\n\n```\nvim /data/program/qdrant/bin/qdbak.sh\n\nexport tools=\"/usr/local/bin/mc\"\n\nexport snapshots_path=\"qdrant_snapshots\"\n\nexport S3_dir=\"minio-server/qdrant-bucket/${snapshots_path}\"\n\nexport api_key=\"F24CF34BBC63901A5C401A25F51C1339\"\n```\n\n常用命令：\n\n```\n./qdbak.sh \nUsage: qdbak [options] [args]\n  option:\n    -L         show qdrant backup\n    -A         backup all collection\n    -B         backup collection\n    -R         Restore collection\n    -b <ver>   set collection name, default is null\n    -s <ver>   set restore snapshots name, default is null\n```\n\n#### 2、备份\n\n备份只备份当前节点数据\n\n##### 2.1 创建单个集合快照\n\n```\n./qdbak.sh -b test -B\n\n2025-03-23 14:09:42 INFO Start backup collection: test\n2025-03-23 14:18:39 INFO Snapshot creation successful for test.\n2025-03-23 14:18:39 INFO Remove overdue snapshots in docker successful for test.\n2025-03-23 14:18:39 INFO End backup collection: test.\n```\n\n##### 2.2 创建所有集合快照\n\n```\n./qdbak.sh -A\n\n2025-03-24 10:30:01 INFO Action begin: backup_all_collection\n2025-03-24 10:30:01 INFO Starting ...\n2025-03-24 10:30:01 INFO Start backup collection: zy_test_bq_s8\n2025-03-24 10:45:09 INFO Snapshot creation successful for zy_test_bq_s8.\n2025-03-24 10:45:09 INFO Remove overdue snapshots in docker successful for zy_test_bq_s8.\n2025-03-24 10:45:09 INFO End backup collection: zy_test_bq_s8.\n2025-03-24 10:45:09 INFO Start backup collection: opinion_history_test\n2025-03-24 10:45:49 INFO Snapshot creation successful for opinion_history_test.\n2025-03-24 10:45:49 INFO Remove overdue snapshots in docker successful for opinion_history_test.\n2025-03-24 10:45:49 INFO End backup collection: opinion_history_test.\n2025-03-24 11:03:01 INFO  All collections has been backuped.\n2025-03-24 11:03:01 INFO Action successed: backup_all_collection\n```\n\n#### 3、恢复\n\n查看恢复快照名称和节点\n\n```\n./qdbak.sh -L\n```\n\n恢复单个集合当前节点的快照（快照恢复两个节点数据完成恢复且可以正常使用）\n\n```\n./qdbak.sh -s test-1993017374776241-2025-03-21-05-41-23.snapshot -R\n```\n\n恢复完成后，查看集合数据是否正常\n\n```\nGET collections/test\n```\n\n### 五、集群监控与遥测\n\n```\n官方文档：https://qdrant.tech/documentation/guides/monitoring/\njson_export文档: https://github.com/prometheus-community/json_exporter\nprometheus文档：https://prometheus.io/docs/prometheus/latest/configuration/configuration/#http_config\n```\n\n#### 1、 节点指标`/metrics`\n\n```\n指标端点：http://localhost:6333/metrics\n```\n\nqdrant开启api_key和read_only_key时，采集配置需要配置authorization.credentials值\n\n```\n  - job_name: 'qdrant-exporter'\n    metrics_path: /metrics\n    scheme: \"http\"\n    authorization:\n      credentials: \"123\"\n```\n\n#### **2、遥测端点`/telemetry`**\n\n输出结果为json格式，通过json_export进行采集配置,json_export只需要部署单节点即可\n\n```\nhttp://172.16.20.46:6333/telemetry?details_level=3\n```\n\njson_export的config.yml\n\n```\nmodules:\n  qdrant:\n    headers:\n      X-Dummy: my-test-header\n    http_client_config:\n      authorization:\n        credentials: '123'\n    metrics:\n    - name: qdrant_collection_vectors\n      type: object\n      path: \"{.result.collections.collections[*]}\"\n      labels:\n        collection_id: \"{.id}\"\n        distance: \"{.config.params.vectors.distance}\"\n      values:\n        size: '{.config.params.vectors.size}'\n        on_disk_enable: '{.config.params.vectors.on_disk}'\n      help: \"vaule of vectors per collection\"\n```\n\nprometheus.yml\n\n```\n  - job_name: json_exporter\n    static_configs:\n    - targets:\n      - 172.16.20.65:7979\n\n  - job_name: 'qdrant_telemetry'\n    metrics_path: /probe\n    params:\n      module: [qdrant]\n    static_configs:\n    - targets:\n      - \"http://172.16.20.65:6333/telemetry?details_level=3\"\n      labels:\n        ident: qdrant-20-65-test-shenzhen-office\n    - targets:\n      - \"http://172.16.20.46:6333/telemetry?details_level=3\"\n      labels:\n        ident: qdrant-20-46-test-shenzhen-office\n    - targets:\n      - \"http://172.16.20.90:6333/telemetry?details_level=3\"\n      labels:\n        ident: qdrant-20-90-test-shenzhen-office\n    relabel_configs:\n      - source_labels: [__address__]\n        target_label: __param_target\n      - source_labels: [__param_target]\n        target_label: instance\n      - target_label: __address__\n        replacement: 172.16.20.65:7979\n```\n\n#### 3、集合分片信息采集\n\n编写数据采集脚本，collection.sh。通过categraf执行脚本进行数据采集\n\n```\n#!/bin/bash\n\nexport api_key=\"qdrant@1133\"\nexport IP=$(for device in $(ls -l /sys/class/net/ | sed 1d | awk '!/virtual/{print $9}'); do ip -4 -o addr show $device primary | awk -F'[/ ]' '{print $7}'; done | head -n1)\n\n# 获取 collections 并转换为数组\nmapfile -t collections < <(curl -s -H \"Authorization: Bearer ${api_key}\" http://${IP}:6333/collections | jq -r '.result.collections[].name')\n\n# 遍历每个 collection 并获取其状态\nfor collection_name in \"${collections[@]}\"; do\n    response=$(curl -s -H \"Authorization: Bearer ${api_key}\" http://${IP}:6333/collections/${collection_name})\n    collection_status=$(echo \"$response\" | jq -r '.result.status')\n    case \"$collection_status\" in\n        green)\n            echo \"qdrant_collection_status{collection_id=\\\"${collection_name}\\\", job=\\\"qdrant_telemetry\\\"} 1\"\n            ;;\n        yellow)\n            echo \"qdrant_collection_status{collection_id=\\\"${collection_name}\\\", job=\\\"qdrant_telemetry\\\"} 2\"\n            ;;\n        red)\n            echo \"qdrant_collection_status{collection_id=\\\"${collection_name}\\\", job=\\\"qdrant_telemetry\\\"} 3\"\n            ;;\n        *)\n            echo \"qdrant_collection_status{collection_id=\\\"${collection_name}\\\", job=\\\"qdrant_telemetry\\\"} 0\"\n            ;;\n    esac\n\n    ACTIVE_SHARDS=$(curl -s -XGET \"http://${IP}:6333/collections/${collection_name}/cluster\" \\\n  --header \"api-key: ${api_key}\" | jq '.result.local_shards[] | select(.state == \"Active\") | .shard_id')\n\n    Partial_SHARDS=$(curl -s -XGET \"http://${IP}:6333/collections/${collection_name}/cluster\" \\\n  --header \"api-key: ${api_key}\" | jq '.result.local_shards[] | select(.state == \"Partial\") | .shard_id')\n\n    Dead_SHARDS=$(curl -s -XGET \"http://${IP}:6333/collections/${collection_name}/cluster\" \\\n  --header \"api-key: ${api_key}\" | jq '.result.local_shards[] | select(.state == \"Dead\") | .shard_id')\n\n    for shard in $ACTIVE_SHARDS; do\n        echo \"qdrant_shard_status{collection_id=\\\"${collection_name}\\\", shard_id=\\\"${shard}\\\", job=\\\"qdrant_telemetry\\\"} 1\"\n    done\n\n    for shard in $Partial_SHARDS; do\n        echo \"qdrant_shard_status{collection_id=\\\"${collection_name}\\\", shard_id=\\\"${shard}\\\", job=\\\"qdrant_telemetry\\\"} 1\"\n    done\n\n    for shard in $Dead_SHARDS; do\n        echo \"qdrant_shard_status{collection_id=\\\"${collection_name}\\\", shard_id=\\\"${shard}\\\", job=\\\"qdrant_telemetry\\\"} 1\"\n    done\ndone\n```\n\n### 六、常用运维API\n\n```\n# api参考文档\nhttps://api.qdrant.tech/api-reference\n```\n\n#### 1、集合\n\n##### 1.1 获取集合详细信息\n\n```\ncurl  -X GET \\\n  'http://localhost:6333/collections/collection_name' \\\n  --header 'api-key: <api-key-value>'\n```\n\n##### 1.2 更新集合参数\n\n```\ncurl  -X PATCH \\\n  'http://localhost:6333/collections/collection_name' \\\n  --header 'api-key: <api-key-value>' \\\n  --header 'Content-Type: application/json' \\\n  --data-raw '{\n  \"optimizers_config\": {\n    \"indexing_threshold\": 10000\n  }\n}'\n```\n\n##### 1.3 列出所有集合\n\n```\ncurl  -X GET \\\n  'http://localhost:6333/collections' \\\n  --header 'api-key: <api-key-value>'\n```\n\n##### 1.4 检查集合是否存在\n\n```\ncurl  -X GET \\\n  'http://localhost:6333/collections/collection_name/exists' \\\n  --header 'api-key: <api-key-value>'\n```\n\n#### 2、快照（基于集合）\n\n##### 2.1 列出所有快照\n\n```\ncurl  -X GET \\\n  'http://localhost:6333/collections/collection_name/snapshots' \\\n  --header 'api-key: <api-key-value>'\n```\n\n##### 2.2 创建快照\n\n```\ncurl  -X POST \\\n  'http://localhost:6333/collections/collection_name/snapshots' \\\n  --header 'api-key: <api-key-value>'\n```\n\n##### 2.3 上传的快照中恢复\n\n```\ncurl  -X POST \\\n  'http://localhost:6333/collections/collection_name/snapshots/upload' \\\n  --header 'api-key: <api-key-value>' \\\n  -F 'snapshot=@/path/to/snapshot.shapshot'\n```\n\n##### 2.4 从快照中恢复\n\nsnapshot路径为容器中qdrant实际路径\n\n```\ncurl  -X PUT \\\n  'http://localhost:6333/collections/collection_name/snapshots/recover' \\\n  --header 'api-key: <api-key-value>' \\\n  --header 'Content-Type: application/json' \\\n  -d '{\n  \"location\": \"file:///qdrant/qdrant_snapshots/colletion_name/snapshot.shapshot\"\n}'\n```\n\n##### 2.5 下载快照\n\n```\ncurl http://localhost:6333/collections/:collection_name/snapshots/:snapshot_name \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 2.6 删除快照\n\n```\ncurl  -X DELETE \\\n  'http://localhost:6333/collections/collection_name/snapshots/snapshot_name' \\\n  --header 'api-key: <api-key-value>'\n```\n\n#### 3、分布式\n\n##### 3.1 检查集群状态\n\n```\ncurl http://localhost:6333/cluster \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 3.2 创建分片键\n\n```\ncurl  -X PUT \\\n  'http://localhost:6333/collections/collection_name/shards' \\\n  --header 'api-key: <api-key-value>' \\\n  --header 'Content-Type: application/json' \\\n  --data-raw '{\n  \"shard_key\": \"{shard_key}\"\n}'\n```\n\n##### 3.3 删除分片键\n\n```\ncurl  -X POST \\\n  'http://localhost:6333/collections/collection_name/shards/delete' \\\n  --header 'api-key: <api-key-value>' \\\n  --header 'Content-Type: application/json' \\\n  --data-raw '{\n  \"shard_key\": \"{shard_key}\"\n}'\n```\n\n##### 3.4 恢复集群状态\n\n```\ncurl -X POST http://localhost:6333/cluster/recover \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 3.5 集群中删除对等体\n\n```\ncurl -X DELETE http://localhost:6333/cluster/peer/1 \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 3.6 检索集群详细信息\n\n```\ncurl http://localhost:6333/collections/collection_name/cluster \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 3.7 更新集群设置\n\n```\ncurl -X POST http://localhost:6333/collections/collection_name/cluster \\\n     -H \"api-key: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"move_shard\": {\n    \"shard_id\": 1,\n    \"to_peer_id\": 1,\n    \"from_peer_id\": 1\n  }\n}'\n```\n\n#### 4、监控\n\n##### 4.1 检索实例详细信息\n\n```\ncurl http://localhost:6333/ \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 4.2 收集遥测数据\n\n```\ncurl http://localhost:6333/telemetry \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 4.3 收集 Prometheus 指标数据\n\n```\ncurl -G http://localhost:6333/metrics \\\n     -H \"api-key: <apiKey>\" \\\n     -d anonymize=true\n```\n\n##### 4.4 检查写保护\n\n```\ncurl http://localhost:6333/locks \\\n     -H \"api-key: <apiKey>\"\n```\n\n##### 4.5 设置写保护\n\n```\ncurl -X POST http://localhost:6333/locks \\\n     -H \"api-key: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"write\": true\n}'\n```\n\n##### 4.6 单实例健康检查\n\n```\ncurl http://localhost:6333/healthz \\\n     -H \"api-key: <apiKey>\"\n```\n\n### 七、集群故障恢复\n\n##### 1、使用复制的集合进行恢复\n\n```\n如果失败的节点数量少于集合的复制因子，那么您的集群应该仍然能够执行读取、搜索和更新查询。\n\n现在，如果故障节点重新启动，共识机制将触发复制过程，以使用最新的更新来更新恢复节点，这些更新是它错过的。\n\n如果故障节点永远不会重新启动，您可以在拥有3个或更多节点的集群中恢复丢失的分片。在较小的集群中，您无法恢复丢失的分片，因为恢复操作需要通过raft，这要求超过50%的节点是健康的。\n```\n\n##### 2、使用复制的集合重新创建节点\n\n如果一个节点失败且无法恢复，您应该将该失效节点从共识中排除，并创建一个空节点，确保数据目录为空。\n\n要从集群中排除失败的节点， 如有必要，应用`force`标志。\n\n```\ncurl -X DELETE \"http://localhost:6333/cluster/peer/2120809141859359?force=true\" \\\n     -H \"api-key: qdrant@1133\"\n```\n\n当你创建一个新节点时，确保通过指定`--bootstrap` CLI参数并将其设置为任何正在运行的集群节点的URL，将其附加到现有集群。\n\n一旦新节点准备就绪并与集群同步，手动平衡分片\n\n```\ncurl -X POST http://localhost:6333/collections/test/cluster \\\n     -H \"api-key: qdrant@1133\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"replicate_shard\": {\n    \"shard_id\": 0,\n    \"to_peer_id\": 2120809141859359,\n    \"from_peer_id\": 3306291262481813\n  }\n}'\n```\n\n##### 3、从快照恢复\n\n如果集群中没有数据的副本，仍然可以从快照中恢复，确保数据目录为空。\n\n按照相同的步骤分离失败的节点并在集群中创建一个新节点：\n\n```\n要从集群中排除失败的节点，请使用移除节点。如有必要，应用`force`标志。\n创建一个新节点，确保通过指定`--bootstrap` CLI参数并附上任何正在运行的集群节点的URL，将其附加到现有集群。\n```\n\n","slug":"Qdrant详解","published":1,"date":"2025-05-08T01:27:02.354Z","updated":"2025-05-08T01:27:02.354Z","_id":"cmadrwg8l0000jab8gddbfipn","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"一、介绍\"><a href=\"#一、介绍\" class=\"headerlink\" title=\"一、介绍\"></a>一、介绍</h3><h4 id=\"1、-Qdrant-是什么？\"><a href=\"#1、-Qdrant-是什么？\" class=\"headerlink\" title=\"1、 Qdrant 是什么？\"></a>1、 Qdrant 是什么？</h4><p>Qdrant（读作：quadrant）是一个矢量相似性<a href=\"https://so.csdn.net/so/search?q=%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E&spm=1001.2101.3001.7020\">搜索引擎</a>和矢量数据库。它提供了一个方便的API来存储、搜索和管理点向量的生产就绪服务，并提供了额外的有效负载专门用于扩展过滤支持。这使得在各种神经网络或基于语义的匹配、多面搜索和其他应用方面更加有用。</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elixir\"><span class=\"hljs-title class_\">Github</span>地址<span class=\"hljs-symbol\">:https</span><span class=\"hljs-symbol\">://github</span>.com/qdrant/qdrant<br><br>官网<span class=\"hljs-symbol\">:https</span><span class=\"hljs-symbol\">://qdrant</span>.tech/<br><br>官方文档<span class=\"hljs-symbol\">:https</span><span class=\"hljs-symbol\">://qdrant</span>.tech/documentation/<br><br>详细的实例参考<span class=\"hljs-symbol\">:https</span><span class=\"hljs-symbol\">://qdrant</span>.tech/documentation/tutorials/search-beginners/<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2、-什么是矢量数据库？\"><a href=\"#2、-什么是矢量数据库？\" class=\"headerlink\" title=\"2、 什么是矢量数据库？\"></a>2、 什么是矢量数据库？</h4><h4 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"/%E5%9B%BE%E7%89%87/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93.png\"></h4><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">向量数据库是一种旨在高效存储和查询高维向量的数据库。在传统的OLTP和OLAP 数据库中（如上图所示），数据按行和列组织（称为表），并根据这些列中的值执行查询。然而，在某些应用中，包括图像识别、自然语言处理和推荐系统，数据通常表示为高维空间中的向量，这些向量加上 <span class=\"hljs-built_in\">id</span> 和有效负载就是我们在 Qdrant 等向量数据库内存储在称为集合的东西中的元素。<br><br>在此上下文中，向量是对象或数据点的数学表示，其中向量的元素隐式或显式地对应于对象的特定特征或属性。例如，在图像识别系统中，向量可以表示图像，向量的每个元素表示像素值或该像素的描述符/特性。在音乐推荐系统中，每个向量可以表示一首歌曲，向量的元素将捕获歌曲的特征，例如节奏、流派、歌词等。<br><br>向量数据库针对高效存储和查询这些高维向量进行了优化，它们通常使用专门的数据结构和索引技术，例如用于实现近似最近邻的分层可导航小世界 (HNSW) 和乘积量化等。这些数据库支持快速相似性和语义搜索，同时允许用户根据某种距离度量找到与给定查询向量最接近的向量。最常用的距离度量是欧几里得距离、余弦相似度和点积，Qdrant 完全支持这三种度量。<br></code></pre></td></tr></table></figure>\n\n<p>以下是这三者的简要概述：</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs subunit\">余弦相似度- 余弦相似度是一种衡量两个向量相似度的方法。简单来说，它反映的是两个向量是具有相同方向（相似）还是完全不同。余弦相似度通常与文本表示一起使用，以比较两个文档或句子之间的相似度。余弦相似度的输出范围从 <span class=\"hljs-string\">-1</span> 到 1，其中 <span class=\"hljs-string\">-1</span> 表示两个向量完全不相似，1 表示最大相似度。<br><br>点积- 点积相似度度量是测量两个向量相似度的另一种方法。与余弦相似度不同，它还考虑向量的长度。例如，当基于术语（单词）频率构建文档的向量表示时，这可能很重要。点积相似度是通过将两个向量中的相应值相乘，然后对这些乘积求和来计算的。总和越高，两个向量就越相似。如果对向量进行归一化（使它们中的数字总和为 1），则点积相似度将变为余弦相似度。<br><br>欧几里得距离- 欧几里得距离是一种测量空间中两点之间距离的方法，类似于我们测量地图上两点之间距离的方法。它的计算方法是求两点坐标平方差之和的平方根。这种距离度量也常用于机器学习，以测量两个向量的相似度或相异度。<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3、为什么我们需要矢量数据库\"><a href=\"#3、为什么我们需要矢量数据库\" class=\"headerlink\" title=\"3、为什么我们需要矢量数据库\"></a>3、为什么我们需要矢量数据库</h4><p>向量数据库在需要相似性搜索的各种应用中起着至关重要的作用，例如推荐系统、基于内容的图像检索和个性化搜索。通过利用其高效的索引和搜索技术，向量数据库可以更快、更准确地检索已表示为向量的非结构化数据，从而帮助向用户展示与其查询最相关的结果。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">高维数据的有效存储和索引。<br>能够处理具有数十亿数据点的大规模数据集。<br>支持实时分析和查询。<br>能够处理来自复杂数据类型（例如图像、视频和自然语言文本）的向量。<br>提高机器学习和人工智能应用的性能并减少延迟。<br>与构建定制解决方案相比，减少了开发和部署的时间和成本。<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4、Qdrant-架构的高层概述\"><a href=\"#4、Qdrant-架构的高层概述\" class=\"headerlink\" title=\"4、Qdrant 架构的高层概述\"></a>4、Qdrant 架构的高层概述</h4><p><img src=\"/%E5%9B%BE%E7%89%87/qdrant%E6%9E%B6%E6%9E%84.png\"></p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">集合：集合是一组命名的点（带有有效载荷的向量），您可以在其中进行搜索。同一个集合中每个点的向量必须具有相同的维数，并按单个指标进行比较。命名向量可用于在单个点中拥有多个向量，每个向量可以有自己的维数和指标要求。<br><br>距离度量：这些度量用于测量向量之间的相似性，必须在创建集合时选择它们。度量的选择取决于获取向量的方式，特别是用于编码新查询的神经网络。<br><br>点：点是 Qdrant 操作的中心实体，由一个向量和一个可选的 <span class=\"hljs-built_in\">id</span> 和有效载荷组成。<br>   <span class=\"hljs-built_in\">id</span>：向量的唯一标识符。<br>   向量：数据的高维表示，例如图像、声音、文档、视频等。<br>   有效载荷：有效载荷是一个 JSON 对象，其中包含可添加到向量的附加数据。<br><br>存储：Qdrant 可以使用两种存储选项之一，内存存储（将所有向量存储在 RAM 中，由于仅在持久性时才需要磁盘访问，因此速度最快），或Memmap存储（创建与磁盘上的文件关联的虚拟地址空间）。<br><br>客户端：您可以用来连接 Qdrant 的编程语言。<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"二、分布式集群部署\"><a href=\"#二、分布式集群部署\" class=\"headerlink\" title=\"二、分布式集群部署\"></a>二、分布式集群部署</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">docker-compose方式进行分布式集群部署。<br>官方文档：https:<span class=\"hljs-regexp\">//</span>qdrant.tech<span class=\"hljs-regexp\">/documentation/gui</span>des<span class=\"hljs-regexp\">/distributed_deployment/</span><br>基本要求：<br>分片的数量必须是集群中当前运行的节点数量的倍数，最好为<span class=\"hljs-number\">2</span>倍<br>集合的复制因子至少为<span class=\"hljs-number\">2</span>，否则集群功能无法正常使用<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1、节点规划\"><a href=\"#1、节点规划\" class=\"headerlink\" title=\"1、节点规划\"></a>1、节点规划</h4><table>\n<thead>\n<tr>\n<th>HOST</th>\n<th>PORT</th>\n<th>数据目录</th>\n<th>config</th>\n<th>snapshots</th>\n<th>logs</th>\n<th>bin</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>172.16.20.65&#x2F;ledger</td>\n<td>6333-6335</td>\n<td>.&#x2F;data</td>\n<td>.&#x2F;config&#x2F;cluster_config.yaml</td>\n<td>.&#x2F;snapshots</td>\n<td>.&#x2F;logs</td>\n<td>.&#x2F;bin</td>\n</tr>\n<tr>\n<td>172.16.20.46&#x2F;follower</td>\n<td>6333-6335</td>\n<td>.&#x2F;data</td>\n<td>.&#x2F;config&#x2F;cluster_config.yaml</td>\n<td>.&#x2F;snapshots</td>\n<td>.&#x2F;logs</td>\n<td>.&#x2F;bin</td>\n</tr>\n<tr>\n<td>172.16.20.90&#x2F;follower</td>\n<td>6333-6335</td>\n<td>.&#x2F;data</td>\n<td>.&#x2F;config&#x2F;cluster_config.yaml</td>\n<td>.&#x2F;snapshots</td>\n<td>.&#x2F;logs</td>\n<td>.&#x2F;bin</td>\n</tr>\n</tbody></table>\n<h4 id=\"2、qdrant集群部署\"><a href=\"#2、qdrant集群部署\" class=\"headerlink\" title=\"2、qdrant集群部署\"></a>2、qdrant集群部署</h4><h5 id=\"2-1-镜像下载对应版本\"><a href=\"#2-1-镜像下载对应版本\" class=\"headerlink\" title=\"2.1 镜像下载对应版本\"></a>2.1 镜像下载对应版本</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> pull qdrant/qdrant：v1.<span class=\"hljs-number\">13</span>.<span class=\"hljs-number\">3</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-创建部署目录\"><a href=\"#2-2-创建部署目录\" class=\"headerlink\" title=\"2.2 创建部署目录\"></a>2.2 创建部署目录</h5><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fortran\">mkdir -p /<span class=\"hljs-keyword\">data</span>/<span class=\"hljs-function\"><span class=\"hljs-keyword\">program</span></span>/qdrant/&#123;<span class=\"hljs-keyword\">data</span>,config,sanpshots,logs,bin&#125;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-3-配置文件\"><a href=\"#2-3-配置文件\" class=\"headerlink\" title=\"2.3 配置文件\"></a>2.3 配置文件</h5><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">官方配置参考：https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/qdrant/</span>qdrant<span class=\"hljs-regexp\">/tree/m</span>aster<span class=\"hljs-regexp\">/config/</span><br></code></pre></td></tr></table></figure>\n\n<p>下载v1.13.3版本config.yaml进行配置，集群三节点配置内容相同，参考配置：</p>\n<p>vim &#x2F;data&#x2F;program&#x2F;qdrant&#x2F;config&#x2F;cluster_config.yaml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">log_level:</span> <span class=\"hljs-string\">INFO</span><br><br><span class=\"hljs-comment\"># Logging configuration</span><br><span class=\"hljs-comment\"># Qdrant logs to stdout. You may configure to also write logs to a file on disk.</span><br><span class=\"hljs-comment\"># Be aware that this file may grow indefinitely.</span><br><span class=\"hljs-attr\">logger:</span><br>  <span class=\"hljs-attr\">on_disk:</span><br>    <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">log_file:</span> <span class=\"hljs-string\">/qdrant/logs/qdrant.log</span><br>    <span class=\"hljs-attr\">log_level:</span> <span class=\"hljs-string\">INFO</span><br>    <span class=\"hljs-comment\"># Logging format, supports `text` and `json`</span><br>    <span class=\"hljs-attr\">format:</span> <span class=\"hljs-string\">json</span><br><br><span class=\"hljs-attr\">storage:</span><br>  <span class=\"hljs-comment\"># Where to store all the data</span><br>  <span class=\"hljs-attr\">storage_path:</span> <span class=\"hljs-string\">./storage</span><br><br>  <span class=\"hljs-comment\"># Where to store snapshots</span><br>  <span class=\"hljs-attr\">snapshots_path:</span> <span class=\"hljs-string\">./qdrant_snapshots</span><br><br>  <span class=\"hljs-attr\">snapshots_config:</span><br>    <span class=\"hljs-comment\"># &quot;local&quot; or &quot;s3&quot; - where to store snapshots</span><br>    <span class=\"hljs-attr\">snapshots_storage:</span> <span class=\"hljs-string\">s3</span><br>    <span class=\"hljs-attr\">s3_config:</span><br>      <span class=\"hljs-attr\">bucket:</span> <span class=\"hljs-string\">&quot;qdrant-bucket&quot;</span><br>      <span class=\"hljs-attr\">region:</span> <span class=\"hljs-string\">&quot;REGION&quot;</span><br>      <span class=\"hljs-attr\">access_key:</span> <span class=\"hljs-string\">&quot;admin&quot;</span><br>      <span class=\"hljs-attr\">secret_key:</span> <span class=\"hljs-string\">&quot;123456&quot;</span><br>      <span class=\"hljs-attr\">endpoint_url:</span> <span class=\"hljs-string\">&quot;http://112.16.20.1:9001&quot;</span><br><br>  <span class=\"hljs-comment\"># Where to store temporary files</span><br>  <span class=\"hljs-comment\"># If null, temporary snapshots are stored in: storage/snapshots_temp/</span><br>  <span class=\"hljs-attr\">temp_path:</span> <span class=\"hljs-literal\">null</span><br><br>  <span class=\"hljs-comment\"># If true - point payloads will not be stored in memory.</span><br>  <span class=\"hljs-comment\"># It will be read from the disk every time it is requested.</span><br>  <span class=\"hljs-comment\"># This setting saves RAM by (slightly) increasing the response time.</span><br>  <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> those payload values that are involved in filtering and are indexed - remain in RAM.</span><br>  <span class=\"hljs-comment\"># </span><br>  <span class=\"hljs-comment\"># Default: true</span><br>  <span class=\"hljs-attr\">on_disk_payload:</span> <span class=\"hljs-literal\">true</span><br><br>  <span class=\"hljs-comment\"># Maximum number of concurrent updates to shard replicas</span><br>  <span class=\"hljs-comment\"># If `null` - maximum concurrency is used.</span><br>  <span class=\"hljs-attr\">update_concurrency:</span> <span class=\"hljs-literal\">null</span><br><br>  <span class=\"hljs-comment\"># Write-ahead-log related configuration</span><br>  <span class=\"hljs-attr\">wal:</span><br>    <span class=\"hljs-comment\"># Size of a single WAL segment</span><br>    <span class=\"hljs-attr\">wal_capacity_mb:</span> <span class=\"hljs-number\">32</span><br><br>    <span class=\"hljs-comment\"># Number of WAL segments to create ahead of actual data requirement</span><br>    <span class=\"hljs-attr\">wal_segments_ahead:</span> <span class=\"hljs-number\">0</span><br><br>  <span class=\"hljs-comment\"># Normal node - receives all updates and answers all queries</span><br>  <span class=\"hljs-attr\">node_type:</span> <span class=\"hljs-string\">&quot;Normal&quot;</span><br><br>  <span class=\"hljs-comment\"># Listener node - receives all updates, but does not answer search/read queries</span><br>  <span class=\"hljs-comment\"># Useful for setting up a dedicated backup node</span><br>  <span class=\"hljs-comment\"># node_type: &quot;Listener&quot;</span><br><br>  <span class=\"hljs-attr\">performance:</span><br>    <span class=\"hljs-comment\"># Number of parallel threads used for search operations. If 0 - auto selection.</span><br>    <span class=\"hljs-attr\">max_search_threads:</span> <span class=\"hljs-number\">0</span><br><br>    <span class=\"hljs-comment\"># Max number of threads (jobs) for running optimizations across all collections, each thread runs one job.</span><br>    <span class=\"hljs-comment\"># If 0 - have no limit and choose dynamically to saturate CPU.</span><br>    <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> each optimization job will also use `max_indexing_threads` threads by itself for index building.</span><br>    <span class=\"hljs-attr\">max_optimization_threads:</span> <span class=\"hljs-number\">0</span><br><br>    <span class=\"hljs-comment\"># CPU budget, how many CPUs (threads) to allocate for an optimization job.</span><br>    <span class=\"hljs-comment\"># If 0 - auto selection, keep 1 or more CPUs unallocated depending on CPU size</span><br>    <span class=\"hljs-comment\"># If negative - subtract this number of CPUs from the available CPUs.</span><br>    <span class=\"hljs-comment\"># If positive - use this exact number of CPUs.</span><br>    <span class=\"hljs-attr\">optimizer_cpu_budget:</span> <span class=\"hljs-number\">0</span><br><br>    <span class=\"hljs-comment\"># Prevent DDoS of too many concurrent updates in distributed mode.</span><br>    <span class=\"hljs-comment\"># One external update usually triggers multiple internal updates, which breaks internal</span><br>    <span class=\"hljs-comment\"># timings. For example, the health check timing and consensus timing.</span><br>    <span class=\"hljs-comment\"># If null - auto selection.</span><br>    <span class=\"hljs-attr\">update_rate_limit:</span> <span class=\"hljs-literal\">null</span><br><br>    <span class=\"hljs-comment\"># Limit for number of incoming automatic shard transfers per collection on this node, does not affect user-requested transfers.</span><br>    <span class=\"hljs-comment\"># The same value should be used on all nodes in a cluster.</span><br>    <span class=\"hljs-comment\"># Default is to allow 1 transfer.</span><br>    <span class=\"hljs-comment\"># If null - allow unlimited transfers.</span><br>    <span class=\"hljs-comment\">#incoming_shard_transfers_limit: 1</span><br><br>    <span class=\"hljs-comment\"># Limit for number of outgoing automatic shard transfers per collection on this node, does not affect user-requested transfers.</span><br>    <span class=\"hljs-comment\"># The same value should be used on all nodes in a cluster.</span><br>    <span class=\"hljs-comment\"># Default is to allow 1 transfer.</span><br>    <span class=\"hljs-comment\"># If null - allow unlimited transfers.</span><br>    <span class=\"hljs-comment\">#outgoing_shard_transfers_limit: 1</span><br><br>    <span class=\"hljs-comment\"># Enable async scorer which uses io_uring when rescoring.</span><br>    <span class=\"hljs-comment\"># Only supported on Linux, must be enabled in your kernel.</span><br>    <span class=\"hljs-comment\"># See: &lt;https://qdrant.tech/articles/io_uring/#and-what-about-qdrant&gt;</span><br>    <span class=\"hljs-comment\">#async_scorer: false</span><br><br>  <span class=\"hljs-attr\">optimizers:</span><br>    <span class=\"hljs-comment\"># The minimal fraction of deleted vectors in a segment, required to perform segment optimization</span><br>    <span class=\"hljs-attr\">deleted_threshold:</span> <span class=\"hljs-number\">0.2</span><br><br>    <span class=\"hljs-comment\"># The minimal number of vectors in a segment, required to perform segment optimization</span><br>    <span class=\"hljs-attr\">vacuum_min_vector_number:</span> <span class=\"hljs-number\">1000</span><br><br>    <span class=\"hljs-comment\"># Target amount of segments optimizer will try to keep.</span><br>    <span class=\"hljs-comment\"># Real amount of segments may vary depending on multiple parameters:</span><br>    <span class=\"hljs-comment\">#  - Amount of stored points</span><br>    <span class=\"hljs-comment\">#  - Current write RPS</span><br>    <span class=\"hljs-comment\">#</span><br>    <span class=\"hljs-comment\"># It is recommended to select default number of segments as a factor of the number of search threads,</span><br>    <span class=\"hljs-comment\"># so that each segment would be handled evenly by one of the threads.</span><br>    <span class=\"hljs-comment\"># If `default_segment_number = 0`, will be automatically selected by the number of available CPUs</span><br>    <span class=\"hljs-attr\">default_segment_number:</span> <span class=\"hljs-number\">0</span><br><br>    <span class=\"hljs-comment\"># Do not create segments larger this size (in KiloBytes).</span><br>    <span class=\"hljs-comment\"># Large segments might require disproportionately long indexation times,</span><br>    <span class=\"hljs-comment\"># therefore it makes sense to limit the size of segments.</span><br>    <span class=\"hljs-comment\">#</span><br>    <span class=\"hljs-comment\"># If indexation speed have more priority for your - make this parameter lower.</span><br>    <span class=\"hljs-comment\"># If search speed is more important - make this parameter higher.</span><br>    <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> 1Kb = 1 vector of size 256</span><br>    <span class=\"hljs-comment\"># If not set, will be automatically selected considering the number of available CPUs.</span><br>    <span class=\"hljs-attr\">max_segment_size_kb:</span> <span class=\"hljs-literal\">null</span><br><br>    <span class=\"hljs-comment\"># Maximum size (in KiloBytes) of vectors to store in-memory per segment.</span><br>    <span class=\"hljs-comment\"># Segments larger than this threshold will be stored as read-only memmapped file.</span><br>    <span class=\"hljs-comment\"># To enable memmap storage, lower the threshold</span><br>    <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> 1Kb = 1 vector of size 256</span><br>    <span class=\"hljs-comment\"># To explicitly disable mmap optimization, set to `0`.</span><br>    <span class=\"hljs-comment\"># If not set, will be disabled by default.</span><br>    <span class=\"hljs-attr\">memmap_threshold_kb:</span> <span class=\"hljs-literal\">null</span><br><br>    <span class=\"hljs-comment\"># Maximum size (in KiloBytes) of vectors allowed for plain index.</span><br>    <span class=\"hljs-comment\"># Default value based on https://github.com/google-research/google-research/blob/master/scann/docs/algorithms.md</span><br>    <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> 1Kb = 1 vector of size 256</span><br>    <span class=\"hljs-comment\"># To explicitly disable vector indexing, set to `0`.</span><br>    <span class=\"hljs-comment\"># If not set, the default value will be used.</span><br>    <span class=\"hljs-attr\">indexing_threshold_kb:</span> <span class=\"hljs-number\">20000</span><br><br>    <span class=\"hljs-comment\"># Interval between forced flushes.</span><br>    <span class=\"hljs-attr\">flush_interval_sec:</span> <span class=\"hljs-number\">5</span><br><br>    <span class=\"hljs-comment\"># Max number of threads (jobs) for running optimizations per shard.</span><br>    <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> each optimization job will also use `max_indexing_threads` threads by itself for index building.</span><br>    <span class=\"hljs-comment\"># If null - have no limit and choose dynamically to saturate CPU.</span><br>    <span class=\"hljs-comment\"># If 0 - no optimization threads, optimizations will be disabled.</span><br>    <span class=\"hljs-attr\">max_optimization_threads:</span> <span class=\"hljs-literal\">null</span><br><br>  <span class=\"hljs-comment\"># This section has the same options as &#x27;optimizers&#x27; above. All values specified here will overwrite the collections</span><br>  <span class=\"hljs-comment\"># optimizers configs regardless of the config above and the options specified at collection creation.</span><br>  <span class=\"hljs-comment\">#optimizers_overwrite:</span><br>  <span class=\"hljs-comment\">#  deleted_threshold: 0.2</span><br>  <span class=\"hljs-comment\">#  vacuum_min_vector_number: 1000</span><br>  <span class=\"hljs-comment\">#  default_segment_number: 0</span><br>  <span class=\"hljs-comment\">#  max_segment_size_kb: null</span><br>  <span class=\"hljs-comment\">#  memmap_threshold_kb: null</span><br>  <span class=\"hljs-comment\">#  indexing_threshold_kb: 20000</span><br>  <span class=\"hljs-comment\">#  flush_interval_sec: 5</span><br>  <span class=\"hljs-comment\">#  max_optimization_threads: null</span><br><br>  <span class=\"hljs-comment\"># Default parameters of HNSW Index. Could be overridden for each collection or named vector individually</span><br>  <span class=\"hljs-attr\">hnsw_index:</span><br>    <span class=\"hljs-comment\"># Number of edges per node in the index graph. Larger the value - more accurate the search, more space required.</span><br>    <span class=\"hljs-attr\">m:</span> <span class=\"hljs-number\">16</span><br><br>    <span class=\"hljs-comment\"># Number of neighbours to consider during the index building. Larger the value - more accurate the search, more time required to build index.</span><br>    <span class=\"hljs-attr\">ef_construct:</span> <span class=\"hljs-number\">100</span><br><br>    <span class=\"hljs-comment\"># Minimal size (in KiloBytes) of vectors for additional payload-based indexing.</span><br>    <span class=\"hljs-comment\"># If payload chunk is smaller than `full_scan_threshold_kb` additional indexing won&#x27;t be used -</span><br>    <span class=\"hljs-comment\"># in this case full-scan search should be preferred by query planner and additional indexing is not required.</span><br>    <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> 1Kb = 1 vector of size 256</span><br>    <span class=\"hljs-attr\">full_scan_threshold_kb:</span> <span class=\"hljs-number\">10000</span><br><br>    <span class=\"hljs-comment\"># Number of parallel threads used for background index building.</span><br>    <span class=\"hljs-comment\"># If 0 - automatically select.</span><br>    <span class=\"hljs-comment\"># Best to keep between 8 and 16 to prevent likelihood of building broken/inefficient HNSW graphs.</span><br>    <span class=\"hljs-comment\"># On small CPUs, less threads are used.</span><br>    <span class=\"hljs-attr\">max_indexing_threads:</span> <span class=\"hljs-number\">0</span><br><br>    <span class=\"hljs-comment\"># Store HNSW index on disk. If set to false, index will be stored in RAM. Default: false</span><br>    <span class=\"hljs-attr\">on_disk:</span> <span class=\"hljs-literal\">false</span><br><br>    <span class=\"hljs-comment\"># Custom M param for hnsw graph built for payload index. If not set, default M will be used.</span><br>    <span class=\"hljs-attr\">payload_m:</span> <span class=\"hljs-literal\">null</span><br><br>  <span class=\"hljs-comment\"># Default shard transfer method to use if none is defined.</span><br>  <span class=\"hljs-comment\"># If null - don&#x27;t have a shard transfer preference, choose automatically.</span><br>  <span class=\"hljs-comment\"># If stream_records, snapshot or wal_delta - prefer this specific method.</span><br>  <span class=\"hljs-comment\"># More info: https://qdrant.tech/documentation/guides/distributed_deployment/#shard-transfer-method</span><br>  <span class=\"hljs-attr\">shard_transfer_method:</span> <span class=\"hljs-literal\">null</span><br><br>  <span class=\"hljs-comment\"># Default parameters for collections</span><br>  <span class=\"hljs-attr\">collection:</span><br>    <span class=\"hljs-comment\"># Number of replicas of each shard that network tries to maintain</span><br>    <span class=\"hljs-attr\">replication_factor:</span> <span class=\"hljs-number\">2</span><br><br>    <span class=\"hljs-comment\"># How many replicas should apply the operation for us to consider it successful</span><br>    <span class=\"hljs-attr\">write_consistency_factor:</span> <span class=\"hljs-number\">1</span><br><br>    <span class=\"hljs-comment\"># Default parameters for vectors.</span><br>    <span class=\"hljs-attr\">vectors:</span><br>      <span class=\"hljs-comment\"># Whether vectors should be stored in memory or on disk.</span><br>      <span class=\"hljs-attr\">on_disk:</span> <span class=\"hljs-literal\">null</span><br><br>    <span class=\"hljs-comment\"># shard_number_per_node: 1</span><br><br>    <span class=\"hljs-comment\"># Default quantization configuration.</span><br>    <span class=\"hljs-comment\"># More info: https://qdrant.tech/documentation/guides/quantization</span><br>    <span class=\"hljs-attr\">quantization:</span> <span class=\"hljs-literal\">null</span><br><br>    <span class=\"hljs-comment\"># Default strict mode parameters for newly created collections.</span><br>    <span class=\"hljs-attr\">strict_mode:</span><br>      <span class=\"hljs-comment\"># Whether strict mode is enabled for a collection or not.</span><br>      <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">false</span><br><br>      <span class=\"hljs-comment\"># Max allowed `limit` parameter for all APIs that don&#x27;t have their own max limit.</span><br>      <span class=\"hljs-attr\">max_query_limit:</span> <span class=\"hljs-literal\">null</span><br><br>      <span class=\"hljs-comment\"># Max allowed `timeout` parameter.</span><br>      <span class=\"hljs-attr\">max_timeout:</span> <span class=\"hljs-literal\">null</span><br><br>      <span class=\"hljs-comment\"># Allow usage of unindexed fields in retrieval based (eg. search) filters.</span><br>      <span class=\"hljs-attr\">unindexed_filtering_retrieve:</span> <span class=\"hljs-literal\">null</span><br><br>      <span class=\"hljs-comment\"># Allow usage of unindexed fields in filtered updates (eg. delete by payload).</span><br>      <span class=\"hljs-attr\">unindexed_filtering_update:</span> <span class=\"hljs-literal\">null</span><br><br>      <span class=\"hljs-comment\"># Max HNSW value allowed in search parameters.</span><br>      <span class=\"hljs-attr\">search_max_hnsw_ef:</span> <span class=\"hljs-literal\">null</span><br><br>      <span class=\"hljs-comment\"># Whether exact search is allowed or not.</span><br>      <span class=\"hljs-attr\">search_allow_exact:</span> <span class=\"hljs-literal\">null</span><br><br>      <span class=\"hljs-comment\"># Max oversampling value allowed in search.</span><br>      <span class=\"hljs-attr\">search_max_oversampling:</span> <span class=\"hljs-literal\">null</span><br><br><span class=\"hljs-attr\">service:</span><br>  <span class=\"hljs-comment\"># Maximum size of POST data in a single request in megabytes</span><br>  <span class=\"hljs-attr\">max_request_size_mb:</span> <span class=\"hljs-number\">32</span><br><br>  <span class=\"hljs-comment\"># Number of parallel workers used for serving the api. If 0 - equal to the number of available cores.</span><br>  <span class=\"hljs-comment\"># If missing - Same as storage.max_search_threads</span><br>  <span class=\"hljs-attr\">max_workers:</span> <span class=\"hljs-number\">0</span><br><br>  <span class=\"hljs-comment\"># Host to bind the service on</span><br>  <span class=\"hljs-attr\">host:</span> <span class=\"hljs-number\">0.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.0</span><br><br>  <span class=\"hljs-comment\"># HTTP(S) port to bind the service on</span><br>  <span class=\"hljs-attr\">http_port:</span> <span class=\"hljs-number\">6333</span><br><br>  <span class=\"hljs-comment\"># gRPC port to bind the service on.</span><br>  <span class=\"hljs-comment\"># If `null` - gRPC is disabled. Default: null</span><br>  <span class=\"hljs-comment\"># Comment to disable gRPC:</span><br>  <span class=\"hljs-attr\">grpc_port:</span> <span class=\"hljs-number\">6334</span><br><br>  <span class=\"hljs-comment\"># Enable CORS headers in REST API.</span><br>  <span class=\"hljs-comment\"># If enabled, browsers would be allowed to query REST endpoints regardless of query origin.</span><br>  <span class=\"hljs-comment\"># More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS</span><br>  <span class=\"hljs-comment\"># Default: true</span><br>  <span class=\"hljs-attr\">enable_cors:</span> <span class=\"hljs-literal\">true</span><br><br>  <span class=\"hljs-comment\"># Enable HTTPS for the REST and gRPC API</span><br>  <span class=\"hljs-attr\">enable_tls:</span> <span class=\"hljs-literal\">false</span><br><br>  <span class=\"hljs-comment\"># Check user HTTPS client certificate against CA file specified in tls config</span><br>  <span class=\"hljs-attr\">verify_https_client_certificate:</span> <span class=\"hljs-literal\">false</span><br><br>  <span class=\"hljs-comment\"># Set an api-key.</span><br>  <span class=\"hljs-comment\"># If set, all requests must include a header with the api-key.</span><br>  <span class=\"hljs-comment\"># example header: `api-key: &lt;API-KEY&gt;`</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># If you enable this you should also enable TLS.</span><br>  <span class=\"hljs-comment\"># (Either above or via an external service like nginx.)</span><br>  <span class=\"hljs-comment\"># Sending an api-key over an unencrypted channel is insecure.</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># Uncomment to enable.</span><br>  <span class=\"hljs-attr\">api_key:</span> <span class=\"hljs-string\">&#x27;123456&#x27;</span><br><br>  <span class=\"hljs-comment\"># Set an api-key for read-only operations.</span><br>  <span class=\"hljs-comment\"># If set, all requests must include a header with the api-key.</span><br>  <span class=\"hljs-comment\"># example header: `api-key: &lt;API-KEY&gt;`</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># If you enable this you should also enable TLS.</span><br>  <span class=\"hljs-comment\"># (Either above or via an external service like nginx.)</span><br>  <span class=\"hljs-comment\"># Sending an api-key over an unencrypted channel is insecure.</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># Uncomment to enable.</span><br>  <span class=\"hljs-attr\">read_only_api_key:</span> <span class=\"hljs-string\">&#x27;123&#x27;</span><br><br>  <span class=\"hljs-comment\"># Uncomment to enable JWT Role Based Access Control (RBAC).</span><br>  <span class=\"hljs-comment\"># If enabled, you can generate JWT tokens with fine-grained rules for access control.</span><br>  <span class=\"hljs-comment\"># Use generated token instead of API key.</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-attr\">jwt_rbac:</span> <span class=\"hljs-literal\">true</span><br><br>  <span class=\"hljs-comment\"># Hardware reporting adds information to the API responses with a</span><br>  <span class=\"hljs-comment\"># hint on how many resources were used to execute the request.</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># Uncomment to enable.</span><br>  <span class=\"hljs-comment\"># hardware_reporting: true</span><br><span class=\"hljs-attr\">cluster:</span><br>  <span class=\"hljs-comment\"># Use `enabled: true` to run Qdrant in distributed deployment mode</span><br>  <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">true</span><br><br>  <span class=\"hljs-comment\"># Configuration of the inter-cluster communication</span><br>  <span class=\"hljs-attr\">p2p:</span><br>    <span class=\"hljs-comment\"># Port for internal communication between peers</span><br>    <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">6335</span><br><br>    <span class=\"hljs-comment\"># Use TLS for communication between peers</span><br>    <span class=\"hljs-attr\">enable_tls:</span> <span class=\"hljs-literal\">false</span><br><br>  <span class=\"hljs-comment\"># Configuration related to distributed consensus algorithm</span><br>  <span class=\"hljs-attr\">consensus:</span><br>    <span class=\"hljs-comment\"># How frequently peers should ping each other.</span><br>    <span class=\"hljs-comment\"># Setting this parameter to lower value will allow consensus</span><br>    <span class=\"hljs-comment\"># to detect disconnected nodes earlier, but too frequent</span><br>    <span class=\"hljs-comment\"># tick period may create significant network and CPU overhead.</span><br>    <span class=\"hljs-comment\"># We encourage you NOT to change this parameter unless you know what you are doing.</span><br>    <span class=\"hljs-attr\">tick_period_ms:</span> <span class=\"hljs-number\">100</span><br>    <span class=\"hljs-comment\"># Compact consensus operations once we have this amount of applied</span><br>    <span class=\"hljs-comment\"># operations. Allows peers to join quickly with a consensus snapshot without</span><br>    <span class=\"hljs-comment\"># replaying a huge amount of operations.</span><br>    <span class=\"hljs-comment\"># If 0 - disable compaction</span><br>    <span class=\"hljs-comment\">#compact_wal_entries: 128</span><br><br><span class=\"hljs-comment\"># Set to true to prevent service from sending usage statistics to the developers.</span><br><span class=\"hljs-comment\"># Read more: https://qdrant.tech/documentation/guides/telemetry</span><br><span class=\"hljs-attr\">telemetry_disabled:</span> <span class=\"hljs-literal\">false</span><br><br><span class=\"hljs-comment\"># TLS configuration.</span><br><span class=\"hljs-comment\"># Required if either service.enable_tls or cluster.p2p.enable_tls is true.</span><br><span class=\"hljs-attr\">tls:</span><br>  <span class=\"hljs-comment\"># Server certificate chain file</span><br>  <span class=\"hljs-attr\">cert:</span> <span class=\"hljs-string\">./tls/cert.pem</span><br><br>  <span class=\"hljs-comment\"># Server private key file</span><br>  <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">./tls/key.pem</span><br><br>  <span class=\"hljs-comment\"># Certificate authority certificate file.</span><br>  <span class=\"hljs-comment\"># This certificate will be used to validate the certificates</span><br>  <span class=\"hljs-comment\"># presented by other nodes during inter-cluster communication.</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># If verify_https_client_certificate is true, it will verify</span><br>  <span class=\"hljs-comment\"># HTTPS client certificate</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># Required if cluster.p2p.enable_tls is true.</span><br>  <span class=\"hljs-attr\">ca_cert:</span> <span class=\"hljs-string\">./tls/cacert.pem</span><br><br>  <span class=\"hljs-comment\"># TTL in seconds to reload certificate from disk, useful for certificate rotations.</span><br>  <span class=\"hljs-comment\"># Only works for HTTPS endpoints. Does not support gRPC (and intra-cluster communication).</span><br>  <span class=\"hljs-comment\"># If `null` - TTL is disabled.</span><br>  <span class=\"hljs-attr\">cert_ttl:</span> <span class=\"hljs-number\">3600</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-4-初始化qdrant集群\"><a href=\"#2-4-初始化qdrant集群\" class=\"headerlink\" title=\"2.4 初始化qdrant集群\"></a>2.4 初始化qdrant集群</h5><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">参考文档：https:<span class=\"hljs-regexp\">//</span>qdrant.tech<span class=\"hljs-regexp\">/documentation/gui</span>des<span class=\"hljs-regexp\">/distributed_deployment/</span><br></code></pre></td></tr></table></figure>\n\n<p>配置初始化ledger节点（172.16.20.65）：</p>\n<p>vim &#x2F;data&#x2F;program&#x2F;qdrant&#x2F;qdrant.yaml</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-attribute\">qdrant</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant/qdrant:v1.13.3</span><br>    <span class=\"hljs-attribute\">restart</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant</span><br>    <span class=\"hljs-comment\">#ledger node  </span><br>    <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">./qdrant --uri &#x27;http://172.16.20.65:6335&#x27;</span><br>    <span class=\"hljs-attribute\">ports</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6333:6333</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6334:6334</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6335:6335</span><br>    <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/qdrant/storage</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./snapshots:/qdrant/snapshots</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./logs:/qdrant/logs</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./config/cluster_config.yaml:/qdrant/config/production.yaml</span><br></code></pre></td></tr></table></figure>\n\n<p>配置初始化follower节点（172.16.20.46,172.16.20.90）：</p>\n<p>vim &#x2F;data&#x2F;program&#x2F;qdrant&#x2F;qdrant.yaml</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-attribute\">qdrant</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant/qdrant:v1.13.3</span><br>    <span class=\"hljs-attribute\">restart</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant</span><br>    <span class=\"hljs-comment\">#join node</span><br>    <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">./qdrant --bootstrap &#x27;http://172.16.20.65:6335&#x27;</span><br>    <span class=\"hljs-attribute\">ports</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6333:6333</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6334:6334</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6335:6335</span><br>    <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/qdrant/storage</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./snapshots:/qdrant/snapshots</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./logs:/qdrant/logs</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./config/cluster_config.yaml:/qdrant/config/production.yaml</span><br></code></pre></td></tr></table></figure>\n\n<p>三节点依次启动集群</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">cd</span> /<span class=\"hljs-keyword\">data</span>/program/qdrant/<br>docker<span class=\"hljs-literal\">-compose</span> <span class=\"hljs-operator\">-f</span> qdrant.yaml up <span class=\"hljs-literal\">-d</span><br></code></pre></td></tr></table></figure>\n\n<p>启动完成，登录前台<a href=\"http://172.16.20.46:6333/dashboard%EF%BC%8C%E9%AA%8C%E8%AF%81%E9%9B%86%E7%BE%A4%E7%8A%B6%E6%80%81\">http://172.16.20.46:6333/dashboard，验证集群状态</a></p>\n<p>GET _cluster</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;result&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;enabled&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;peer_id&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4080902811012997</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;peers&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;1993017374776241&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;uri&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;http://172.16.20.90:6335/&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;5880012902421225&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;uri&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;http://172.16.20.65:6335/&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;4080902811012997&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;uri&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;http://172.16.20.46:6335/&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;raft_info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;term&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">83</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;commit&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">304</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;pending_operations&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;leader&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">5880012902421225</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;role&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Follower&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;is_voter&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;consensus_thread_status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;consensus_thread_status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;working&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;last_update&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;2025-03-21T10:02:37.289807369Z&quot;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;message_send_failures&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ok&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0.000019005</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-5-恢复集群正常启动配置\"><a href=\"#2-5-恢复集群正常启动配置\" class=\"headerlink\" title=\"2.5 恢复集群正常启动配置\"></a>2.5 恢复集群正常启动配置</h5><p>配置三节点启动docker-compose文件，修改分布式集群启动方式</p>\n<p>vim &#x2F;data&#x2F;program&#x2F;qdrant&#x2F;qdrant.yaml</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-attribute\">qdrant</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant/qdrant:v1.13.3</span><br>    <span class=\"hljs-attribute\">restart</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant</span><br>    <span class=\"hljs-comment\">#cluster node</span><br>    <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">./qdrant</span><br>    <span class=\"hljs-attribute\">ports</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6333:6333</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6334:6334</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6335:6335</span><br>    <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/qdrant/storage</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./snapshots:/qdrant/snapshots</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./logs:/qdrant/logs</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./config/cluster_config.yaml:/qdrant/config/production.yaml</span><br></code></pre></td></tr></table></figure>\n\n<p>启动完成，登录前台<a href=\"http://172.16.20.46:6333/dashboard%EF%BC%8C%E9%AA%8C%E8%AF%81%E9%9B%86%E7%BE%A4%E7%8A%B6%E6%80%81\">http://172.16.20.46:6333/dashboard，验证集群状态</a></p>\n<p>GET _cluster</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;result&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;enabled&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;peer_id&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4080902811012997</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;peers&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;1993017374776241&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;uri&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;http://172.16.20.90:6335/&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;5880012902421225&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;uri&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;http://172.16.20.65:6335/&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;4080902811012997&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;uri&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;http://172.16.20.46:6335/&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;raft_info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;term&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">83</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;commit&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">304</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;pending_operations&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;leader&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">5880012902421225</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;role&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Follower&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;is_voter&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;consensus_thread_status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;consensus_thread_status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;working&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;last_update&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;2025-03-21T10:02:37.289807369Z&quot;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;message_send_failures&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ok&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0.000019005</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3、qdrant集群升级\"><a href=\"#3、qdrant集群升级\" class=\"headerlink\" title=\"3、qdrant集群升级\"></a>3、qdrant集群升级</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">前提条件：<br>拥有多节点集群，并且您的集合的复制因子至少为2，则升级过程将零停机时间并以滚动方式完成。您将能够正常使用您的数据库集群。<br>有一个单节点集群或复制因子为1的集合，则升级过程将需要短暂的停机时间来使用新版本重新启动集群。<br>集群启动方式不能已初始化方式启动，否则升级过程将选举失败,且无法回退。<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-1-集群集合备份\"><a href=\"#3-1-集群集合备份\" class=\"headerlink\" title=\"3.1 集群集合备份\"></a>3.1 集群集合备份</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">集群集合备份，并确认快照可用,可正常恢复<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-2-检查集群状态\"><a href=\"#3-2-检查集群状态\" class=\"headerlink\" title=\"3.2 检查集群状态\"></a>3.2 检查集群状态</h5><p>验证集群是否为green,且确认每个节点role，默认ledger最后升级</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">GET</span> _cluster<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-3-下载新版本镜像\"><a href=\"#3-3-下载新版本镜像\" class=\"headerlink\" title=\"3.3 下载新版本镜像\"></a>3.3 下载新版本镜像</h5><p>1.13.3 -&gt; 1.13.5</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> pull qdrant/qdrant：v1.<span class=\"hljs-number\">13</span>.<span class=\"hljs-number\">5</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-4-下载新版本配置文件\"><a href=\"#3-4-下载新版本配置文件\" class=\"headerlink\" title=\"3.4 下载新版本配置文件\"></a>3.4 下载新版本配置文件</h5><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">官方配置参考：https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/qdrant/</span>qdrant<span class=\"hljs-regexp\">/tree/m</span>aster<span class=\"hljs-regexp\">/config/</span><br><br>选择config.yml，并与旧配置内容进行比对，进行调整，上传至配置文件目录<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-5-停止旧节点\"><a href=\"#3-5-停止旧节点\" class=\"headerlink\" title=\"3.5 停止旧节点\"></a>3.5 停止旧节点</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">cd</span> /<span class=\"hljs-keyword\">data</span>/program/qdrant/<br>docker<span class=\"hljs-literal\">-compose</span> <span class=\"hljs-operator\">-f</span> qdrant.yaml down<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-6-修改镜像版本\"><a href=\"#3-6-修改镜像版本\" class=\"headerlink\" title=\"3.6 修改镜像版本\"></a>3.6 修改镜像版本</h5><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\"><span class=\"hljs-keyword\">cat</span> qdrant.yaml | <span class=\"hljs-keyword\">grep</span> image<br>image: qdrant/qdran<span class=\"hljs-variable\">t:v1</span>.<span class=\"hljs-number\">13.5</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-7-重新启动节点\"><a href=\"#3-7-重新启动节点\" class=\"headerlink\" title=\"3.7 重新启动节点\"></a>3.7 重新启动节点</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">cd</span> /<span class=\"hljs-keyword\">data</span>/program/qdrant/<br>docker<span class=\"hljs-literal\">-compose</span> <span class=\"hljs-operator\">-f</span> qdrant.yaml up <span class=\"hljs-literal\">-d</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-8-验证集群状态\"><a href=\"#3-8-验证集群状态\" class=\"headerlink\" title=\"3.8 验证集群状态\"></a>3.8 验证集群状态</h5><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">GET</span> _cluster<br></code></pre></td></tr></table></figure>\n\n<p>验证集群状态是否为green,等待集群选举完成，其他节点进行如上操作升级集群。</p>\n<h4 id=\"4、集群扩缩容\"><a href=\"#4、集群扩缩容\" class=\"headerlink\" title=\"4、集群扩缩容\"></a>4、集群扩缩容</h4><h5 id=\"4-1-扩容\"><a href=\"#4-1-扩容\" class=\"headerlink\" title=\"4.1 扩容\"></a>4.1 扩容</h5><p>参考集群部署2.1-2.4，同步其他节点cluster_config.yaml</p>\n<p>初始化连接集群ledger</p>\n<p>vim &#x2F;data&#x2F;program&#x2F;qdrant&#x2F;qdrant.yaml</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-attribute\">qdrant</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant/qdrant:v1.13.3</span><br>    <span class=\"hljs-attribute\">restart</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant</span><br>    <span class=\"hljs-comment\">#join node</span><br>    <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">./qdrant --bootstrap &#x27;http://$&#123;ledger_ip&#125;:6335&#x27;</span><br>    <span class=\"hljs-attribute\">ports</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6333:6333</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6334:6334</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6335:6335</span><br>    <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/qdrant/storage</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./snapshots:/qdrant/snapshots</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./logs:/qdrant/logs</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./config/cluster_config.yaml:/qdrant/config/production.yaml</span><br></code></pre></td></tr></table></figure>\n\n<p>启动完成，登录前台<a href=\"http://172.16.20.46:6333/dashboard%EF%BC%8C%E9%AA%8C%E8%AF%81%E9%9B%86%E7%BE%A4%E7%8A%B6%E6%80%81\">http://172.16.20.46:6333/dashboard，验证集群状态</a></p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">GET</span> _cluster<br></code></pre></td></tr></table></figure>\n\n<p>恢复新节点正常启动配置</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-attribute\">qdrant</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant/qdrant:v1.13.3</span><br>    <span class=\"hljs-attribute\">restart</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant</span><br>    <span class=\"hljs-comment\">#cluster node</span><br>    <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">./qdrant</span><br>    <span class=\"hljs-attribute\">ports</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6333:6333</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6334:6334</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6335:6335</span><br>    <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/qdrant/storage</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./snapshots:/qdrant/snapshots</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./logs:/qdrant/logs</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./config/cluster_config.yaml:/qdrant/config/production.yaml</span><br></code></pre></td></tr></table></figure>\n\n<p>启动完成，验证集群状态</p>\n<h5 id=\"4-2-缩容\"><a href=\"#4-2-缩容\" class=\"headerlink\" title=\"4.2 缩容\"></a>4.2 缩容</h5><p>移动缩容节点分片至其他节点</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\">curl -X POST http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name/cluster \\</span><br><span class=\"hljs-comment\">     -H &quot;api-key: qdrant@1133&quot; \\</span><br><span class=\"hljs-comment\">     -H &quot;Content-Type: application/json&quot; \\</span><br><span class=\"hljs-comment\">     -d &#x27;&#123;</span><br>  <span class=\"hljs-string\">&quot;move_shard&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;shard_id&quot;</span>: <span class=\"hljs-number\">0</span>,<br>    <span class=\"hljs-string\">&quot;to_peer_id&quot;</span>: <span class=\"hljs-number\">2120809141859359</span>,<br>    <span class=\"hljs-string\">&quot;from_peer_id&quot;</span>: <span class=\"hljs-number\">3306291262481813</span><br>  &#125;<br>&#125;&#x27;<br></code></pre></td></tr></table></figure>\n\n<p>删除旧节点</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> -X DELETE <span class=\"hljs-string\">&quot;http://localhost:6333/cluster/peer/2120809141859359&quot;</span> <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: qdrant@1133&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>验证集群状态</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">GET</span> _cluster<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"三、qdrant权限管理\"><a href=\"#三、qdrant权限管理\" class=\"headerlink\" title=\"三、qdrant权限管理\"></a>三、qdrant权限管理</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">官方文档：https:<span class=\"hljs-regexp\">//</span>qdrant.tech<span class=\"hljs-regexp\">/documentation/gui</span>des/security<br></code></pre></td></tr></table></figure>\n\n<p>jwt_token配置，需要python3环境，PyJwt模块</p>\n<p>vim &#x2F;data&#x2F;program&#x2F;qdrant&#x2F;bin&#x2F;token.py</p>\n<figure class=\"highlight d\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs d\"><span class=\"hljs-keyword\">import</span> jwt<br><br>#key为配置文件中api_key的值<br>key = <span class=\"hljs-string\">&quot;123456</span><br><span class=\"hljs-string\">    </span><br><span class=\"hljs-string\">encoded = jwt.encode(&#123;</span><br><span class=\"hljs-string\">    &quot;</span>access<span class=\"hljs-string\">&quot;: [</span><br><span class=\"hljs-string\">        &#123;</span><br><span class=\"hljs-string\">        &quot;c</span>ollection<span class=\"hljs-string\">&quot;: &quot;</span>test1<span class=\"hljs-string\">&quot;,</span><br><span class=\"hljs-string\">        &quot;</span>access<span class=\"hljs-string\">&quot;: &quot;</span><span class=\"hljs-string\">r&quot;</span><br><span class=\"hljs-string\">        &#125;,</span><br><span class=\"hljs-string\">        &#123;</span><br><span class=\"hljs-string\">        &quot;c</span>ollection<span class=\"hljs-string\">&quot;: &quot;</span>test2<span class=\"hljs-string\">&quot;,</span><br><span class=\"hljs-string\">        &quot;</span>access<span class=\"hljs-string\">&quot;: &quot;</span>rw<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\">        &#125;</span><br><span class=\"hljs-string\">    ]</span><br><span class=\"hljs-string\">&#125;, key, algorithm=&quot;</span>HS256<span class=\"hljs-string\">&quot;)</span><br><span class=\"hljs-string\">print(encoded)</span><br></code></pre></td></tr></table></figure>\n\n<p>生成token</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fortran\">在<span class=\"hljs-keyword\">access</span>中编写对应collections和<span class=\"hljs-keyword\">access</span>，编写完成后，执行脚本生成token<br><br>cd /<span class=\"hljs-keyword\">data</span>/<span class=\"hljs-function\"><span class=\"hljs-keyword\">program</span></span>/qdrant/<br>python3 bin/token.py<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"四、集群备份与恢复\"><a href=\"#四、集群备份与恢复\" class=\"headerlink\" title=\"四、集群备份与恢复\"></a>四、集群备份与恢复</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">官方文档：https:<span class=\"hljs-regexp\">//</span>qdrant.tech<span class=\"hljs-regexp\">/documentation/</span>concepts<span class=\"hljs-regexp\">/snapshots/</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">在分布式设置中，当集群中有多个节点时，处理单个集合时必须为每个节点分别创建快照，单个快照将仅包含创建快照的节点上存储的数据。恢复时，恢复当前节点的快照数据<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1、备份恢复管理脚本\"><a href=\"#1、备份恢复管理脚本\" class=\"headerlink\" title=\"1、备份恢复管理脚本\"></a>1、备份恢复管理脚本</h4><p>qdbak.sh需要配置S3备份数据路径和备份工具，以及集群api_key，并将脚本上传至集群每个节点</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">vim /data/program/qdrant/bin/qdbak.sh<br><br><span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">tools</span>=<span class=\"hljs-string\">&quot;/usr/local/bin/mc&quot;</span><br><br><span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">snapshots_path</span>=<span class=\"hljs-string\">&quot;qdrant_snapshots&quot;</span><br><br><span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">S3_dir</span>=<span class=\"hljs-string\">&quot;minio-server/qdrant-bucket/<span class=\"hljs-variable\">$&#123;snapshots_path&#125;</span>&quot;</span><br><br><span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">api_key</span>=<span class=\"hljs-string\">&quot;F24CF34BBC63901A5C401A25F51C1339&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>常用命令：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">./qdbak.<span class=\"hljs-keyword\">sh</span> <br>Usage: qdbak [<span class=\"hljs-keyword\">options</span>] [<span class=\"hljs-keyword\">args</span>]<br>  option:<br>    -L         show qdrant backup<br>    -A         backup <span class=\"hljs-keyword\">all</span> collection<br>    -B         backup collection<br>    -R         Restore collection<br>    -<span class=\"hljs-keyword\">b</span> <span class=\"hljs-symbol\">&lt;ver&gt;</span>   <span class=\"hljs-keyword\">set</span> collection name, default <span class=\"hljs-keyword\">is</span> null<br>    -s <span class=\"hljs-symbol\">&lt;ver&gt;</span>   <span class=\"hljs-keyword\">set</span> restore snapshots name, default <span class=\"hljs-keyword\">is</span> null<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2、备份\"><a href=\"#2、备份\" class=\"headerlink\" title=\"2、备份\"></a>2、备份</h4><p>备份只备份当前节点数据</p>\n<h5 id=\"2-1-创建单个集合快照\"><a href=\"#2-1-创建单个集合快照\" class=\"headerlink\" title=\"2.1 创建单个集合快照\"></a>2.1 创建单个集合快照</h5><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">./qdbak.sh -b test -B<br><br>2025-03-23 14:09:42 <span class=\"hljs-built_in\">INFO</span> Start backup collection: test<br>2025-03-23 14:18:39 <span class=\"hljs-built_in\">INFO</span> Snapshot creation successful <span class=\"hljs-keyword\">for</span> test.<br>2025-03-23 14:18:39 <span class=\"hljs-built_in\">INFO</span> <span class=\"hljs-built_in\">Remove</span> overdue snapshots <span class=\"hljs-keyword\">in</span> docker successful <span class=\"hljs-keyword\">for</span> test.<br>2025-03-23 14:18:39 <span class=\"hljs-built_in\">INFO</span> End backup collection: test.<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-创建所有集合快照\"><a href=\"#2-2-创建所有集合快照\" class=\"headerlink\" title=\"2.2 创建所有集合快照\"></a>2.2 创建所有集合快照</h5><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">./qdbak.sh -A<br><br>2025-03-24 10:30:01 <span class=\"hljs-built_in\">INFO</span> Action begin: backup_all_collection<br>2025-03-24 10:30:01 <span class=\"hljs-built_in\">INFO</span> Starting <span class=\"hljs-built_in\">..</span>.<br>2025-03-24 10:30:01 <span class=\"hljs-built_in\">INFO</span> Start backup collection: zy_test_bq_s8<br>2025-03-24 10:45:09 <span class=\"hljs-built_in\">INFO</span> Snapshot creation successful <span class=\"hljs-keyword\">for</span> zy_test_bq_s8.<br>2025-03-24 10:45:09 <span class=\"hljs-built_in\">INFO</span> <span class=\"hljs-built_in\">Remove</span> overdue snapshots <span class=\"hljs-keyword\">in</span> docker successful <span class=\"hljs-keyword\">for</span> zy_test_bq_s8.<br>2025-03-24 10:45:09 <span class=\"hljs-built_in\">INFO</span> End backup collection: zy_test_bq_s8.<br>2025-03-24 10:45:09 <span class=\"hljs-built_in\">INFO</span> Start backup collection: opinion_history_test<br>2025-03-24 10:45:49 <span class=\"hljs-built_in\">INFO</span> Snapshot creation successful <span class=\"hljs-keyword\">for</span> opinion_history_test.<br>2025-03-24 10:45:49 <span class=\"hljs-built_in\">INFO</span> <span class=\"hljs-built_in\">Remove</span> overdue snapshots <span class=\"hljs-keyword\">in</span> docker successful <span class=\"hljs-keyword\">for</span> opinion_history_test.<br>2025-03-24 10:45:49 <span class=\"hljs-built_in\">INFO</span> End backup collection: opinion_history_test.<br>2025-03-24 11:03:01 <span class=\"hljs-built_in\">INFO</span>  All collections has been backuped.<br>2025-03-24 11:03:01 <span class=\"hljs-built_in\">INFO</span> Action successed: backup_all_collection<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3、恢复\"><a href=\"#3、恢复\" class=\"headerlink\" title=\"3、恢复\"></a>3、恢复</h4><p>查看恢复快照名称和节点</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">./qdbak.sh -L<br></code></pre></td></tr></table></figure>\n\n<p>恢复单个集合当前节点的快照（快照恢复两个节点数据完成恢复且可以正常使用）</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs subunit\">./qdbak.sh -s test<span class=\"hljs-string\">-1993017374776241</span><span class=\"hljs-string\">-2025</span><span class=\"hljs-string\">-03</span><span class=\"hljs-string\">-21</span><span class=\"hljs-string\">-05</span><span class=\"hljs-string\">-41</span><span class=\"hljs-string\">-23</span>.snapshot -R<br></code></pre></td></tr></table></figure>\n\n<p>恢复完成后，查看集合数据是否正常</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">GET</span> collections/test<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"五、集群监控与遥测\"><a href=\"#五、集群监控与遥测\" class=\"headerlink\" title=\"五、集群监控与遥测\"></a>五、集群监控与遥测</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">官方文档：https:<span class=\"hljs-regexp\">//</span>qdrant.tech<span class=\"hljs-regexp\">/documentation/gui</span>des<span class=\"hljs-regexp\">/monitoring/</span><br>json_export文档: https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/prometheus-community/</span>json_exporter<br>prometheus文档：https:<span class=\"hljs-regexp\">//</span>prometheus.io<span class=\"hljs-regexp\">/docs/</span>prometheus<span class=\"hljs-regexp\">/latest/</span>configuration<span class=\"hljs-regexp\">/configuration/</span><span class=\"hljs-comment\">#http_config</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1、-节点指标-metrics\"><a href=\"#1、-节点指标-metrics\" class=\"headerlink\" title=\"1、 节点指标/metrics\"></a>1、 节点指标<code>/metrics</code></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">指标端点：http://localhost:6333/metrics<br></code></pre></td></tr></table></figure>\n\n<p>qdrant开启api_key和read_only_key时，采集配置需要配置authorization.credentials值</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">- <span class=\"hljs-params\">job_name:</span> &#x27;qdrant-exporter&#x27;<br>  <span class=\"hljs-params\">metrics_path:</span> <span class=\"hljs-symbol\">/metrics</span><br>  <span class=\"hljs-params\">scheme:</span> <span class=\"hljs-string\">&quot;http&quot;</span><br>  <span class=\"hljs-params\">authorization:</span><br>    <span class=\"hljs-params\">credentials:</span> <span class=\"hljs-string\">&quot;123&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2、遥测端点-telemetry\"><a href=\"#2、遥测端点-telemetry\" class=\"headerlink\" title=\"2、遥测端点/telemetry\"></a><strong>2、遥测端点<code>/telemetry</code></strong></h4><p>输出结果为json格式，通过json_export进行采集配置,json_export只需要部署单节点即可</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">http</span>://<span class=\"hljs-number\">172.16.20.46:6333</span>/telemetry?details_level=<span class=\"hljs-number\">3</span><br></code></pre></td></tr></table></figure>\n\n<p>json_export的config.yml</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs less\">modules:<br>  qdrant:<br>    headers:<br>      <span class=\"hljs-attribute\">X-Dummy</span>: my-test-header<br>    <span class=\"hljs-attribute\">http_client_config</span>:<br>      <span class=\"hljs-attribute\">authorization</span>:<br>        <span class=\"hljs-attribute\">credentials</span>: <span class=\"hljs-string\">&#x27;123&#x27;</span><br>    <span class=\"hljs-attribute\">metrics</span>:<br>    - <span class=\"hljs-attribute\">name</span>: qdrant_collection_vectors<br>      <span class=\"hljs-attribute\">type</span>: object<br>      <span class=\"hljs-attribute\">path</span>: <span class=\"hljs-string\">&quot;&#123;.result.collections.collections[*]&#125;&quot;</span><br>      <span class=\"hljs-attribute\">labels</span>:<br>        <span class=\"hljs-attribute\">collection_id</span>: <span class=\"hljs-string\">&quot;&#123;.id&#125;&quot;</span><br>        <span class=\"hljs-attribute\">distance</span>: <span class=\"hljs-string\">&quot;&#123;.config.params.vectors.distance&#125;&quot;</span><br>      <span class=\"hljs-attribute\">values</span>:<br>        <span class=\"hljs-attribute\">size</span>: <span class=\"hljs-string\">&#x27;&#123;.config.params.vectors.size&#125;&#x27;</span><br>        <span class=\"hljs-attribute\">on_disk_enable</span>: <span class=\"hljs-string\">&#x27;&#123;.config.params.vectors.on_disk&#125;&#x27;</span><br>      <span class=\"hljs-attribute\">help</span>: <span class=\"hljs-string\">&quot;vaule of vectors per collection&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>prometheus.yml</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">job_name: json_exporter</span><br>  <span class=\"hljs-attribute\">static_configs</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">targets:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">172.16.20.65:7979</span><br><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">job_name: &#x27;qdrant_telemetry&#x27;</span><br>  <span class=\"hljs-attribute\">metrics_path</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">/probe</span><br>  <span class=\"hljs-attribute\">params</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-attribute\">module</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">[qdrant]</span><br>  <span class=\"hljs-attribute\">static_configs</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">targets:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;http://172.16.20.65:6333/telemetry?details_level=3&quot;</span><br>    <span class=\"hljs-attribute\">labels</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-attribute\">ident</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant-20-65-test-shenzhen-office</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">targets:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;http://172.16.20.46:6333/telemetry?details_level=3&quot;</span><br>    <span class=\"hljs-attribute\">labels</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-attribute\">ident</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant-20-46-test-shenzhen-office</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">targets:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;http://172.16.20.90:6333/telemetry?details_level=3&quot;</span><br>    <span class=\"hljs-attribute\">labels</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-attribute\">ident</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant-20-90-test-shenzhen-office</span><br>  <span class=\"hljs-attribute\">relabel_configs</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">source_labels: [__address__]</span><br>      <span class=\"hljs-attribute\">target_label</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">__param_target</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">source_labels: [__param_target]</span><br>      <span class=\"hljs-attribute\">target_label</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">instance</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">target_label: __address__</span><br>      <span class=\"hljs-attribute\">replacement</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">172.16.20.65:7979</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3、集合分片信息采集\"><a href=\"#3、集合分片信息采集\" class=\"headerlink\" title=\"3、集合分片信息采集\"></a>3、集合分片信息采集</h4><p>编写数据采集脚本，collection.sh。通过categraf执行脚本进行数据采集</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br><br><span class=\"hljs-built_in\">export</span> api_key=<span class=\"hljs-string\">&quot;qdrant@1133&quot;</span><br><span class=\"hljs-built_in\">export</span> IP=$(<span class=\"hljs-keyword\">for</span> device <span class=\"hljs-keyword\">in</span> $(<span class=\"hljs-built_in\">ls</span> -l /sys/class/net/ | sed 1d | awk <span class=\"hljs-string\">&#x27;!/virtual/&#123;print $9&#125;&#x27;</span>); <span class=\"hljs-keyword\">do</span> ip -4 -o addr show <span class=\"hljs-variable\">$device</span> primary | awk -F<span class=\"hljs-string\">&#x27;[/ ]&#x27;</span> <span class=\"hljs-string\">&#x27;&#123;print $7&#125;&#x27;</span>; <span class=\"hljs-keyword\">done</span> | <span class=\"hljs-built_in\">head</span> -n1)<br><br><span class=\"hljs-comment\"># 获取 collections 并转换为数组</span><br><span class=\"hljs-built_in\">mapfile</span> -t collections &lt; &lt;(curl -s -H <span class=\"hljs-string\">&quot;Authorization: Bearer <span class=\"hljs-variable\">$&#123;api_key&#125;</span>&quot;</span> http://<span class=\"hljs-variable\">$&#123;IP&#125;</span>:6333/collections | jq -r <span class=\"hljs-string\">&#x27;.result.collections[].name&#x27;</span>)<br><br><span class=\"hljs-comment\"># 遍历每个 collection 并获取其状态</span><br><span class=\"hljs-keyword\">for</span> collection_name <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$&#123;collections[@]&#125;</span>&quot;</span>; <span class=\"hljs-keyword\">do</span><br>    response=$(curl -s -H <span class=\"hljs-string\">&quot;Authorization: Bearer <span class=\"hljs-variable\">$&#123;api_key&#125;</span>&quot;</span> http://<span class=\"hljs-variable\">$&#123;IP&#125;</span>:6333/collections/<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>)<br>    collection_status=$(<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$response</span>&quot;</span> | jq -r <span class=\"hljs-string\">&#x27;.result.status&#x27;</span>)<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$collection_status</span>&quot;</span> <span class=\"hljs-keyword\">in</span><br>        green)<br>            <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_collection_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 1&quot;</span><br>            ;;<br>        yellow)<br>            <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_collection_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 2&quot;</span><br>            ;;<br>        red)<br>            <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_collection_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 3&quot;</span><br>            ;;<br>        *)<br>            <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_collection_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 0&quot;</span><br>            ;;<br>    <span class=\"hljs-keyword\">esac</span><br><br>    ACTIVE_SHARDS=$(curl -s -XGET <span class=\"hljs-string\">&quot;http://<span class=\"hljs-variable\">$&#123;IP&#125;</span>:6333/collections/<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>/cluster&quot;</span> \\<br>  --header <span class=\"hljs-string\">&quot;api-key: <span class=\"hljs-variable\">$&#123;api_key&#125;</span>&quot;</span> | jq <span class=\"hljs-string\">&#x27;.result.local_shards[] | select(.state == &quot;Active&quot;) | .shard_id&#x27;</span>)<br><br>    Partial_SHARDS=$(curl -s -XGET <span class=\"hljs-string\">&quot;http://<span class=\"hljs-variable\">$&#123;IP&#125;</span>:6333/collections/<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>/cluster&quot;</span> \\<br>  --header <span class=\"hljs-string\">&quot;api-key: <span class=\"hljs-variable\">$&#123;api_key&#125;</span>&quot;</span> | jq <span class=\"hljs-string\">&#x27;.result.local_shards[] | select(.state == &quot;Partial&quot;) | .shard_id&#x27;</span>)<br><br>    Dead_SHARDS=$(curl -s -XGET <span class=\"hljs-string\">&quot;http://<span class=\"hljs-variable\">$&#123;IP&#125;</span>:6333/collections/<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>/cluster&quot;</span> \\<br>  --header <span class=\"hljs-string\">&quot;api-key: <span class=\"hljs-variable\">$&#123;api_key&#125;</span>&quot;</span> | jq <span class=\"hljs-string\">&#x27;.result.local_shards[] | select(.state == &quot;Dead&quot;) | .shard_id&#x27;</span>)<br><br>    <span class=\"hljs-keyword\">for</span> shard <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$ACTIVE_SHARDS</span>; <span class=\"hljs-keyword\">do</span><br>        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_shard_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, shard_id=\\&quot;<span class=\"hljs-variable\">$&#123;shard&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 1&quot;</span><br>    <span class=\"hljs-keyword\">done</span><br><br>    <span class=\"hljs-keyword\">for</span> shard <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$Partial_SHARDS</span>; <span class=\"hljs-keyword\">do</span><br>        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_shard_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, shard_id=\\&quot;<span class=\"hljs-variable\">$&#123;shard&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 1&quot;</span><br>    <span class=\"hljs-keyword\">done</span><br><br>    <span class=\"hljs-keyword\">for</span> shard <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$Dead_SHARDS</span>; <span class=\"hljs-keyword\">do</span><br>        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_shard_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, shard_id=\\&quot;<span class=\"hljs-variable\">$&#123;shard&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 1&quot;</span><br>    <span class=\"hljs-keyword\">done</span><br><span class=\"hljs-keyword\">done</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"六、常用运维API\"><a href=\"#六、常用运维API\" class=\"headerlink\" title=\"六、常用运维API\"></a>六、常用运维API</h3><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-meta\"># api参考文档</span><br><span class=\"hljs-symbol\">https:</span><span class=\"hljs-comment\">//api.qdrant.tech/api-reference</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1、集合\"><a href=\"#1、集合\" class=\"headerlink\" title=\"1、集合\"></a>1、集合</h4><h5 id=\"1-1-获取集合详细信息\"><a href=\"#1-1-获取集合详细信息\" class=\"headerlink\" title=\"1.1 获取集合详细信息\"></a>1.1 获取集合详细信息</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">curl  -X GET \\<br>  &#x27;http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name&#x27; \\</span><br>  --<span class=\"hljs-built_in\">header</span> &#x27;api-<span class=\"hljs-built_in\">key</span>: &lt;api-<span class=\"hljs-built_in\">key</span>-value&gt;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"1-2-更新集合参数\"><a href=\"#1-2-更新集合参数\" class=\"headerlink\" title=\"1.2 更新集合参数\"></a>1.2 更新集合参数</h5><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livescript\">curl  -X PATCH <span class=\"hljs-string\">\\</span><br>  <span class=\"hljs-string\">&#x27;http://localhost:6333/collections/collection_name&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;api-key: &lt;api-key-value&gt;&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;Content-Type: application/json&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --data-raw <span class=\"hljs-string\">&#x27;&#123;</span><br><span class=\"hljs-string\">  &quot;optimizers_config&quot;: &#123;</span><br><span class=\"hljs-string\">    &quot;indexing_threshold&quot;: 10000</span><br><span class=\"hljs-string\">  &#125;</span><br><span class=\"hljs-string\">&#125;&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-列出所有集合\"><a href=\"#1-3-列出所有集合\" class=\"headerlink\" title=\"1.3 列出所有集合\"></a>1.3 列出所有集合</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">curl  -X GET \\<br>  &#x27;http:<span class=\"hljs-comment\">//localhost:6333/collections&#x27; \\</span><br>  --<span class=\"hljs-built_in\">header</span> &#x27;api-<span class=\"hljs-built_in\">key</span>: &lt;api-<span class=\"hljs-built_in\">key</span>-value&gt;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"1-4-检查集合是否存在\"><a href=\"#1-4-检查集合是否存在\" class=\"headerlink\" title=\"1.4 检查集合是否存在\"></a>1.4 检查集合是否存在</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">curl  -X GET \\<br>  &#x27;http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name/exists&#x27; \\</span><br>  --<span class=\"hljs-built_in\">header</span> &#x27;api-<span class=\"hljs-built_in\">key</span>: &lt;api-<span class=\"hljs-built_in\">key</span>-value&gt;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2、快照（基于集合）\"><a href=\"#2、快照（基于集合）\" class=\"headerlink\" title=\"2、快照（基于集合）\"></a>2、快照（基于集合）</h4><h5 id=\"2-1-列出所有快照\"><a href=\"#2-1-列出所有快照\" class=\"headerlink\" title=\"2.1 列出所有快照\"></a>2.1 列出所有快照</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">curl  -X GET \\<br>  &#x27;http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name/snapshots&#x27; \\</span><br>  --<span class=\"hljs-built_in\">header</span> &#x27;api-<span class=\"hljs-built_in\">key</span>: &lt;api-<span class=\"hljs-built_in\">key</span>-value&gt;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-创建快照\"><a href=\"#2-2-创建快照\" class=\"headerlink\" title=\"2.2 创建快照\"></a>2.2 创建快照</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">curl  -X POST \\<br>  &#x27;http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name/snapshots&#x27; \\</span><br>  --<span class=\"hljs-built_in\">header</span> &#x27;api-<span class=\"hljs-built_in\">key</span>: &lt;api-<span class=\"hljs-built_in\">key</span>-value&gt;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-3-上传的快照中恢复\"><a href=\"#2-3-上传的快照中恢复\" class=\"headerlink\" title=\"2.3 上传的快照中恢复\"></a>2.3 上传的快照中恢复</h5><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livescript\">curl  -X POST <span class=\"hljs-string\">\\</span><br>  <span class=\"hljs-string\">&#x27;http://localhost:6333/collections/collection_name/snapshots/upload&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;api-key: &lt;api-key-value&gt;&#x27;</span> <span class=\"hljs-string\">\\</span><br>  -F <span class=\"hljs-string\">&#x27;snapshot=@/path/to/snapshot.shapshot&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-4-从快照中恢复\"><a href=\"#2-4-从快照中恢复\" class=\"headerlink\" title=\"2.4 从快照中恢复\"></a>2.4 从快照中恢复</h5><p>snapshot路径为容器中qdrant实际路径</p>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livescript\">curl  -X PUT <span class=\"hljs-string\">\\</span><br>  <span class=\"hljs-string\">&#x27;http://localhost:6333/collections/collection_name/snapshots/recover&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;api-key: &lt;api-key-value&gt;&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;Content-Type: application/json&#x27;</span> <span class=\"hljs-string\">\\</span><br>  -d <span class=\"hljs-string\">&#x27;&#123;</span><br><span class=\"hljs-string\">  &quot;location&quot;: &quot;file:///qdrant/qdrant_snapshots/colletion_name/snapshot.shapshot&quot;</span><br><span class=\"hljs-string\">&#125;&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-5-下载快照\"><a href=\"#2-5-下载快照\" class=\"headerlink\" title=\"2.5 下载快照\"></a>2.5 下载快照</h5><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elixir\">curl <span class=\"hljs-symbol\">http:</span>//<span class=\"hljs-symbol\">localhost:</span><span class=\"hljs-number\">6333</span>/collections/<span class=\"hljs-symbol\">:collection_name/snapshots/</span><span class=\"hljs-symbol\">:snapshot_name</span> \\<br>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-6-删除快照\"><a href=\"#2-6-删除快照\" class=\"headerlink\" title=\"2.6 删除快照\"></a>2.6 删除快照</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">curl  -X <span class=\"hljs-keyword\">DELETE</span> \\<br>  &#x27;http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name/snapshots/snapshot_name&#x27; \\</span><br>  --<span class=\"hljs-built_in\">header</span> &#x27;api-<span class=\"hljs-built_in\">key</span>: &lt;api-<span class=\"hljs-built_in\">key</span>-value&gt;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3、分布式\"><a href=\"#3、分布式\" class=\"headerlink\" title=\"3、分布式\"></a>3、分布式</h4><h5 id=\"3-1-检查集群状态\"><a href=\"#3-1-检查集群状态\" class=\"headerlink\" title=\"3.1 检查集群状态\"></a>3.1 检查集群状态</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> http://localhost:<span class=\"hljs-number\">6333</span>/cluster <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-2-创建分片键\"><a href=\"#3-2-创建分片键\" class=\"headerlink\" title=\"3.2 创建分片键\"></a>3.2 创建分片键</h5><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livescript\">curl  -X PUT <span class=\"hljs-string\">\\</span><br>  <span class=\"hljs-string\">&#x27;http://localhost:6333/collections/collection_name/shards&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;api-key: &lt;api-key-value&gt;&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;Content-Type: application/json&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --data-raw <span class=\"hljs-string\">&#x27;&#123;</span><br><span class=\"hljs-string\">  &quot;shard_key&quot;: &quot;&#123;shard_key&#125;&quot;</span><br><span class=\"hljs-string\">&#125;&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-3-删除分片键\"><a href=\"#3-3-删除分片键\" class=\"headerlink\" title=\"3.3 删除分片键\"></a>3.3 删除分片键</h5><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">curl  -X POST \\<br>  &#x27;http://localhost:6333/collections/collection_name/shards/<span class=\"hljs-keyword\">delete</span><span class=\"hljs-string\">&#x27; \\</span><br><span class=\"hljs-string\">  --header &#x27;</span>api-<span class=\"hljs-keyword\">key</span>: &lt;api-<span class=\"hljs-keyword\">key</span>-<span class=\"hljs-keyword\">value</span>&gt;<span class=\"hljs-string\">&#x27; \\</span><br><span class=\"hljs-string\">  --header &#x27;</span>Content-<span class=\"hljs-built_in\">Type</span>: application/json<span class=\"hljs-string\">&#x27; \\</span><br><span class=\"hljs-string\">  --data-raw &#x27;</span>&#123;<br>  <span class=\"hljs-string\">&quot;shard_key&quot;</span>: <span class=\"hljs-string\">&quot;&#123;shard_key&#125;&quot;</span><br>&#125;<span class=\"hljs-string\">&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-4-恢复集群状态\"><a href=\"#3-4-恢复集群状态\" class=\"headerlink\" title=\"3.4 恢复集群状态\"></a>3.4 恢复集群状态</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> -X POST http://localhost:<span class=\"hljs-number\">6333</span>/cluster/recover <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-5-集群中删除对等体\"><a href=\"#3-5-集群中删除对等体\" class=\"headerlink\" title=\"3.5 集群中删除对等体\"></a>3.5 集群中删除对等体</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> -X DELETE http://localhost:<span class=\"hljs-number\">6333</span>/cluster/peer/<span class=\"hljs-number\">1</span> <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-6-检索集群详细信息\"><a href=\"#3-6-检索集群详细信息\" class=\"headerlink\" title=\"3.6 检索集群详细信息\"></a>3.6 检索集群详细信息</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> http://localhost:<span class=\"hljs-number\">6333</span>/collections/collection_name/cluster <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-7-更新集群设置\"><a href=\"#3-7-更新集群设置\" class=\"headerlink\" title=\"3.7 更新集群设置\"></a>3.7 更新集群设置</h5><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\">curl -X POST http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name/cluster \\</span><br><span class=\"hljs-comment\">     -H &quot;api-key: &lt;apiKey&gt;&quot; \\</span><br><span class=\"hljs-comment\">     -H &quot;Content-Type: application/json&quot; \\</span><br><span class=\"hljs-comment\">     -d &#x27;&#123;</span><br>  <span class=\"hljs-string\">&quot;move_shard&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;shard_id&quot;</span>: <span class=\"hljs-number\">1</span>,<br>    <span class=\"hljs-string\">&quot;to_peer_id&quot;</span>: <span class=\"hljs-number\">1</span>,<br>    <span class=\"hljs-string\">&quot;from_peer_id&quot;</span>: <span class=\"hljs-number\">1</span><br>  &#125;<br>&#125;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4、监控\"><a href=\"#4、监控\" class=\"headerlink\" title=\"4、监控\"></a>4、监控</h4><h5 id=\"4-1-检索实例详细信息\"><a href=\"#4-1-检索实例详细信息\" class=\"headerlink\" title=\"4.1 检索实例详细信息\"></a>4.1 检索实例详细信息</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> http://localhost:<span class=\"hljs-number\">6333</span>/ <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-2-收集遥测数据\"><a href=\"#4-2-收集遥测数据\" class=\"headerlink\" title=\"4.2 收集遥测数据\"></a>4.2 收集遥测数据</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> http://localhost:<span class=\"hljs-number\">6333</span>/telemetry <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-3-收集-Prometheus-指标数据\"><a href=\"#4-3-收集-Prometheus-指标数据\" class=\"headerlink\" title=\"4.3 收集 Prometheus 指标数据\"></a>4.3 收集 Prometheus 指标数据</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> -G http://localhost:<span class=\"hljs-number\">6333</span>/metrics <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span> <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -d anonymize=true<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-4-检查写保护\"><a href=\"#4-4-检查写保护\" class=\"headerlink\" title=\"4.4 检查写保护\"></a>4.4 检查写保护</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> http://localhost:<span class=\"hljs-number\">6333</span>/locks <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-5-设置写保护\"><a href=\"#4-5-设置写保护\" class=\"headerlink\" title=\"4.5 设置写保护\"></a>4.5 设置写保护</h5><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\">curl -X POST http:<span class=\"hljs-comment\">//localhost:6333/locks \\</span><br><span class=\"hljs-comment\">     -H &quot;api-key: &lt;apiKey&gt;&quot; \\</span><br><span class=\"hljs-comment\">     -H &quot;Content-Type: application/json&quot; \\</span><br><span class=\"hljs-comment\">     -d &#x27;&#123;</span><br>  <span class=\"hljs-string\">&quot;write&quot;</span>: <span class=\"hljs-literal\">true</span><br>&#125;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-6-单实例健康检查\"><a href=\"#4-6-单实例健康检查\" class=\"headerlink\" title=\"4.6 单实例健康检查\"></a>4.6 单实例健康检查</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> http://localhost:<span class=\"hljs-number\">6333</span>/healthz <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"七、集群故障恢复\"><a href=\"#七、集群故障恢复\" class=\"headerlink\" title=\"七、集群故障恢复\"></a>七、集群故障恢复</h3><h5 id=\"1、使用复制的集合进行恢复\"><a href=\"#1、使用复制的集合进行恢复\" class=\"headerlink\" title=\"1、使用复制的集合进行恢复\"></a>1、使用复制的集合进行恢复</h5><figure class=\"highlight erlang-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs erlang-repl\">如果失败的节点数量少于集合的复制因子，那么您的集群应该仍然能够执行读取、搜索和更新查询。<br><br>现在，如果故障节点重新启动，共识机制将触发复制过程，以使用最新的更新来更新恢复节点，这些更新是它错过的。<br><br>如果故障节点永远不会重新启动，您可以在拥有<span class=\"hljs-number\">3</span>个或更多节点的集群中恢复丢失的分片。在较小的集群中，您无法恢复丢失的分片，因为恢复操作需要通过raft，这要求超过<span class=\"hljs-number\">50</span><span class=\"hljs-comment\">%的节点是健康的。</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2、使用复制的集合重新创建节点\"><a href=\"#2、使用复制的集合重新创建节点\" class=\"headerlink\" title=\"2、使用复制的集合重新创建节点\"></a>2、使用复制的集合重新创建节点</h5><p>如果一个节点失败且无法恢复，您应该将该失效节点从共识中排除，并创建一个空节点，确保数据目录为空。</p>\n<p>要从集群中排除失败的节点， 如有必要，应用<code>force</code>标志。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> -X DELETE <span class=\"hljs-string\">&quot;http://localhost:6333/cluster/peer/2120809141859359?force=true&quot;</span> <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: qdrant@1133&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>当你创建一个新节点时，确保通过指定<code>--bootstrap</code> CLI参数并将其设置为任何正在运行的集群节点的URL，将其附加到现有集群。</p>\n<p>一旦新节点准备就绪并与集群同步，手动平衡分片</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\">curl -X POST http:<span class=\"hljs-comment\">//localhost:6333/collections/test/cluster \\</span><br><span class=\"hljs-comment\">     -H &quot;api-key: qdrant@1133&quot; \\</span><br><span class=\"hljs-comment\">     -H &quot;Content-Type: application/json&quot; \\</span><br><span class=\"hljs-comment\">     -d &#x27;&#123;</span><br>  <span class=\"hljs-string\">&quot;replicate_shard&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;shard_id&quot;</span>: <span class=\"hljs-number\">0</span>,<br>    <span class=\"hljs-string\">&quot;to_peer_id&quot;</span>: <span class=\"hljs-number\">2120809141859359</span>,<br>    <span class=\"hljs-string\">&quot;from_peer_id&quot;</span>: <span class=\"hljs-number\">3306291262481813</span><br>  &#125;<br>&#125;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3、从快照恢复\"><a href=\"#3、从快照恢复\" class=\"headerlink\" title=\"3、从快照恢复\"></a>3、从快照恢复</h5><p>如果集群中没有数据的副本，仍然可以从快照中恢复，确保数据目录为空。</p>\n<p>按照相同的步骤分离失败的节点并在集群中创建一个新节点：</p>\n<figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autohotkey\">要从集群中排除失败的节点，请使用移除节点。如有必要，应用`force`标志。<br>创建一个新节点，确保通过指定`--bootstrap` CLI参数并附上任何正在运行的集群节点的URL，将其附加到现有集群。<br></code></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<h3 id=\"一、介绍\"><a href=\"#一、介绍\" class=\"headerlink\" title=\"一、介绍\"></a>一、介绍</h3><h4 id=\"1、-Qdrant-是什么？\"><a href=\"#1、-Qdrant-是什么？\" class=\"headerlink\" title=\"1、 Qdrant 是什么？\"></a>1、 Qdrant 是什么？</h4><p>Qdrant（读作：quadrant）是一个矢量相似性<a href=\"https://so.csdn.net/so/search?q=%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E&spm=1001.2101.3001.7020\">搜索引擎</a>和矢量数据库。它提供了一个方便的API来存储、搜索和管理点向量的生产就绪服务，并提供了额外的有效负载专门用于扩展过滤支持。这使得在各种神经网络或基于语义的匹配、多面搜索和其他应用方面更加有用。</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elixir\"><span class=\"hljs-title class_\">Github</span>地址<span class=\"hljs-symbol\">:https</span><span class=\"hljs-symbol\">://github</span>.com/qdrant/qdrant<br><br>官网<span class=\"hljs-symbol\">:https</span><span class=\"hljs-symbol\">://qdrant</span>.tech/<br><br>官方文档<span class=\"hljs-symbol\">:https</span><span class=\"hljs-symbol\">://qdrant</span>.tech/documentation/<br><br>详细的实例参考<span class=\"hljs-symbol\">:https</span><span class=\"hljs-symbol\">://qdrant</span>.tech/documentation/tutorials/search-beginners/<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2、-什么是矢量数据库？\"><a href=\"#2、-什么是矢量数据库？\" class=\"headerlink\" title=\"2、 什么是矢量数据库？\"></a>2、 什么是矢量数据库？</h4><h4 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"/%E5%9B%BE%E7%89%87/%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93.png\"></h4><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">向量数据库是一种旨在高效存储和查询高维向量的数据库。在传统的OLTP和OLAP 数据库中（如上图所示），数据按行和列组织（称为表），并根据这些列中的值执行查询。然而，在某些应用中，包括图像识别、自然语言处理和推荐系统，数据通常表示为高维空间中的向量，这些向量加上 <span class=\"hljs-built_in\">id</span> 和有效负载就是我们在 Qdrant 等向量数据库内存储在称为集合的东西中的元素。<br><br>在此上下文中，向量是对象或数据点的数学表示，其中向量的元素隐式或显式地对应于对象的特定特征或属性。例如，在图像识别系统中，向量可以表示图像，向量的每个元素表示像素值或该像素的描述符/特性。在音乐推荐系统中，每个向量可以表示一首歌曲，向量的元素将捕获歌曲的特征，例如节奏、流派、歌词等。<br><br>向量数据库针对高效存储和查询这些高维向量进行了优化，它们通常使用专门的数据结构和索引技术，例如用于实现近似最近邻的分层可导航小世界 (HNSW) 和乘积量化等。这些数据库支持快速相似性和语义搜索，同时允许用户根据某种距离度量找到与给定查询向量最接近的向量。最常用的距离度量是欧几里得距离、余弦相似度和点积，Qdrant 完全支持这三种度量。<br></code></pre></td></tr></table></figure>\n\n<p>以下是这三者的简要概述：</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs subunit\">余弦相似度- 余弦相似度是一种衡量两个向量相似度的方法。简单来说，它反映的是两个向量是具有相同方向（相似）还是完全不同。余弦相似度通常与文本表示一起使用，以比较两个文档或句子之间的相似度。余弦相似度的输出范围从 <span class=\"hljs-string\">-1</span> 到 1，其中 <span class=\"hljs-string\">-1</span> 表示两个向量完全不相似，1 表示最大相似度。<br><br>点积- 点积相似度度量是测量两个向量相似度的另一种方法。与余弦相似度不同，它还考虑向量的长度。例如，当基于术语（单词）频率构建文档的向量表示时，这可能很重要。点积相似度是通过将两个向量中的相应值相乘，然后对这些乘积求和来计算的。总和越高，两个向量就越相似。如果对向量进行归一化（使它们中的数字总和为 1），则点积相似度将变为余弦相似度。<br><br>欧几里得距离- 欧几里得距离是一种测量空间中两点之间距离的方法，类似于我们测量地图上两点之间距离的方法。它的计算方法是求两点坐标平方差之和的平方根。这种距离度量也常用于机器学习，以测量两个向量的相似度或相异度。<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3、为什么我们需要矢量数据库\"><a href=\"#3、为什么我们需要矢量数据库\" class=\"headerlink\" title=\"3、为什么我们需要矢量数据库\"></a>3、为什么我们需要矢量数据库</h4><p>向量数据库在需要相似性搜索的各种应用中起着至关重要的作用，例如推荐系统、基于内容的图像检索和个性化搜索。通过利用其高效的索引和搜索技术，向量数据库可以更快、更准确地检索已表示为向量的非结构化数据，从而帮助向用户展示与其查询最相关的结果。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">高维数据的有效存储和索引。<br>能够处理具有数十亿数据点的大规模数据集。<br>支持实时分析和查询。<br>能够处理来自复杂数据类型（例如图像、视频和自然语言文本）的向量。<br>提高机器学习和人工智能应用的性能并减少延迟。<br>与构建定制解决方案相比，减少了开发和部署的时间和成本。<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4、Qdrant-架构的高层概述\"><a href=\"#4、Qdrant-架构的高层概述\" class=\"headerlink\" title=\"4、Qdrant 架构的高层概述\"></a>4、Qdrant 架构的高层概述</h4><p><img src=\"/%E5%9B%BE%E7%89%87/qdrant%E6%9E%B6%E6%9E%84.png\"></p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">集合：集合是一组命名的点（带有有效载荷的向量），您可以在其中进行搜索。同一个集合中每个点的向量必须具有相同的维数，并按单个指标进行比较。命名向量可用于在单个点中拥有多个向量，每个向量可以有自己的维数和指标要求。<br><br>距离度量：这些度量用于测量向量之间的相似性，必须在创建集合时选择它们。度量的选择取决于获取向量的方式，特别是用于编码新查询的神经网络。<br><br>点：点是 Qdrant 操作的中心实体，由一个向量和一个可选的 <span class=\"hljs-built_in\">id</span> 和有效载荷组成。<br>   <span class=\"hljs-built_in\">id</span>：向量的唯一标识符。<br>   向量：数据的高维表示，例如图像、声音、文档、视频等。<br>   有效载荷：有效载荷是一个 JSON 对象，其中包含可添加到向量的附加数据。<br><br>存储：Qdrant 可以使用两种存储选项之一，内存存储（将所有向量存储在 RAM 中，由于仅在持久性时才需要磁盘访问，因此速度最快），或Memmap存储（创建与磁盘上的文件关联的虚拟地址空间）。<br><br>客户端：您可以用来连接 Qdrant 的编程语言。<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"二、分布式集群部署\"><a href=\"#二、分布式集群部署\" class=\"headerlink\" title=\"二、分布式集群部署\"></a>二、分布式集群部署</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">docker-compose方式进行分布式集群部署。<br>官方文档：https:<span class=\"hljs-regexp\">//</span>qdrant.tech<span class=\"hljs-regexp\">/documentation/gui</span>des<span class=\"hljs-regexp\">/distributed_deployment/</span><br>基本要求：<br>分片的数量必须是集群中当前运行的节点数量的倍数，最好为<span class=\"hljs-number\">2</span>倍<br>集合的复制因子至少为<span class=\"hljs-number\">2</span>，否则集群功能无法正常使用<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1、节点规划\"><a href=\"#1、节点规划\" class=\"headerlink\" title=\"1、节点规划\"></a>1、节点规划</h4><table>\n<thead>\n<tr>\n<th>HOST</th>\n<th>PORT</th>\n<th>数据目录</th>\n<th>config</th>\n<th>snapshots</th>\n<th>logs</th>\n<th>bin</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>172.16.20.65&#x2F;ledger</td>\n<td>6333-6335</td>\n<td>.&#x2F;data</td>\n<td>.&#x2F;config&#x2F;cluster_config.yaml</td>\n<td>.&#x2F;snapshots</td>\n<td>.&#x2F;logs</td>\n<td>.&#x2F;bin</td>\n</tr>\n<tr>\n<td>172.16.20.46&#x2F;follower</td>\n<td>6333-6335</td>\n<td>.&#x2F;data</td>\n<td>.&#x2F;config&#x2F;cluster_config.yaml</td>\n<td>.&#x2F;snapshots</td>\n<td>.&#x2F;logs</td>\n<td>.&#x2F;bin</td>\n</tr>\n<tr>\n<td>172.16.20.90&#x2F;follower</td>\n<td>6333-6335</td>\n<td>.&#x2F;data</td>\n<td>.&#x2F;config&#x2F;cluster_config.yaml</td>\n<td>.&#x2F;snapshots</td>\n<td>.&#x2F;logs</td>\n<td>.&#x2F;bin</td>\n</tr>\n</tbody></table>\n<h4 id=\"2、qdrant集群部署\"><a href=\"#2、qdrant集群部署\" class=\"headerlink\" title=\"2、qdrant集群部署\"></a>2、qdrant集群部署</h4><h5 id=\"2-1-镜像下载对应版本\"><a href=\"#2-1-镜像下载对应版本\" class=\"headerlink\" title=\"2.1 镜像下载对应版本\"></a>2.1 镜像下载对应版本</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> pull qdrant/qdrant：v1.<span class=\"hljs-number\">13</span>.<span class=\"hljs-number\">3</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-创建部署目录\"><a href=\"#2-2-创建部署目录\" class=\"headerlink\" title=\"2.2 创建部署目录\"></a>2.2 创建部署目录</h5><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fortran\">mkdir -p /<span class=\"hljs-keyword\">data</span>/<span class=\"hljs-function\"><span class=\"hljs-keyword\">program</span></span>/qdrant/&#123;<span class=\"hljs-keyword\">data</span>,config,sanpshots,logs,bin&#125;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-3-配置文件\"><a href=\"#2-3-配置文件\" class=\"headerlink\" title=\"2.3 配置文件\"></a>2.3 配置文件</h5><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">官方配置参考：https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/qdrant/</span>qdrant<span class=\"hljs-regexp\">/tree/m</span>aster<span class=\"hljs-regexp\">/config/</span><br></code></pre></td></tr></table></figure>\n\n<p>下载v1.13.3版本config.yaml进行配置，集群三节点配置内容相同，参考配置：</p>\n<p>vim &#x2F;data&#x2F;program&#x2F;qdrant&#x2F;config&#x2F;cluster_config.yaml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">log_level:</span> <span class=\"hljs-string\">INFO</span><br><br><span class=\"hljs-comment\"># Logging configuration</span><br><span class=\"hljs-comment\"># Qdrant logs to stdout. You may configure to also write logs to a file on disk.</span><br><span class=\"hljs-comment\"># Be aware that this file may grow indefinitely.</span><br><span class=\"hljs-attr\">logger:</span><br>  <span class=\"hljs-attr\">on_disk:</span><br>    <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">log_file:</span> <span class=\"hljs-string\">/qdrant/logs/qdrant.log</span><br>    <span class=\"hljs-attr\">log_level:</span> <span class=\"hljs-string\">INFO</span><br>    <span class=\"hljs-comment\"># Logging format, supports `text` and `json`</span><br>    <span class=\"hljs-attr\">format:</span> <span class=\"hljs-string\">json</span><br><br><span class=\"hljs-attr\">storage:</span><br>  <span class=\"hljs-comment\"># Where to store all the data</span><br>  <span class=\"hljs-attr\">storage_path:</span> <span class=\"hljs-string\">./storage</span><br><br>  <span class=\"hljs-comment\"># Where to store snapshots</span><br>  <span class=\"hljs-attr\">snapshots_path:</span> <span class=\"hljs-string\">./qdrant_snapshots</span><br><br>  <span class=\"hljs-attr\">snapshots_config:</span><br>    <span class=\"hljs-comment\"># &quot;local&quot; or &quot;s3&quot; - where to store snapshots</span><br>    <span class=\"hljs-attr\">snapshots_storage:</span> <span class=\"hljs-string\">s3</span><br>    <span class=\"hljs-attr\">s3_config:</span><br>      <span class=\"hljs-attr\">bucket:</span> <span class=\"hljs-string\">&quot;qdrant-bucket&quot;</span><br>      <span class=\"hljs-attr\">region:</span> <span class=\"hljs-string\">&quot;REGION&quot;</span><br>      <span class=\"hljs-attr\">access_key:</span> <span class=\"hljs-string\">&quot;admin&quot;</span><br>      <span class=\"hljs-attr\">secret_key:</span> <span class=\"hljs-string\">&quot;123456&quot;</span><br>      <span class=\"hljs-attr\">endpoint_url:</span> <span class=\"hljs-string\">&quot;http://112.16.20.1:9001&quot;</span><br><br>  <span class=\"hljs-comment\"># Where to store temporary files</span><br>  <span class=\"hljs-comment\"># If null, temporary snapshots are stored in: storage/snapshots_temp/</span><br>  <span class=\"hljs-attr\">temp_path:</span> <span class=\"hljs-literal\">null</span><br><br>  <span class=\"hljs-comment\"># If true - point payloads will not be stored in memory.</span><br>  <span class=\"hljs-comment\"># It will be read from the disk every time it is requested.</span><br>  <span class=\"hljs-comment\"># This setting saves RAM by (slightly) increasing the response time.</span><br>  <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> those payload values that are involved in filtering and are indexed - remain in RAM.</span><br>  <span class=\"hljs-comment\"># </span><br>  <span class=\"hljs-comment\"># Default: true</span><br>  <span class=\"hljs-attr\">on_disk_payload:</span> <span class=\"hljs-literal\">true</span><br><br>  <span class=\"hljs-comment\"># Maximum number of concurrent updates to shard replicas</span><br>  <span class=\"hljs-comment\"># If `null` - maximum concurrency is used.</span><br>  <span class=\"hljs-attr\">update_concurrency:</span> <span class=\"hljs-literal\">null</span><br><br>  <span class=\"hljs-comment\"># Write-ahead-log related configuration</span><br>  <span class=\"hljs-attr\">wal:</span><br>    <span class=\"hljs-comment\"># Size of a single WAL segment</span><br>    <span class=\"hljs-attr\">wal_capacity_mb:</span> <span class=\"hljs-number\">32</span><br><br>    <span class=\"hljs-comment\"># Number of WAL segments to create ahead of actual data requirement</span><br>    <span class=\"hljs-attr\">wal_segments_ahead:</span> <span class=\"hljs-number\">0</span><br><br>  <span class=\"hljs-comment\"># Normal node - receives all updates and answers all queries</span><br>  <span class=\"hljs-attr\">node_type:</span> <span class=\"hljs-string\">&quot;Normal&quot;</span><br><br>  <span class=\"hljs-comment\"># Listener node - receives all updates, but does not answer search/read queries</span><br>  <span class=\"hljs-comment\"># Useful for setting up a dedicated backup node</span><br>  <span class=\"hljs-comment\"># node_type: &quot;Listener&quot;</span><br><br>  <span class=\"hljs-attr\">performance:</span><br>    <span class=\"hljs-comment\"># Number of parallel threads used for search operations. If 0 - auto selection.</span><br>    <span class=\"hljs-attr\">max_search_threads:</span> <span class=\"hljs-number\">0</span><br><br>    <span class=\"hljs-comment\"># Max number of threads (jobs) for running optimizations across all collections, each thread runs one job.</span><br>    <span class=\"hljs-comment\"># If 0 - have no limit and choose dynamically to saturate CPU.</span><br>    <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> each optimization job will also use `max_indexing_threads` threads by itself for index building.</span><br>    <span class=\"hljs-attr\">max_optimization_threads:</span> <span class=\"hljs-number\">0</span><br><br>    <span class=\"hljs-comment\"># CPU budget, how many CPUs (threads) to allocate for an optimization job.</span><br>    <span class=\"hljs-comment\"># If 0 - auto selection, keep 1 or more CPUs unallocated depending on CPU size</span><br>    <span class=\"hljs-comment\"># If negative - subtract this number of CPUs from the available CPUs.</span><br>    <span class=\"hljs-comment\"># If positive - use this exact number of CPUs.</span><br>    <span class=\"hljs-attr\">optimizer_cpu_budget:</span> <span class=\"hljs-number\">0</span><br><br>    <span class=\"hljs-comment\"># Prevent DDoS of too many concurrent updates in distributed mode.</span><br>    <span class=\"hljs-comment\"># One external update usually triggers multiple internal updates, which breaks internal</span><br>    <span class=\"hljs-comment\"># timings. For example, the health check timing and consensus timing.</span><br>    <span class=\"hljs-comment\"># If null - auto selection.</span><br>    <span class=\"hljs-attr\">update_rate_limit:</span> <span class=\"hljs-literal\">null</span><br><br>    <span class=\"hljs-comment\"># Limit for number of incoming automatic shard transfers per collection on this node, does not affect user-requested transfers.</span><br>    <span class=\"hljs-comment\"># The same value should be used on all nodes in a cluster.</span><br>    <span class=\"hljs-comment\"># Default is to allow 1 transfer.</span><br>    <span class=\"hljs-comment\"># If null - allow unlimited transfers.</span><br>    <span class=\"hljs-comment\">#incoming_shard_transfers_limit: 1</span><br><br>    <span class=\"hljs-comment\"># Limit for number of outgoing automatic shard transfers per collection on this node, does not affect user-requested transfers.</span><br>    <span class=\"hljs-comment\"># The same value should be used on all nodes in a cluster.</span><br>    <span class=\"hljs-comment\"># Default is to allow 1 transfer.</span><br>    <span class=\"hljs-comment\"># If null - allow unlimited transfers.</span><br>    <span class=\"hljs-comment\">#outgoing_shard_transfers_limit: 1</span><br><br>    <span class=\"hljs-comment\"># Enable async scorer which uses io_uring when rescoring.</span><br>    <span class=\"hljs-comment\"># Only supported on Linux, must be enabled in your kernel.</span><br>    <span class=\"hljs-comment\"># See: &lt;https://qdrant.tech/articles/io_uring/#and-what-about-qdrant&gt;</span><br>    <span class=\"hljs-comment\">#async_scorer: false</span><br><br>  <span class=\"hljs-attr\">optimizers:</span><br>    <span class=\"hljs-comment\"># The minimal fraction of deleted vectors in a segment, required to perform segment optimization</span><br>    <span class=\"hljs-attr\">deleted_threshold:</span> <span class=\"hljs-number\">0.2</span><br><br>    <span class=\"hljs-comment\"># The minimal number of vectors in a segment, required to perform segment optimization</span><br>    <span class=\"hljs-attr\">vacuum_min_vector_number:</span> <span class=\"hljs-number\">1000</span><br><br>    <span class=\"hljs-comment\"># Target amount of segments optimizer will try to keep.</span><br>    <span class=\"hljs-comment\"># Real amount of segments may vary depending on multiple parameters:</span><br>    <span class=\"hljs-comment\">#  - Amount of stored points</span><br>    <span class=\"hljs-comment\">#  - Current write RPS</span><br>    <span class=\"hljs-comment\">#</span><br>    <span class=\"hljs-comment\"># It is recommended to select default number of segments as a factor of the number of search threads,</span><br>    <span class=\"hljs-comment\"># so that each segment would be handled evenly by one of the threads.</span><br>    <span class=\"hljs-comment\"># If `default_segment_number = 0`, will be automatically selected by the number of available CPUs</span><br>    <span class=\"hljs-attr\">default_segment_number:</span> <span class=\"hljs-number\">0</span><br><br>    <span class=\"hljs-comment\"># Do not create segments larger this size (in KiloBytes).</span><br>    <span class=\"hljs-comment\"># Large segments might require disproportionately long indexation times,</span><br>    <span class=\"hljs-comment\"># therefore it makes sense to limit the size of segments.</span><br>    <span class=\"hljs-comment\">#</span><br>    <span class=\"hljs-comment\"># If indexation speed have more priority for your - make this parameter lower.</span><br>    <span class=\"hljs-comment\"># If search speed is more important - make this parameter higher.</span><br>    <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> 1Kb = 1 vector of size 256</span><br>    <span class=\"hljs-comment\"># If not set, will be automatically selected considering the number of available CPUs.</span><br>    <span class=\"hljs-attr\">max_segment_size_kb:</span> <span class=\"hljs-literal\">null</span><br><br>    <span class=\"hljs-comment\"># Maximum size (in KiloBytes) of vectors to store in-memory per segment.</span><br>    <span class=\"hljs-comment\"># Segments larger than this threshold will be stored as read-only memmapped file.</span><br>    <span class=\"hljs-comment\"># To enable memmap storage, lower the threshold</span><br>    <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> 1Kb = 1 vector of size 256</span><br>    <span class=\"hljs-comment\"># To explicitly disable mmap optimization, set to `0`.</span><br>    <span class=\"hljs-comment\"># If not set, will be disabled by default.</span><br>    <span class=\"hljs-attr\">memmap_threshold_kb:</span> <span class=\"hljs-literal\">null</span><br><br>    <span class=\"hljs-comment\"># Maximum size (in KiloBytes) of vectors allowed for plain index.</span><br>    <span class=\"hljs-comment\"># Default value based on https://github.com/google-research/google-research/blob/master/scann/docs/algorithms.md</span><br>    <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> 1Kb = 1 vector of size 256</span><br>    <span class=\"hljs-comment\"># To explicitly disable vector indexing, set to `0`.</span><br>    <span class=\"hljs-comment\"># If not set, the default value will be used.</span><br>    <span class=\"hljs-attr\">indexing_threshold_kb:</span> <span class=\"hljs-number\">20000</span><br><br>    <span class=\"hljs-comment\"># Interval between forced flushes.</span><br>    <span class=\"hljs-attr\">flush_interval_sec:</span> <span class=\"hljs-number\">5</span><br><br>    <span class=\"hljs-comment\"># Max number of threads (jobs) for running optimizations per shard.</span><br>    <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> each optimization job will also use `max_indexing_threads` threads by itself for index building.</span><br>    <span class=\"hljs-comment\"># If null - have no limit and choose dynamically to saturate CPU.</span><br>    <span class=\"hljs-comment\"># If 0 - no optimization threads, optimizations will be disabled.</span><br>    <span class=\"hljs-attr\">max_optimization_threads:</span> <span class=\"hljs-literal\">null</span><br><br>  <span class=\"hljs-comment\"># This section has the same options as &#x27;optimizers&#x27; above. All values specified here will overwrite the collections</span><br>  <span class=\"hljs-comment\"># optimizers configs regardless of the config above and the options specified at collection creation.</span><br>  <span class=\"hljs-comment\">#optimizers_overwrite:</span><br>  <span class=\"hljs-comment\">#  deleted_threshold: 0.2</span><br>  <span class=\"hljs-comment\">#  vacuum_min_vector_number: 1000</span><br>  <span class=\"hljs-comment\">#  default_segment_number: 0</span><br>  <span class=\"hljs-comment\">#  max_segment_size_kb: null</span><br>  <span class=\"hljs-comment\">#  memmap_threshold_kb: null</span><br>  <span class=\"hljs-comment\">#  indexing_threshold_kb: 20000</span><br>  <span class=\"hljs-comment\">#  flush_interval_sec: 5</span><br>  <span class=\"hljs-comment\">#  max_optimization_threads: null</span><br><br>  <span class=\"hljs-comment\"># Default parameters of HNSW Index. Could be overridden for each collection or named vector individually</span><br>  <span class=\"hljs-attr\">hnsw_index:</span><br>    <span class=\"hljs-comment\"># Number of edges per node in the index graph. Larger the value - more accurate the search, more space required.</span><br>    <span class=\"hljs-attr\">m:</span> <span class=\"hljs-number\">16</span><br><br>    <span class=\"hljs-comment\"># Number of neighbours to consider during the index building. Larger the value - more accurate the search, more time required to build index.</span><br>    <span class=\"hljs-attr\">ef_construct:</span> <span class=\"hljs-number\">100</span><br><br>    <span class=\"hljs-comment\"># Minimal size (in KiloBytes) of vectors for additional payload-based indexing.</span><br>    <span class=\"hljs-comment\"># If payload chunk is smaller than `full_scan_threshold_kb` additional indexing won&#x27;t be used -</span><br>    <span class=\"hljs-comment\"># in this case full-scan search should be preferred by query planner and additional indexing is not required.</span><br>    <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">Note:</span> 1Kb = 1 vector of size 256</span><br>    <span class=\"hljs-attr\">full_scan_threshold_kb:</span> <span class=\"hljs-number\">10000</span><br><br>    <span class=\"hljs-comment\"># Number of parallel threads used for background index building.</span><br>    <span class=\"hljs-comment\"># If 0 - automatically select.</span><br>    <span class=\"hljs-comment\"># Best to keep between 8 and 16 to prevent likelihood of building broken/inefficient HNSW graphs.</span><br>    <span class=\"hljs-comment\"># On small CPUs, less threads are used.</span><br>    <span class=\"hljs-attr\">max_indexing_threads:</span> <span class=\"hljs-number\">0</span><br><br>    <span class=\"hljs-comment\"># Store HNSW index on disk. If set to false, index will be stored in RAM. Default: false</span><br>    <span class=\"hljs-attr\">on_disk:</span> <span class=\"hljs-literal\">false</span><br><br>    <span class=\"hljs-comment\"># Custom M param for hnsw graph built for payload index. If not set, default M will be used.</span><br>    <span class=\"hljs-attr\">payload_m:</span> <span class=\"hljs-literal\">null</span><br><br>  <span class=\"hljs-comment\"># Default shard transfer method to use if none is defined.</span><br>  <span class=\"hljs-comment\"># If null - don&#x27;t have a shard transfer preference, choose automatically.</span><br>  <span class=\"hljs-comment\"># If stream_records, snapshot or wal_delta - prefer this specific method.</span><br>  <span class=\"hljs-comment\"># More info: https://qdrant.tech/documentation/guides/distributed_deployment/#shard-transfer-method</span><br>  <span class=\"hljs-attr\">shard_transfer_method:</span> <span class=\"hljs-literal\">null</span><br><br>  <span class=\"hljs-comment\"># Default parameters for collections</span><br>  <span class=\"hljs-attr\">collection:</span><br>    <span class=\"hljs-comment\"># Number of replicas of each shard that network tries to maintain</span><br>    <span class=\"hljs-attr\">replication_factor:</span> <span class=\"hljs-number\">2</span><br><br>    <span class=\"hljs-comment\"># How many replicas should apply the operation for us to consider it successful</span><br>    <span class=\"hljs-attr\">write_consistency_factor:</span> <span class=\"hljs-number\">1</span><br><br>    <span class=\"hljs-comment\"># Default parameters for vectors.</span><br>    <span class=\"hljs-attr\">vectors:</span><br>      <span class=\"hljs-comment\"># Whether vectors should be stored in memory or on disk.</span><br>      <span class=\"hljs-attr\">on_disk:</span> <span class=\"hljs-literal\">null</span><br><br>    <span class=\"hljs-comment\"># shard_number_per_node: 1</span><br><br>    <span class=\"hljs-comment\"># Default quantization configuration.</span><br>    <span class=\"hljs-comment\"># More info: https://qdrant.tech/documentation/guides/quantization</span><br>    <span class=\"hljs-attr\">quantization:</span> <span class=\"hljs-literal\">null</span><br><br>    <span class=\"hljs-comment\"># Default strict mode parameters for newly created collections.</span><br>    <span class=\"hljs-attr\">strict_mode:</span><br>      <span class=\"hljs-comment\"># Whether strict mode is enabled for a collection or not.</span><br>      <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">false</span><br><br>      <span class=\"hljs-comment\"># Max allowed `limit` parameter for all APIs that don&#x27;t have their own max limit.</span><br>      <span class=\"hljs-attr\">max_query_limit:</span> <span class=\"hljs-literal\">null</span><br><br>      <span class=\"hljs-comment\"># Max allowed `timeout` parameter.</span><br>      <span class=\"hljs-attr\">max_timeout:</span> <span class=\"hljs-literal\">null</span><br><br>      <span class=\"hljs-comment\"># Allow usage of unindexed fields in retrieval based (eg. search) filters.</span><br>      <span class=\"hljs-attr\">unindexed_filtering_retrieve:</span> <span class=\"hljs-literal\">null</span><br><br>      <span class=\"hljs-comment\"># Allow usage of unindexed fields in filtered updates (eg. delete by payload).</span><br>      <span class=\"hljs-attr\">unindexed_filtering_update:</span> <span class=\"hljs-literal\">null</span><br><br>      <span class=\"hljs-comment\"># Max HNSW value allowed in search parameters.</span><br>      <span class=\"hljs-attr\">search_max_hnsw_ef:</span> <span class=\"hljs-literal\">null</span><br><br>      <span class=\"hljs-comment\"># Whether exact search is allowed or not.</span><br>      <span class=\"hljs-attr\">search_allow_exact:</span> <span class=\"hljs-literal\">null</span><br><br>      <span class=\"hljs-comment\"># Max oversampling value allowed in search.</span><br>      <span class=\"hljs-attr\">search_max_oversampling:</span> <span class=\"hljs-literal\">null</span><br><br><span class=\"hljs-attr\">service:</span><br>  <span class=\"hljs-comment\"># Maximum size of POST data in a single request in megabytes</span><br>  <span class=\"hljs-attr\">max_request_size_mb:</span> <span class=\"hljs-number\">32</span><br><br>  <span class=\"hljs-comment\"># Number of parallel workers used for serving the api. If 0 - equal to the number of available cores.</span><br>  <span class=\"hljs-comment\"># If missing - Same as storage.max_search_threads</span><br>  <span class=\"hljs-attr\">max_workers:</span> <span class=\"hljs-number\">0</span><br><br>  <span class=\"hljs-comment\"># Host to bind the service on</span><br>  <span class=\"hljs-attr\">host:</span> <span class=\"hljs-number\">0.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.0</span><br><br>  <span class=\"hljs-comment\"># HTTP(S) port to bind the service on</span><br>  <span class=\"hljs-attr\">http_port:</span> <span class=\"hljs-number\">6333</span><br><br>  <span class=\"hljs-comment\"># gRPC port to bind the service on.</span><br>  <span class=\"hljs-comment\"># If `null` - gRPC is disabled. Default: null</span><br>  <span class=\"hljs-comment\"># Comment to disable gRPC:</span><br>  <span class=\"hljs-attr\">grpc_port:</span> <span class=\"hljs-number\">6334</span><br><br>  <span class=\"hljs-comment\"># Enable CORS headers in REST API.</span><br>  <span class=\"hljs-comment\"># If enabled, browsers would be allowed to query REST endpoints regardless of query origin.</span><br>  <span class=\"hljs-comment\"># More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS</span><br>  <span class=\"hljs-comment\"># Default: true</span><br>  <span class=\"hljs-attr\">enable_cors:</span> <span class=\"hljs-literal\">true</span><br><br>  <span class=\"hljs-comment\"># Enable HTTPS for the REST and gRPC API</span><br>  <span class=\"hljs-attr\">enable_tls:</span> <span class=\"hljs-literal\">false</span><br><br>  <span class=\"hljs-comment\"># Check user HTTPS client certificate against CA file specified in tls config</span><br>  <span class=\"hljs-attr\">verify_https_client_certificate:</span> <span class=\"hljs-literal\">false</span><br><br>  <span class=\"hljs-comment\"># Set an api-key.</span><br>  <span class=\"hljs-comment\"># If set, all requests must include a header with the api-key.</span><br>  <span class=\"hljs-comment\"># example header: `api-key: &lt;API-KEY&gt;`</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># If you enable this you should also enable TLS.</span><br>  <span class=\"hljs-comment\"># (Either above or via an external service like nginx.)</span><br>  <span class=\"hljs-comment\"># Sending an api-key over an unencrypted channel is insecure.</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># Uncomment to enable.</span><br>  <span class=\"hljs-attr\">api_key:</span> <span class=\"hljs-string\">&#x27;123456&#x27;</span><br><br>  <span class=\"hljs-comment\"># Set an api-key for read-only operations.</span><br>  <span class=\"hljs-comment\"># If set, all requests must include a header with the api-key.</span><br>  <span class=\"hljs-comment\"># example header: `api-key: &lt;API-KEY&gt;`</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># If you enable this you should also enable TLS.</span><br>  <span class=\"hljs-comment\"># (Either above or via an external service like nginx.)</span><br>  <span class=\"hljs-comment\"># Sending an api-key over an unencrypted channel is insecure.</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># Uncomment to enable.</span><br>  <span class=\"hljs-attr\">read_only_api_key:</span> <span class=\"hljs-string\">&#x27;123&#x27;</span><br><br>  <span class=\"hljs-comment\"># Uncomment to enable JWT Role Based Access Control (RBAC).</span><br>  <span class=\"hljs-comment\"># If enabled, you can generate JWT tokens with fine-grained rules for access control.</span><br>  <span class=\"hljs-comment\"># Use generated token instead of API key.</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-attr\">jwt_rbac:</span> <span class=\"hljs-literal\">true</span><br><br>  <span class=\"hljs-comment\"># Hardware reporting adds information to the API responses with a</span><br>  <span class=\"hljs-comment\"># hint on how many resources were used to execute the request.</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># Uncomment to enable.</span><br>  <span class=\"hljs-comment\"># hardware_reporting: true</span><br><span class=\"hljs-attr\">cluster:</span><br>  <span class=\"hljs-comment\"># Use `enabled: true` to run Qdrant in distributed deployment mode</span><br>  <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">true</span><br><br>  <span class=\"hljs-comment\"># Configuration of the inter-cluster communication</span><br>  <span class=\"hljs-attr\">p2p:</span><br>    <span class=\"hljs-comment\"># Port for internal communication between peers</span><br>    <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">6335</span><br><br>    <span class=\"hljs-comment\"># Use TLS for communication between peers</span><br>    <span class=\"hljs-attr\">enable_tls:</span> <span class=\"hljs-literal\">false</span><br><br>  <span class=\"hljs-comment\"># Configuration related to distributed consensus algorithm</span><br>  <span class=\"hljs-attr\">consensus:</span><br>    <span class=\"hljs-comment\"># How frequently peers should ping each other.</span><br>    <span class=\"hljs-comment\"># Setting this parameter to lower value will allow consensus</span><br>    <span class=\"hljs-comment\"># to detect disconnected nodes earlier, but too frequent</span><br>    <span class=\"hljs-comment\"># tick period may create significant network and CPU overhead.</span><br>    <span class=\"hljs-comment\"># We encourage you NOT to change this parameter unless you know what you are doing.</span><br>    <span class=\"hljs-attr\">tick_period_ms:</span> <span class=\"hljs-number\">100</span><br>    <span class=\"hljs-comment\"># Compact consensus operations once we have this amount of applied</span><br>    <span class=\"hljs-comment\"># operations. Allows peers to join quickly with a consensus snapshot without</span><br>    <span class=\"hljs-comment\"># replaying a huge amount of operations.</span><br>    <span class=\"hljs-comment\"># If 0 - disable compaction</span><br>    <span class=\"hljs-comment\">#compact_wal_entries: 128</span><br><br><span class=\"hljs-comment\"># Set to true to prevent service from sending usage statistics to the developers.</span><br><span class=\"hljs-comment\"># Read more: https://qdrant.tech/documentation/guides/telemetry</span><br><span class=\"hljs-attr\">telemetry_disabled:</span> <span class=\"hljs-literal\">false</span><br><br><span class=\"hljs-comment\"># TLS configuration.</span><br><span class=\"hljs-comment\"># Required if either service.enable_tls or cluster.p2p.enable_tls is true.</span><br><span class=\"hljs-attr\">tls:</span><br>  <span class=\"hljs-comment\"># Server certificate chain file</span><br>  <span class=\"hljs-attr\">cert:</span> <span class=\"hljs-string\">./tls/cert.pem</span><br><br>  <span class=\"hljs-comment\"># Server private key file</span><br>  <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">./tls/key.pem</span><br><br>  <span class=\"hljs-comment\"># Certificate authority certificate file.</span><br>  <span class=\"hljs-comment\"># This certificate will be used to validate the certificates</span><br>  <span class=\"hljs-comment\"># presented by other nodes during inter-cluster communication.</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># If verify_https_client_certificate is true, it will verify</span><br>  <span class=\"hljs-comment\"># HTTPS client certificate</span><br>  <span class=\"hljs-comment\">#</span><br>  <span class=\"hljs-comment\"># Required if cluster.p2p.enable_tls is true.</span><br>  <span class=\"hljs-attr\">ca_cert:</span> <span class=\"hljs-string\">./tls/cacert.pem</span><br><br>  <span class=\"hljs-comment\"># TTL in seconds to reload certificate from disk, useful for certificate rotations.</span><br>  <span class=\"hljs-comment\"># Only works for HTTPS endpoints. Does not support gRPC (and intra-cluster communication).</span><br>  <span class=\"hljs-comment\"># If `null` - TTL is disabled.</span><br>  <span class=\"hljs-attr\">cert_ttl:</span> <span class=\"hljs-number\">3600</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-4-初始化qdrant集群\"><a href=\"#2-4-初始化qdrant集群\" class=\"headerlink\" title=\"2.4 初始化qdrant集群\"></a>2.4 初始化qdrant集群</h5><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">参考文档：https:<span class=\"hljs-regexp\">//</span>qdrant.tech<span class=\"hljs-regexp\">/documentation/gui</span>des<span class=\"hljs-regexp\">/distributed_deployment/</span><br></code></pre></td></tr></table></figure>\n\n<p>配置初始化ledger节点（172.16.20.65）：</p>\n<p>vim &#x2F;data&#x2F;program&#x2F;qdrant&#x2F;qdrant.yaml</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-attribute\">qdrant</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant/qdrant:v1.13.3</span><br>    <span class=\"hljs-attribute\">restart</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant</span><br>    <span class=\"hljs-comment\">#ledger node  </span><br>    <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">./qdrant --uri &#x27;http://172.16.20.65:6335&#x27;</span><br>    <span class=\"hljs-attribute\">ports</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6333:6333</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6334:6334</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6335:6335</span><br>    <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/qdrant/storage</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./snapshots:/qdrant/snapshots</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./logs:/qdrant/logs</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./config/cluster_config.yaml:/qdrant/config/production.yaml</span><br></code></pre></td></tr></table></figure>\n\n<p>配置初始化follower节点（172.16.20.46,172.16.20.90）：</p>\n<p>vim &#x2F;data&#x2F;program&#x2F;qdrant&#x2F;qdrant.yaml</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-attribute\">qdrant</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant/qdrant:v1.13.3</span><br>    <span class=\"hljs-attribute\">restart</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant</span><br>    <span class=\"hljs-comment\">#join node</span><br>    <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">./qdrant --bootstrap &#x27;http://172.16.20.65:6335&#x27;</span><br>    <span class=\"hljs-attribute\">ports</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6333:6333</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6334:6334</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6335:6335</span><br>    <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/qdrant/storage</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./snapshots:/qdrant/snapshots</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./logs:/qdrant/logs</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./config/cluster_config.yaml:/qdrant/config/production.yaml</span><br></code></pre></td></tr></table></figure>\n\n<p>三节点依次启动集群</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">cd</span> /<span class=\"hljs-keyword\">data</span>/program/qdrant/<br>docker<span class=\"hljs-literal\">-compose</span> <span class=\"hljs-operator\">-f</span> qdrant.yaml up <span class=\"hljs-literal\">-d</span><br></code></pre></td></tr></table></figure>\n\n<p>启动完成，登录前台<a href=\"http://172.16.20.46:6333/dashboard%EF%BC%8C%E9%AA%8C%E8%AF%81%E9%9B%86%E7%BE%A4%E7%8A%B6%E6%80%81\">http://172.16.20.46:6333/dashboard，验证集群状态</a></p>\n<p>GET _cluster</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;result&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;enabled&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;peer_id&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4080902811012997</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;peers&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;1993017374776241&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;uri&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;http://172.16.20.90:6335/&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;5880012902421225&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;uri&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;http://172.16.20.65:6335/&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;4080902811012997&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;uri&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;http://172.16.20.46:6335/&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;raft_info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;term&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">83</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;commit&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">304</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;pending_operations&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;leader&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">5880012902421225</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;role&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Follower&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;is_voter&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;consensus_thread_status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;consensus_thread_status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;working&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;last_update&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;2025-03-21T10:02:37.289807369Z&quot;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;message_send_failures&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ok&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0.000019005</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-5-恢复集群正常启动配置\"><a href=\"#2-5-恢复集群正常启动配置\" class=\"headerlink\" title=\"2.5 恢复集群正常启动配置\"></a>2.5 恢复集群正常启动配置</h5><p>配置三节点启动docker-compose文件，修改分布式集群启动方式</p>\n<p>vim &#x2F;data&#x2F;program&#x2F;qdrant&#x2F;qdrant.yaml</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-attribute\">qdrant</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant/qdrant:v1.13.3</span><br>    <span class=\"hljs-attribute\">restart</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant</span><br>    <span class=\"hljs-comment\">#cluster node</span><br>    <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">./qdrant</span><br>    <span class=\"hljs-attribute\">ports</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6333:6333</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6334:6334</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6335:6335</span><br>    <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/qdrant/storage</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./snapshots:/qdrant/snapshots</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./logs:/qdrant/logs</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./config/cluster_config.yaml:/qdrant/config/production.yaml</span><br></code></pre></td></tr></table></figure>\n\n<p>启动完成，登录前台<a href=\"http://172.16.20.46:6333/dashboard%EF%BC%8C%E9%AA%8C%E8%AF%81%E9%9B%86%E7%BE%A4%E7%8A%B6%E6%80%81\">http://172.16.20.46:6333/dashboard，验证集群状态</a></p>\n<p>GET _cluster</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;result&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;enabled&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;peer_id&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4080902811012997</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;peers&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;1993017374776241&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;uri&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;http://172.16.20.90:6335/&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;5880012902421225&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;uri&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;http://172.16.20.65:6335/&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;4080902811012997&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;uri&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;http://172.16.20.46:6335/&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;raft_info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;term&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">83</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;commit&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">304</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;pending_operations&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;leader&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">5880012902421225</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;role&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Follower&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;is_voter&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;consensus_thread_status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;consensus_thread_status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;working&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;last_update&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;2025-03-21T10:02:37.289807369Z&quot;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;message_send_failures&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ok&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0.000019005</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3、qdrant集群升级\"><a href=\"#3、qdrant集群升级\" class=\"headerlink\" title=\"3、qdrant集群升级\"></a>3、qdrant集群升级</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">前提条件：<br>拥有多节点集群，并且您的集合的复制因子至少为2，则升级过程将零停机时间并以滚动方式完成。您将能够正常使用您的数据库集群。<br>有一个单节点集群或复制因子为1的集合，则升级过程将需要短暂的停机时间来使用新版本重新启动集群。<br>集群启动方式不能已初始化方式启动，否则升级过程将选举失败,且无法回退。<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-1-集群集合备份\"><a href=\"#3-1-集群集合备份\" class=\"headerlink\" title=\"3.1 集群集合备份\"></a>3.1 集群集合备份</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">集群集合备份，并确认快照可用,可正常恢复<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-2-检查集群状态\"><a href=\"#3-2-检查集群状态\" class=\"headerlink\" title=\"3.2 检查集群状态\"></a>3.2 检查集群状态</h5><p>验证集群是否为green,且确认每个节点role，默认ledger最后升级</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">GET</span> _cluster<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-3-下载新版本镜像\"><a href=\"#3-3-下载新版本镜像\" class=\"headerlink\" title=\"3.3 下载新版本镜像\"></a>3.3 下载新版本镜像</h5><p>1.13.3 -&gt; 1.13.5</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> pull qdrant/qdrant：v1.<span class=\"hljs-number\">13</span>.<span class=\"hljs-number\">5</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-4-下载新版本配置文件\"><a href=\"#3-4-下载新版本配置文件\" class=\"headerlink\" title=\"3.4 下载新版本配置文件\"></a>3.4 下载新版本配置文件</h5><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">官方配置参考：https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/qdrant/</span>qdrant<span class=\"hljs-regexp\">/tree/m</span>aster<span class=\"hljs-regexp\">/config/</span><br><br>选择config.yml，并与旧配置内容进行比对，进行调整，上传至配置文件目录<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-5-停止旧节点\"><a href=\"#3-5-停止旧节点\" class=\"headerlink\" title=\"3.5 停止旧节点\"></a>3.5 停止旧节点</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">cd</span> /<span class=\"hljs-keyword\">data</span>/program/qdrant/<br>docker<span class=\"hljs-literal\">-compose</span> <span class=\"hljs-operator\">-f</span> qdrant.yaml down<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-6-修改镜像版本\"><a href=\"#3-6-修改镜像版本\" class=\"headerlink\" title=\"3.6 修改镜像版本\"></a>3.6 修改镜像版本</h5><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\"><span class=\"hljs-keyword\">cat</span> qdrant.yaml | <span class=\"hljs-keyword\">grep</span> image<br>image: qdrant/qdran<span class=\"hljs-variable\">t:v1</span>.<span class=\"hljs-number\">13.5</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-7-重新启动节点\"><a href=\"#3-7-重新启动节点\" class=\"headerlink\" title=\"3.7 重新启动节点\"></a>3.7 重新启动节点</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">cd</span> /<span class=\"hljs-keyword\">data</span>/program/qdrant/<br>docker<span class=\"hljs-literal\">-compose</span> <span class=\"hljs-operator\">-f</span> qdrant.yaml up <span class=\"hljs-literal\">-d</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-8-验证集群状态\"><a href=\"#3-8-验证集群状态\" class=\"headerlink\" title=\"3.8 验证集群状态\"></a>3.8 验证集群状态</h5><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">GET</span> _cluster<br></code></pre></td></tr></table></figure>\n\n<p>验证集群状态是否为green,等待集群选举完成，其他节点进行如上操作升级集群。</p>\n<h4 id=\"4、集群扩缩容\"><a href=\"#4、集群扩缩容\" class=\"headerlink\" title=\"4、集群扩缩容\"></a>4、集群扩缩容</h4><h5 id=\"4-1-扩容\"><a href=\"#4-1-扩容\" class=\"headerlink\" title=\"4.1 扩容\"></a>4.1 扩容</h5><p>参考集群部署2.1-2.4，同步其他节点cluster_config.yaml</p>\n<p>初始化连接集群ledger</p>\n<p>vim &#x2F;data&#x2F;program&#x2F;qdrant&#x2F;qdrant.yaml</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-attribute\">qdrant</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant/qdrant:v1.13.3</span><br>    <span class=\"hljs-attribute\">restart</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant</span><br>    <span class=\"hljs-comment\">#join node</span><br>    <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">./qdrant --bootstrap &#x27;http://$&#123;ledger_ip&#125;:6335&#x27;</span><br>    <span class=\"hljs-attribute\">ports</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6333:6333</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6334:6334</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6335:6335</span><br>    <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/qdrant/storage</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./snapshots:/qdrant/snapshots</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./logs:/qdrant/logs</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./config/cluster_config.yaml:/qdrant/config/production.yaml</span><br></code></pre></td></tr></table></figure>\n\n<p>启动完成，登录前台<a href=\"http://172.16.20.46:6333/dashboard%EF%BC%8C%E9%AA%8C%E8%AF%81%E9%9B%86%E7%BE%A4%E7%8A%B6%E6%80%81\">http://172.16.20.46:6333/dashboard，验证集群状态</a></p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">GET</span> _cluster<br></code></pre></td></tr></table></figure>\n\n<p>恢复新节点正常启动配置</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-attribute\">qdrant</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant/qdrant:v1.13.3</span><br>    <span class=\"hljs-attribute\">restart</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant</span><br>    <span class=\"hljs-comment\">#cluster node</span><br>    <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">./qdrant</span><br>    <span class=\"hljs-attribute\">ports</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6333:6333</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6334:6334</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">6335:6335</span><br>    <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/qdrant/storage</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./snapshots:/qdrant/snapshots</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./logs:/qdrant/logs</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./config/cluster_config.yaml:/qdrant/config/production.yaml</span><br></code></pre></td></tr></table></figure>\n\n<p>启动完成，验证集群状态</p>\n<h5 id=\"4-2-缩容\"><a href=\"#4-2-缩容\" class=\"headerlink\" title=\"4.2 缩容\"></a>4.2 缩容</h5><p>移动缩容节点分片至其他节点</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\">curl -X POST http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name/cluster \\</span><br><span class=\"hljs-comment\">     -H &quot;api-key: qdrant@1133&quot; \\</span><br><span class=\"hljs-comment\">     -H &quot;Content-Type: application/json&quot; \\</span><br><span class=\"hljs-comment\">     -d &#x27;&#123;</span><br>  <span class=\"hljs-string\">&quot;move_shard&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;shard_id&quot;</span>: <span class=\"hljs-number\">0</span>,<br>    <span class=\"hljs-string\">&quot;to_peer_id&quot;</span>: <span class=\"hljs-number\">2120809141859359</span>,<br>    <span class=\"hljs-string\">&quot;from_peer_id&quot;</span>: <span class=\"hljs-number\">3306291262481813</span><br>  &#125;<br>&#125;&#x27;<br></code></pre></td></tr></table></figure>\n\n<p>删除旧节点</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> -X DELETE <span class=\"hljs-string\">&quot;http://localhost:6333/cluster/peer/2120809141859359&quot;</span> <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: qdrant@1133&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>验证集群状态</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">GET</span> _cluster<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"三、qdrant权限管理\"><a href=\"#三、qdrant权限管理\" class=\"headerlink\" title=\"三、qdrant权限管理\"></a>三、qdrant权限管理</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">官方文档：https:<span class=\"hljs-regexp\">//</span>qdrant.tech<span class=\"hljs-regexp\">/documentation/gui</span>des/security<br></code></pre></td></tr></table></figure>\n\n<p>jwt_token配置，需要python3环境，PyJwt模块</p>\n<p>vim &#x2F;data&#x2F;program&#x2F;qdrant&#x2F;bin&#x2F;token.py</p>\n<figure class=\"highlight d\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs d\"><span class=\"hljs-keyword\">import</span> jwt<br><br>#key为配置文件中api_key的值<br>key = <span class=\"hljs-string\">&quot;123456</span><br><span class=\"hljs-string\">    </span><br><span class=\"hljs-string\">encoded = jwt.encode(&#123;</span><br><span class=\"hljs-string\">    &quot;</span>access<span class=\"hljs-string\">&quot;: [</span><br><span class=\"hljs-string\">        &#123;</span><br><span class=\"hljs-string\">        &quot;c</span>ollection<span class=\"hljs-string\">&quot;: &quot;</span>test1<span class=\"hljs-string\">&quot;,</span><br><span class=\"hljs-string\">        &quot;</span>access<span class=\"hljs-string\">&quot;: &quot;</span><span class=\"hljs-string\">r&quot;</span><br><span class=\"hljs-string\">        &#125;,</span><br><span class=\"hljs-string\">        &#123;</span><br><span class=\"hljs-string\">        &quot;c</span>ollection<span class=\"hljs-string\">&quot;: &quot;</span>test2<span class=\"hljs-string\">&quot;,</span><br><span class=\"hljs-string\">        &quot;</span>access<span class=\"hljs-string\">&quot;: &quot;</span>rw<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\">        &#125;</span><br><span class=\"hljs-string\">    ]</span><br><span class=\"hljs-string\">&#125;, key, algorithm=&quot;</span>HS256<span class=\"hljs-string\">&quot;)</span><br><span class=\"hljs-string\">print(encoded)</span><br></code></pre></td></tr></table></figure>\n\n<p>生成token</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fortran\">在<span class=\"hljs-keyword\">access</span>中编写对应collections和<span class=\"hljs-keyword\">access</span>，编写完成后，执行脚本生成token<br><br>cd /<span class=\"hljs-keyword\">data</span>/<span class=\"hljs-function\"><span class=\"hljs-keyword\">program</span></span>/qdrant/<br>python3 bin/token.py<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"四、集群备份与恢复\"><a href=\"#四、集群备份与恢复\" class=\"headerlink\" title=\"四、集群备份与恢复\"></a>四、集群备份与恢复</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">官方文档：https:<span class=\"hljs-regexp\">//</span>qdrant.tech<span class=\"hljs-regexp\">/documentation/</span>concepts<span class=\"hljs-regexp\">/snapshots/</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">在分布式设置中，当集群中有多个节点时，处理单个集合时必须为每个节点分别创建快照，单个快照将仅包含创建快照的节点上存储的数据。恢复时，恢复当前节点的快照数据<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1、备份恢复管理脚本\"><a href=\"#1、备份恢复管理脚本\" class=\"headerlink\" title=\"1、备份恢复管理脚本\"></a>1、备份恢复管理脚本</h4><p>qdbak.sh需要配置S3备份数据路径和备份工具，以及集群api_key，并将脚本上传至集群每个节点</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">vim /data/program/qdrant/bin/qdbak.sh<br><br><span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">tools</span>=<span class=\"hljs-string\">&quot;/usr/local/bin/mc&quot;</span><br><br><span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">snapshots_path</span>=<span class=\"hljs-string\">&quot;qdrant_snapshots&quot;</span><br><br><span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">S3_dir</span>=<span class=\"hljs-string\">&quot;minio-server/qdrant-bucket/<span class=\"hljs-variable\">$&#123;snapshots_path&#125;</span>&quot;</span><br><br><span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">api_key</span>=<span class=\"hljs-string\">&quot;F24CF34BBC63901A5C401A25F51C1339&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>常用命令：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">./qdbak.<span class=\"hljs-keyword\">sh</span> <br>Usage: qdbak [<span class=\"hljs-keyword\">options</span>] [<span class=\"hljs-keyword\">args</span>]<br>  option:<br>    -L         show qdrant backup<br>    -A         backup <span class=\"hljs-keyword\">all</span> collection<br>    -B         backup collection<br>    -R         Restore collection<br>    -<span class=\"hljs-keyword\">b</span> <span class=\"hljs-symbol\">&lt;ver&gt;</span>   <span class=\"hljs-keyword\">set</span> collection name, default <span class=\"hljs-keyword\">is</span> null<br>    -s <span class=\"hljs-symbol\">&lt;ver&gt;</span>   <span class=\"hljs-keyword\">set</span> restore snapshots name, default <span class=\"hljs-keyword\">is</span> null<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2、备份\"><a href=\"#2、备份\" class=\"headerlink\" title=\"2、备份\"></a>2、备份</h4><p>备份只备份当前节点数据</p>\n<h5 id=\"2-1-创建单个集合快照\"><a href=\"#2-1-创建单个集合快照\" class=\"headerlink\" title=\"2.1 创建单个集合快照\"></a>2.1 创建单个集合快照</h5><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">./qdbak.sh -b test -B<br><br>2025-03-23 14:09:42 <span class=\"hljs-built_in\">INFO</span> Start backup collection: test<br>2025-03-23 14:18:39 <span class=\"hljs-built_in\">INFO</span> Snapshot creation successful <span class=\"hljs-keyword\">for</span> test.<br>2025-03-23 14:18:39 <span class=\"hljs-built_in\">INFO</span> <span class=\"hljs-built_in\">Remove</span> overdue snapshots <span class=\"hljs-keyword\">in</span> docker successful <span class=\"hljs-keyword\">for</span> test.<br>2025-03-23 14:18:39 <span class=\"hljs-built_in\">INFO</span> End backup collection: test.<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-创建所有集合快照\"><a href=\"#2-2-创建所有集合快照\" class=\"headerlink\" title=\"2.2 创建所有集合快照\"></a>2.2 创建所有集合快照</h5><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">./qdbak.sh -A<br><br>2025-03-24 10:30:01 <span class=\"hljs-built_in\">INFO</span> Action begin: backup_all_collection<br>2025-03-24 10:30:01 <span class=\"hljs-built_in\">INFO</span> Starting <span class=\"hljs-built_in\">..</span>.<br>2025-03-24 10:30:01 <span class=\"hljs-built_in\">INFO</span> Start backup collection: zy_test_bq_s8<br>2025-03-24 10:45:09 <span class=\"hljs-built_in\">INFO</span> Snapshot creation successful <span class=\"hljs-keyword\">for</span> zy_test_bq_s8.<br>2025-03-24 10:45:09 <span class=\"hljs-built_in\">INFO</span> <span class=\"hljs-built_in\">Remove</span> overdue snapshots <span class=\"hljs-keyword\">in</span> docker successful <span class=\"hljs-keyword\">for</span> zy_test_bq_s8.<br>2025-03-24 10:45:09 <span class=\"hljs-built_in\">INFO</span> End backup collection: zy_test_bq_s8.<br>2025-03-24 10:45:09 <span class=\"hljs-built_in\">INFO</span> Start backup collection: opinion_history_test<br>2025-03-24 10:45:49 <span class=\"hljs-built_in\">INFO</span> Snapshot creation successful <span class=\"hljs-keyword\">for</span> opinion_history_test.<br>2025-03-24 10:45:49 <span class=\"hljs-built_in\">INFO</span> <span class=\"hljs-built_in\">Remove</span> overdue snapshots <span class=\"hljs-keyword\">in</span> docker successful <span class=\"hljs-keyword\">for</span> opinion_history_test.<br>2025-03-24 10:45:49 <span class=\"hljs-built_in\">INFO</span> End backup collection: opinion_history_test.<br>2025-03-24 11:03:01 <span class=\"hljs-built_in\">INFO</span>  All collections has been backuped.<br>2025-03-24 11:03:01 <span class=\"hljs-built_in\">INFO</span> Action successed: backup_all_collection<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3、恢复\"><a href=\"#3、恢复\" class=\"headerlink\" title=\"3、恢复\"></a>3、恢复</h4><p>查看恢复快照名称和节点</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">./qdbak.sh -L<br></code></pre></td></tr></table></figure>\n\n<p>恢复单个集合当前节点的快照（快照恢复两个节点数据完成恢复且可以正常使用）</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs subunit\">./qdbak.sh -s test<span class=\"hljs-string\">-1993017374776241</span><span class=\"hljs-string\">-2025</span><span class=\"hljs-string\">-03</span><span class=\"hljs-string\">-21</span><span class=\"hljs-string\">-05</span><span class=\"hljs-string\">-41</span><span class=\"hljs-string\">-23</span>.snapshot -R<br></code></pre></td></tr></table></figure>\n\n<p>恢复完成后，查看集合数据是否正常</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">GET</span> collections/test<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"五、集群监控与遥测\"><a href=\"#五、集群监控与遥测\" class=\"headerlink\" title=\"五、集群监控与遥测\"></a>五、集群监控与遥测</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">官方文档：https:<span class=\"hljs-regexp\">//</span>qdrant.tech<span class=\"hljs-regexp\">/documentation/gui</span>des<span class=\"hljs-regexp\">/monitoring/</span><br>json_export文档: https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/prometheus-community/</span>json_exporter<br>prometheus文档：https:<span class=\"hljs-regexp\">//</span>prometheus.io<span class=\"hljs-regexp\">/docs/</span>prometheus<span class=\"hljs-regexp\">/latest/</span>configuration<span class=\"hljs-regexp\">/configuration/</span><span class=\"hljs-comment\">#http_config</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1、-节点指标-metrics\"><a href=\"#1、-节点指标-metrics\" class=\"headerlink\" title=\"1、 节点指标/metrics\"></a>1、 节点指标<code>/metrics</code></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">指标端点：http://localhost:6333/metrics<br></code></pre></td></tr></table></figure>\n\n<p>qdrant开启api_key和read_only_key时，采集配置需要配置authorization.credentials值</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">- <span class=\"hljs-params\">job_name:</span> &#x27;qdrant-exporter&#x27;<br>  <span class=\"hljs-params\">metrics_path:</span> <span class=\"hljs-symbol\">/metrics</span><br>  <span class=\"hljs-params\">scheme:</span> <span class=\"hljs-string\">&quot;http&quot;</span><br>  <span class=\"hljs-params\">authorization:</span><br>    <span class=\"hljs-params\">credentials:</span> <span class=\"hljs-string\">&quot;123&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2、遥测端点-telemetry\"><a href=\"#2、遥测端点-telemetry\" class=\"headerlink\" title=\"2、遥测端点/telemetry\"></a><strong>2、遥测端点<code>/telemetry</code></strong></h4><p>输出结果为json格式，通过json_export进行采集配置,json_export只需要部署单节点即可</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">http</span>://<span class=\"hljs-number\">172.16.20.46:6333</span>/telemetry?details_level=<span class=\"hljs-number\">3</span><br></code></pre></td></tr></table></figure>\n\n<p>json_export的config.yml</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs less\">modules:<br>  qdrant:<br>    headers:<br>      <span class=\"hljs-attribute\">X-Dummy</span>: my-test-header<br>    <span class=\"hljs-attribute\">http_client_config</span>:<br>      <span class=\"hljs-attribute\">authorization</span>:<br>        <span class=\"hljs-attribute\">credentials</span>: <span class=\"hljs-string\">&#x27;123&#x27;</span><br>    <span class=\"hljs-attribute\">metrics</span>:<br>    - <span class=\"hljs-attribute\">name</span>: qdrant_collection_vectors<br>      <span class=\"hljs-attribute\">type</span>: object<br>      <span class=\"hljs-attribute\">path</span>: <span class=\"hljs-string\">&quot;&#123;.result.collections.collections[*]&#125;&quot;</span><br>      <span class=\"hljs-attribute\">labels</span>:<br>        <span class=\"hljs-attribute\">collection_id</span>: <span class=\"hljs-string\">&quot;&#123;.id&#125;&quot;</span><br>        <span class=\"hljs-attribute\">distance</span>: <span class=\"hljs-string\">&quot;&#123;.config.params.vectors.distance&#125;&quot;</span><br>      <span class=\"hljs-attribute\">values</span>:<br>        <span class=\"hljs-attribute\">size</span>: <span class=\"hljs-string\">&#x27;&#123;.config.params.vectors.size&#125;&#x27;</span><br>        <span class=\"hljs-attribute\">on_disk_enable</span>: <span class=\"hljs-string\">&#x27;&#123;.config.params.vectors.on_disk&#125;&#x27;</span><br>      <span class=\"hljs-attribute\">help</span>: <span class=\"hljs-string\">&quot;vaule of vectors per collection&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>prometheus.yml</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">job_name: json_exporter</span><br>  <span class=\"hljs-attribute\">static_configs</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">targets:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">172.16.20.65:7979</span><br><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">job_name: &#x27;qdrant_telemetry&#x27;</span><br>  <span class=\"hljs-attribute\">metrics_path</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">/probe</span><br>  <span class=\"hljs-attribute\">params</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-attribute\">module</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">[qdrant]</span><br>  <span class=\"hljs-attribute\">static_configs</span><span class=\"hljs-punctuation\">:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">targets:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;http://172.16.20.65:6333/telemetry?details_level=3&quot;</span><br>    <span class=\"hljs-attribute\">labels</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-attribute\">ident</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant-20-65-test-shenzhen-office</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">targets:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;http://172.16.20.46:6333/telemetry?details_level=3&quot;</span><br>    <span class=\"hljs-attribute\">labels</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-attribute\">ident</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant-20-46-test-shenzhen-office</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">targets:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;http://172.16.20.90:6333/telemetry?details_level=3&quot;</span><br>    <span class=\"hljs-attribute\">labels</span><span class=\"hljs-punctuation\">:</span><br>      <span class=\"hljs-attribute\">ident</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">qdrant-20-90-test-shenzhen-office</span><br>  <span class=\"hljs-attribute\">relabel_configs</span><span class=\"hljs-punctuation\">:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">source_labels: [__address__]</span><br>      <span class=\"hljs-attribute\">target_label</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">__param_target</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">source_labels: [__param_target]</span><br>      <span class=\"hljs-attribute\">target_label</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">instance</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">target_label: __address__</span><br>      <span class=\"hljs-attribute\">replacement</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">172.16.20.65:7979</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3、集合分片信息采集\"><a href=\"#3、集合分片信息采集\" class=\"headerlink\" title=\"3、集合分片信息采集\"></a>3、集合分片信息采集</h4><p>编写数据采集脚本，collection.sh。通过categraf执行脚本进行数据采集</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br><br><span class=\"hljs-built_in\">export</span> api_key=<span class=\"hljs-string\">&quot;qdrant@1133&quot;</span><br><span class=\"hljs-built_in\">export</span> IP=$(<span class=\"hljs-keyword\">for</span> device <span class=\"hljs-keyword\">in</span> $(<span class=\"hljs-built_in\">ls</span> -l /sys/class/net/ | sed 1d | awk <span class=\"hljs-string\">&#x27;!/virtual/&#123;print $9&#125;&#x27;</span>); <span class=\"hljs-keyword\">do</span> ip -4 -o addr show <span class=\"hljs-variable\">$device</span> primary | awk -F<span class=\"hljs-string\">&#x27;[/ ]&#x27;</span> <span class=\"hljs-string\">&#x27;&#123;print $7&#125;&#x27;</span>; <span class=\"hljs-keyword\">done</span> | <span class=\"hljs-built_in\">head</span> -n1)<br><br><span class=\"hljs-comment\"># 获取 collections 并转换为数组</span><br><span class=\"hljs-built_in\">mapfile</span> -t collections &lt; &lt;(curl -s -H <span class=\"hljs-string\">&quot;Authorization: Bearer <span class=\"hljs-variable\">$&#123;api_key&#125;</span>&quot;</span> http://<span class=\"hljs-variable\">$&#123;IP&#125;</span>:6333/collections | jq -r <span class=\"hljs-string\">&#x27;.result.collections[].name&#x27;</span>)<br><br><span class=\"hljs-comment\"># 遍历每个 collection 并获取其状态</span><br><span class=\"hljs-keyword\">for</span> collection_name <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$&#123;collections[@]&#125;</span>&quot;</span>; <span class=\"hljs-keyword\">do</span><br>    response=$(curl -s -H <span class=\"hljs-string\">&quot;Authorization: Bearer <span class=\"hljs-variable\">$&#123;api_key&#125;</span>&quot;</span> http://<span class=\"hljs-variable\">$&#123;IP&#125;</span>:6333/collections/<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>)<br>    collection_status=$(<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$response</span>&quot;</span> | jq -r <span class=\"hljs-string\">&#x27;.result.status&#x27;</span>)<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$collection_status</span>&quot;</span> <span class=\"hljs-keyword\">in</span><br>        green)<br>            <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_collection_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 1&quot;</span><br>            ;;<br>        yellow)<br>            <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_collection_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 2&quot;</span><br>            ;;<br>        red)<br>            <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_collection_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 3&quot;</span><br>            ;;<br>        *)<br>            <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_collection_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 0&quot;</span><br>            ;;<br>    <span class=\"hljs-keyword\">esac</span><br><br>    ACTIVE_SHARDS=$(curl -s -XGET <span class=\"hljs-string\">&quot;http://<span class=\"hljs-variable\">$&#123;IP&#125;</span>:6333/collections/<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>/cluster&quot;</span> \\<br>  --header <span class=\"hljs-string\">&quot;api-key: <span class=\"hljs-variable\">$&#123;api_key&#125;</span>&quot;</span> | jq <span class=\"hljs-string\">&#x27;.result.local_shards[] | select(.state == &quot;Active&quot;) | .shard_id&#x27;</span>)<br><br>    Partial_SHARDS=$(curl -s -XGET <span class=\"hljs-string\">&quot;http://<span class=\"hljs-variable\">$&#123;IP&#125;</span>:6333/collections/<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>/cluster&quot;</span> \\<br>  --header <span class=\"hljs-string\">&quot;api-key: <span class=\"hljs-variable\">$&#123;api_key&#125;</span>&quot;</span> | jq <span class=\"hljs-string\">&#x27;.result.local_shards[] | select(.state == &quot;Partial&quot;) | .shard_id&#x27;</span>)<br><br>    Dead_SHARDS=$(curl -s -XGET <span class=\"hljs-string\">&quot;http://<span class=\"hljs-variable\">$&#123;IP&#125;</span>:6333/collections/<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>/cluster&quot;</span> \\<br>  --header <span class=\"hljs-string\">&quot;api-key: <span class=\"hljs-variable\">$&#123;api_key&#125;</span>&quot;</span> | jq <span class=\"hljs-string\">&#x27;.result.local_shards[] | select(.state == &quot;Dead&quot;) | .shard_id&#x27;</span>)<br><br>    <span class=\"hljs-keyword\">for</span> shard <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$ACTIVE_SHARDS</span>; <span class=\"hljs-keyword\">do</span><br>        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_shard_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, shard_id=\\&quot;<span class=\"hljs-variable\">$&#123;shard&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 1&quot;</span><br>    <span class=\"hljs-keyword\">done</span><br><br>    <span class=\"hljs-keyword\">for</span> shard <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$Partial_SHARDS</span>; <span class=\"hljs-keyword\">do</span><br>        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_shard_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, shard_id=\\&quot;<span class=\"hljs-variable\">$&#123;shard&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 1&quot;</span><br>    <span class=\"hljs-keyword\">done</span><br><br>    <span class=\"hljs-keyword\">for</span> shard <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$Dead_SHARDS</span>; <span class=\"hljs-keyword\">do</span><br>        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;qdrant_shard_status&#123;collection_id=\\&quot;<span class=\"hljs-variable\">$&#123;collection_name&#125;</span>\\&quot;, shard_id=\\&quot;<span class=\"hljs-variable\">$&#123;shard&#125;</span>\\&quot;, job=\\&quot;qdrant_telemetry\\&quot;&#125; 1&quot;</span><br>    <span class=\"hljs-keyword\">done</span><br><span class=\"hljs-keyword\">done</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"六、常用运维API\"><a href=\"#六、常用运维API\" class=\"headerlink\" title=\"六、常用运维API\"></a>六、常用运维API</h3><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-meta\"># api参考文档</span><br><span class=\"hljs-symbol\">https:</span><span class=\"hljs-comment\">//api.qdrant.tech/api-reference</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"1、集合\"><a href=\"#1、集合\" class=\"headerlink\" title=\"1、集合\"></a>1、集合</h4><h5 id=\"1-1-获取集合详细信息\"><a href=\"#1-1-获取集合详细信息\" class=\"headerlink\" title=\"1.1 获取集合详细信息\"></a>1.1 获取集合详细信息</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">curl  -X GET \\<br>  &#x27;http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name&#x27; \\</span><br>  --<span class=\"hljs-built_in\">header</span> &#x27;api-<span class=\"hljs-built_in\">key</span>: &lt;api-<span class=\"hljs-built_in\">key</span>-value&gt;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"1-2-更新集合参数\"><a href=\"#1-2-更新集合参数\" class=\"headerlink\" title=\"1.2 更新集合参数\"></a>1.2 更新集合参数</h5><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livescript\">curl  -X PATCH <span class=\"hljs-string\">\\</span><br>  <span class=\"hljs-string\">&#x27;http://localhost:6333/collections/collection_name&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;api-key: &lt;api-key-value&gt;&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;Content-Type: application/json&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --data-raw <span class=\"hljs-string\">&#x27;&#123;</span><br><span class=\"hljs-string\">  &quot;optimizers_config&quot;: &#123;</span><br><span class=\"hljs-string\">    &quot;indexing_threshold&quot;: 10000</span><br><span class=\"hljs-string\">  &#125;</span><br><span class=\"hljs-string\">&#125;&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-列出所有集合\"><a href=\"#1-3-列出所有集合\" class=\"headerlink\" title=\"1.3 列出所有集合\"></a>1.3 列出所有集合</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">curl  -X GET \\<br>  &#x27;http:<span class=\"hljs-comment\">//localhost:6333/collections&#x27; \\</span><br>  --<span class=\"hljs-built_in\">header</span> &#x27;api-<span class=\"hljs-built_in\">key</span>: &lt;api-<span class=\"hljs-built_in\">key</span>-value&gt;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"1-4-检查集合是否存在\"><a href=\"#1-4-检查集合是否存在\" class=\"headerlink\" title=\"1.4 检查集合是否存在\"></a>1.4 检查集合是否存在</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">curl  -X GET \\<br>  &#x27;http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name/exists&#x27; \\</span><br>  --<span class=\"hljs-built_in\">header</span> &#x27;api-<span class=\"hljs-built_in\">key</span>: &lt;api-<span class=\"hljs-built_in\">key</span>-value&gt;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2、快照（基于集合）\"><a href=\"#2、快照（基于集合）\" class=\"headerlink\" title=\"2、快照（基于集合）\"></a>2、快照（基于集合）</h4><h5 id=\"2-1-列出所有快照\"><a href=\"#2-1-列出所有快照\" class=\"headerlink\" title=\"2.1 列出所有快照\"></a>2.1 列出所有快照</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">curl  -X GET \\<br>  &#x27;http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name/snapshots&#x27; \\</span><br>  --<span class=\"hljs-built_in\">header</span> &#x27;api-<span class=\"hljs-built_in\">key</span>: &lt;api-<span class=\"hljs-built_in\">key</span>-value&gt;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-创建快照\"><a href=\"#2-2-创建快照\" class=\"headerlink\" title=\"2.2 创建快照\"></a>2.2 创建快照</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">curl  -X POST \\<br>  &#x27;http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name/snapshots&#x27; \\</span><br>  --<span class=\"hljs-built_in\">header</span> &#x27;api-<span class=\"hljs-built_in\">key</span>: &lt;api-<span class=\"hljs-built_in\">key</span>-value&gt;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-3-上传的快照中恢复\"><a href=\"#2-3-上传的快照中恢复\" class=\"headerlink\" title=\"2.3 上传的快照中恢复\"></a>2.3 上传的快照中恢复</h5><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livescript\">curl  -X POST <span class=\"hljs-string\">\\</span><br>  <span class=\"hljs-string\">&#x27;http://localhost:6333/collections/collection_name/snapshots/upload&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;api-key: &lt;api-key-value&gt;&#x27;</span> <span class=\"hljs-string\">\\</span><br>  -F <span class=\"hljs-string\">&#x27;snapshot=@/path/to/snapshot.shapshot&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-4-从快照中恢复\"><a href=\"#2-4-从快照中恢复\" class=\"headerlink\" title=\"2.4 从快照中恢复\"></a>2.4 从快照中恢复</h5><p>snapshot路径为容器中qdrant实际路径</p>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livescript\">curl  -X PUT <span class=\"hljs-string\">\\</span><br>  <span class=\"hljs-string\">&#x27;http://localhost:6333/collections/collection_name/snapshots/recover&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;api-key: &lt;api-key-value&gt;&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;Content-Type: application/json&#x27;</span> <span class=\"hljs-string\">\\</span><br>  -d <span class=\"hljs-string\">&#x27;&#123;</span><br><span class=\"hljs-string\">  &quot;location&quot;: &quot;file:///qdrant/qdrant_snapshots/colletion_name/snapshot.shapshot&quot;</span><br><span class=\"hljs-string\">&#125;&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-5-下载快照\"><a href=\"#2-5-下载快照\" class=\"headerlink\" title=\"2.5 下载快照\"></a>2.5 下载快照</h5><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elixir\">curl <span class=\"hljs-symbol\">http:</span>//<span class=\"hljs-symbol\">localhost:</span><span class=\"hljs-number\">6333</span>/collections/<span class=\"hljs-symbol\">:collection_name/snapshots/</span><span class=\"hljs-symbol\">:snapshot_name</span> \\<br>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2-6-删除快照\"><a href=\"#2-6-删除快照\" class=\"headerlink\" title=\"2.6 删除快照\"></a>2.6 删除快照</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">curl  -X <span class=\"hljs-keyword\">DELETE</span> \\<br>  &#x27;http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name/snapshots/snapshot_name&#x27; \\</span><br>  --<span class=\"hljs-built_in\">header</span> &#x27;api-<span class=\"hljs-built_in\">key</span>: &lt;api-<span class=\"hljs-built_in\">key</span>-value&gt;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3、分布式\"><a href=\"#3、分布式\" class=\"headerlink\" title=\"3、分布式\"></a>3、分布式</h4><h5 id=\"3-1-检查集群状态\"><a href=\"#3-1-检查集群状态\" class=\"headerlink\" title=\"3.1 检查集群状态\"></a>3.1 检查集群状态</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> http://localhost:<span class=\"hljs-number\">6333</span>/cluster <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-2-创建分片键\"><a href=\"#3-2-创建分片键\" class=\"headerlink\" title=\"3.2 创建分片键\"></a>3.2 创建分片键</h5><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livescript\">curl  -X PUT <span class=\"hljs-string\">\\</span><br>  <span class=\"hljs-string\">&#x27;http://localhost:6333/collections/collection_name/shards&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;api-key: &lt;api-key-value&gt;&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --header <span class=\"hljs-string\">&#x27;Content-Type: application/json&#x27;</span> <span class=\"hljs-string\">\\</span><br>  --data-raw <span class=\"hljs-string\">&#x27;&#123;</span><br><span class=\"hljs-string\">  &quot;shard_key&quot;: &quot;&#123;shard_key&#125;&quot;</span><br><span class=\"hljs-string\">&#125;&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-3-删除分片键\"><a href=\"#3-3-删除分片键\" class=\"headerlink\" title=\"3.3 删除分片键\"></a>3.3 删除分片键</h5><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">curl  -X POST \\<br>  &#x27;http://localhost:6333/collections/collection_name/shards/<span class=\"hljs-keyword\">delete</span><span class=\"hljs-string\">&#x27; \\</span><br><span class=\"hljs-string\">  --header &#x27;</span>api-<span class=\"hljs-keyword\">key</span>: &lt;api-<span class=\"hljs-keyword\">key</span>-<span class=\"hljs-keyword\">value</span>&gt;<span class=\"hljs-string\">&#x27; \\</span><br><span class=\"hljs-string\">  --header &#x27;</span>Content-<span class=\"hljs-built_in\">Type</span>: application/json<span class=\"hljs-string\">&#x27; \\</span><br><span class=\"hljs-string\">  --data-raw &#x27;</span>&#123;<br>  <span class=\"hljs-string\">&quot;shard_key&quot;</span>: <span class=\"hljs-string\">&quot;&#123;shard_key&#125;&quot;</span><br>&#125;<span class=\"hljs-string\">&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-4-恢复集群状态\"><a href=\"#3-4-恢复集群状态\" class=\"headerlink\" title=\"3.4 恢复集群状态\"></a>3.4 恢复集群状态</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> -X POST http://localhost:<span class=\"hljs-number\">6333</span>/cluster/recover <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-5-集群中删除对等体\"><a href=\"#3-5-集群中删除对等体\" class=\"headerlink\" title=\"3.5 集群中删除对等体\"></a>3.5 集群中删除对等体</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> -X DELETE http://localhost:<span class=\"hljs-number\">6333</span>/cluster/peer/<span class=\"hljs-number\">1</span> <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-6-检索集群详细信息\"><a href=\"#3-6-检索集群详细信息\" class=\"headerlink\" title=\"3.6 检索集群详细信息\"></a>3.6 检索集群详细信息</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> http://localhost:<span class=\"hljs-number\">6333</span>/collections/collection_name/cluster <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3-7-更新集群设置\"><a href=\"#3-7-更新集群设置\" class=\"headerlink\" title=\"3.7 更新集群设置\"></a>3.7 更新集群设置</h5><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\">curl -X POST http:<span class=\"hljs-comment\">//localhost:6333/collections/collection_name/cluster \\</span><br><span class=\"hljs-comment\">     -H &quot;api-key: &lt;apiKey&gt;&quot; \\</span><br><span class=\"hljs-comment\">     -H &quot;Content-Type: application/json&quot; \\</span><br><span class=\"hljs-comment\">     -d &#x27;&#123;</span><br>  <span class=\"hljs-string\">&quot;move_shard&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;shard_id&quot;</span>: <span class=\"hljs-number\">1</span>,<br>    <span class=\"hljs-string\">&quot;to_peer_id&quot;</span>: <span class=\"hljs-number\">1</span>,<br>    <span class=\"hljs-string\">&quot;from_peer_id&quot;</span>: <span class=\"hljs-number\">1</span><br>  &#125;<br>&#125;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4、监控\"><a href=\"#4、监控\" class=\"headerlink\" title=\"4、监控\"></a>4、监控</h4><h5 id=\"4-1-检索实例详细信息\"><a href=\"#4-1-检索实例详细信息\" class=\"headerlink\" title=\"4.1 检索实例详细信息\"></a>4.1 检索实例详细信息</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> http://localhost:<span class=\"hljs-number\">6333</span>/ <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-2-收集遥测数据\"><a href=\"#4-2-收集遥测数据\" class=\"headerlink\" title=\"4.2 收集遥测数据\"></a>4.2 收集遥测数据</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> http://localhost:<span class=\"hljs-number\">6333</span>/telemetry <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-3-收集-Prometheus-指标数据\"><a href=\"#4-3-收集-Prometheus-指标数据\" class=\"headerlink\" title=\"4.3 收集 Prometheus 指标数据\"></a>4.3 收集 Prometheus 指标数据</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> -G http://localhost:<span class=\"hljs-number\">6333</span>/metrics <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span> <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -d anonymize=true<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-4-检查写保护\"><a href=\"#4-4-检查写保护\" class=\"headerlink\" title=\"4.4 检查写保护\"></a>4.4 检查写保护</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> http://localhost:<span class=\"hljs-number\">6333</span>/locks <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-5-设置写保护\"><a href=\"#4-5-设置写保护\" class=\"headerlink\" title=\"4.5 设置写保护\"></a>4.5 设置写保护</h5><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\">curl -X POST http:<span class=\"hljs-comment\">//localhost:6333/locks \\</span><br><span class=\"hljs-comment\">     -H &quot;api-key: &lt;apiKey&gt;&quot; \\</span><br><span class=\"hljs-comment\">     -H &quot;Content-Type: application/json&quot; \\</span><br><span class=\"hljs-comment\">     -d &#x27;&#123;</span><br>  <span class=\"hljs-string\">&quot;write&quot;</span>: <span class=\"hljs-literal\">true</span><br>&#125;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4-6-单实例健康检查\"><a href=\"#4-6-单实例健康检查\" class=\"headerlink\" title=\"4.6 单实例健康检查\"></a>4.6 单实例健康检查</h5><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> http://localhost:<span class=\"hljs-number\">6333</span>/healthz <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: &lt;apiKey&gt;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"七、集群故障恢复\"><a href=\"#七、集群故障恢复\" class=\"headerlink\" title=\"七、集群故障恢复\"></a>七、集群故障恢复</h3><h5 id=\"1、使用复制的集合进行恢复\"><a href=\"#1、使用复制的集合进行恢复\" class=\"headerlink\" title=\"1、使用复制的集合进行恢复\"></a>1、使用复制的集合进行恢复</h5><figure class=\"highlight erlang-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs erlang-repl\">如果失败的节点数量少于集合的复制因子，那么您的集群应该仍然能够执行读取、搜索和更新查询。<br><br>现在，如果故障节点重新启动，共识机制将触发复制过程，以使用最新的更新来更新恢复节点，这些更新是它错过的。<br><br>如果故障节点永远不会重新启动，您可以在拥有<span class=\"hljs-number\">3</span>个或更多节点的集群中恢复丢失的分片。在较小的集群中，您无法恢复丢失的分片，因为恢复操作需要通过raft，这要求超过<span class=\"hljs-number\">50</span><span class=\"hljs-comment\">%的节点是健康的。</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2、使用复制的集合重新创建节点\"><a href=\"#2、使用复制的集合重新创建节点\" class=\"headerlink\" title=\"2、使用复制的集合重新创建节点\"></a>2、使用复制的集合重新创建节点</h5><p>如果一个节点失败且无法恢复，您应该将该失效节点从共识中排除，并创建一个空节点，确保数据目录为空。</p>\n<p>要从集群中排除失败的节点， 如有必要，应用<code>force</code>标志。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">curl</span> -X DELETE <span class=\"hljs-string\">&quot;http://localhost:6333/cluster/peer/2120809141859359?force=true&quot;</span> <span class=\"hljs-punctuation\">\\</span><br><span class=\"hljs-punctuation\"></span>     -H <span class=\"hljs-string\">&quot;api-key: qdrant@1133&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>当你创建一个新节点时，确保通过指定<code>--bootstrap</code> CLI参数并将其设置为任何正在运行的集群节点的URL，将其附加到现有集群。</p>\n<p>一旦新节点准备就绪并与集群同步，手动平衡分片</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\">curl -X POST http:<span class=\"hljs-comment\">//localhost:6333/collections/test/cluster \\</span><br><span class=\"hljs-comment\">     -H &quot;api-key: qdrant@1133&quot; \\</span><br><span class=\"hljs-comment\">     -H &quot;Content-Type: application/json&quot; \\</span><br><span class=\"hljs-comment\">     -d &#x27;&#123;</span><br>  <span class=\"hljs-string\">&quot;replicate_shard&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;shard_id&quot;</span>: <span class=\"hljs-number\">0</span>,<br>    <span class=\"hljs-string\">&quot;to_peer_id&quot;</span>: <span class=\"hljs-number\">2120809141859359</span>,<br>    <span class=\"hljs-string\">&quot;from_peer_id&quot;</span>: <span class=\"hljs-number\">3306291262481813</span><br>  &#125;<br>&#125;&#x27;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3、从快照恢复\"><a href=\"#3、从快照恢复\" class=\"headerlink\" title=\"3、从快照恢复\"></a>3、从快照恢复</h5><p>如果集群中没有数据的副本，仍然可以从快照中恢复，确保数据目录为空。</p>\n<p>按照相同的步骤分离失败的节点并在集群中创建一个新节点：</p>\n<figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autohotkey\">要从集群中排除失败的节点，请使用移除节点。如有必要，应用`force`标志。<br>创建一个新节点，确保通过指定`--bootstrap` CLI参数并附上任何正在运行的集群节点的URL，将其附加到现有集群。<br></code></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cmadnm5bq0000unb8cvbx2a8i","category_id":"cmadq4ywa00003fb8fawj0gz9","_id":"cmadq4ywd00033fb89psad7xy"},{"post_id":"cmadrwg8l0000jab8gddbfipn","category_id":"cmadq4ywa00003fb8fawj0gz9","_id":"cmaeodhn10001jeb82y0oh26x"}],"PostTag":[{"post_id":"cmadnm5bq0000unb8cvbx2a8i","tag_id":"cmadq4ywc00013fb852tib00o","_id":"cmadq4ywd00023fb832p85tqg"},{"post_id":"cmadrwg8l0000jab8gddbfipn","tag_id":"cmaeodhmv0000jeb852zeei5n","_id":"cmaeodhn20002jeb8e6kx17tr"}],"Tag":[{"name":"Doris","_id":"cmadq4ywc00013fb852tib00o"},{"name":"Qdrant","_id":"cmaeodhmv0000jeb852zeei5n"}]}}